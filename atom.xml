<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>WHY&#39;s Blog</title>
  
  
  <link href="https://wade9264.github.io/atom.xml" rel="self"/>
  
  <link href="https://wade9264.github.io/"/>
  <updated>2023-02-24T07:28:54.324Z</updated>
  <id>https://wade9264.github.io/</id>
  
  <author>
    <name>WHY</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>JS数据结构与算法</title>
    <link href="https://wade9264.github.io/posts/ca81d416.html"/>
    <id>https://wade9264.github.io/posts/ca81d416.html</id>
    <published>2023-02-24T07:28:03.000Z</published>
    <updated>2023-02-24T07:28:54.324Z</updated>
    
    
    
    
    <category term="学习笔记" scheme="https://wade9264.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="JavaScript" scheme="https://wade9264.github.io/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>前端单元测试</title>
    <link href="https://wade9264.github.io/posts/5313352d.html"/>
    <id>https://wade9264.github.io/posts/5313352d.html</id>
    <published>2023-02-23T09:17:07.000Z</published>
    <updated>2023-02-24T08:39:01.415Z</updated>
    
    <content type="html"><![CDATA[<h2 id="为什么要做单元测试"><a href="#为什么要做单元测试" class="headerlink" title="为什么要做单元测试"></a>为什么要做单元测试</h2><h2 id="Jest-单元测试实战"><a href="#Jest-单元测试实战" class="headerlink" title="Jest 单元测试实战"></a>Jest 单元测试实战</h2><h2 id="组件化-UI-测试实战"><a href="#组件化-UI-测试实战" class="headerlink" title="组件化 UI 测试实战"></a>组件化 UI 测试实战</h2><h2 id="状态管理数据流测试"><a href="#状态管理数据流测试" class="headerlink" title="状态管理数据流测试"></a>状态管理数据流测试</h2><h2 id="前端单元测试该如何落地"><a href="#前端单元测试该如何落地" class="headerlink" title="前端单元测试该如何落地"></a>前端单元测试该如何落地</h2>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;为什么要做单元测试&quot;&gt;&lt;a href=&quot;#为什么要做单元测试&quot; class=&quot;headerlink&quot; title=&quot;为什么要做单元测试&quot;&gt;&lt;/a&gt;为什么要做单元测试&lt;/h2&gt;&lt;h2 id=&quot;Jest-单元测试实战&quot;&gt;&lt;a href=&quot;#Jest-单元测试实战&quot; c</summary>
      
    
    
    
    <category term="学习笔记" scheme="https://wade9264.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="JavaScript" scheme="https://wade9264.github.io/tags/JavaScript/"/>
    
    <category term="Jest" scheme="https://wade9264.github.io/tags/Jest/"/>
    
  </entry>
  
  <entry>
    <title>打印时元素背景颜色丢失</title>
    <link href="https://wade9264.github.io/posts/f9c0c86.html"/>
    <id>https://wade9264.github.io/posts/f9c0c86.html</id>
    <published>2023-02-22T07:03:59.000Z</published>
    <updated>2023-02-24T08:18:16.429Z</updated>
    
    <content type="html"><![CDATA[<h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><p>在页面上元素有背景颜色，但<code>部分浏览器</code>在打印时，有背景颜色丢失的情况</p><h2 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h2><p>给要打印背景的元素添加样式</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">// Chrome</span><br><span class="line">-webkit-print-<span class="attribute">color</span>-adjust: exact;</span><br><span class="line"></span><br><span class="line">// Firefox</span><br><span class="line">print-<span class="attribute">color</span>-adjust: exact;</span><br><span class="line"><span class="attribute">color</span>-adjust: exact;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;问题&quot;&gt;&lt;a href=&quot;#问题&quot; class=&quot;headerlink&quot; title=&quot;问题&quot;&gt;&lt;/a&gt;问题&lt;/h2&gt;&lt;p&gt;在页面上元素有背景颜色，但&lt;code&gt;部分浏览器&lt;/code&gt;在打印时，有背景颜色丢失的情况&lt;/p&gt;
&lt;h2 id=&quot;解决方法&quot;&gt;&lt;a hr</summary>
      
    
    
    
    <category term="问题汇总" scheme="https://wade9264.github.io/categories/%E9%97%AE%E9%A2%98%E6%B1%87%E6%80%BB/"/>
    
    
    <category term="CSS" scheme="https://wade9264.github.io/tags/CSS/"/>
    
  </entry>
  
  <entry>
    <title>Vue离开或刷新页面弹窗提示</title>
    <link href="https://wade9264.github.io/posts/a0414938.html"/>
    <id>https://wade9264.github.io/posts/a0414938.html</id>
    <published>2023-02-22T02:26:39.000Z</published>
    <updated>2023-02-22T02:32:22.961Z</updated>
    
    
    
    
    <category term="学习笔记" scheme="https://wade9264.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="Vue" scheme="https://wade9264.github.io/tags/Vue/"/>
    
  </entry>
  
  <entry>
    <title>大文件上传和断点续传</title>
    <link href="https://wade9264.github.io/posts/e2d9dacd.html"/>
    <id>https://wade9264.github.io/posts/e2d9dacd.html</id>
    <published>2023-02-22T02:18:48.000Z</published>
    <updated>2023-02-22T02:22:32.779Z</updated>
    
    
    
    
    <category term="学习笔记" scheme="https://wade9264.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="JavaScript" scheme="https://wade9264.github.io/tags/JavaScript/"/>
    
    <category term="Vue" scheme="https://wade9264.github.io/tags/Vue/"/>
    
  </entry>
  
  <entry>
    <title>Error: [ElementForm] unpected width</title>
    <link href="https://wade9264.github.io/posts/f3b9426e.html"/>
    <id>https://wade9264.github.io/posts/f3b9426e.html</id>
    <published>2023-02-22T02:10:09.000Z</published>
    <updated>2023-02-22T02:15:00.333Z</updated>
    
    <content type="html"><![CDATA[<h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><p><code>Error: [ElementForm] unpected width</code><br>在使用 element 中页面切换的过程中，会出现这个报错。</p><h2 id="原因"><a href="#原因" class="headerlink" title="原因"></a>原因</h2><p>造成这个错误的原因是当组件中存在<code>v-show</code>时，并且<code>el-form</code>中<code>labelWidth</code>设为<code>auto</code>时，就会获取不到<code>label</code>的宽度。</p><h2 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h2><p>可以将<code>v-show</code>的地方改为<code>v-if</code>，每次重新渲染组件，或是<code>labelWidth</code>设为固定。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;问题&quot;&gt;&lt;a href=&quot;#问题&quot; class=&quot;headerlink&quot; title=&quot;问题&quot;&gt;&lt;/a&gt;问题&lt;/h2&gt;&lt;p&gt;&lt;code&gt;Error: [ElementForm] unpected width&lt;/code&gt;&lt;br&gt;在使用 element 中页面切换的</summary>
      
    
    
    
    <category term="问题汇总" scheme="https://wade9264.github.io/categories/%E9%97%AE%E9%A2%98%E6%B1%87%E6%80%BB/"/>
    
    
    <category term="Element" scheme="https://wade9264.github.io/tags/Element/"/>
    
  </entry>
  
  <entry>
    <title>前端性能优化之虚拟列表的实现</title>
    <link href="https://wade9264.github.io/posts/cf56b558.html"/>
    <id>https://wade9264.github.io/posts/cf56b558.html</id>
    <published>2023-02-22T01:31:19.000Z</published>
    <updated>2023-02-24T09:00:00.519Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>虚拟列表：简而言之，对于大量列表数据，仅渲染滚动区域内可视区域 所对应 数据源 的部分数据</p></blockquote><h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p>举个例子：<br>比如我要渲染 1000 条数据，每条数据高度 60px，如果我想把全部元素渲染，那么滚动区域至少需要 6000px 高但是呢，如果我渲染 1000 条数据，那么整个 dom 树就会出现巨量 dom 元素，如下图，B,C,D 区域将全部都是 dom 元素，一旦回流重绘就会非常卡顿。</p><p><img src="https://wade1999-images-1307558348.cos.ap-shanghai.myqcloud.com/202302220934510.webp" alt="img"></p><p>这种场景的优化方案就是采取虚拟列表去渲染，即我们要做的就是在滚动的时候只渲染可视区域对应的 dom 元素，即下图的 B，非可视区域内元素不去渲染（即 C,D 区域不渲染元素），这样的话可以减少大量非必要 DOM 渲染（C，D 区域用户也不需要看见，所以它的 dom 渲染是非必要的），去提高性能！</p><h2 id="实现原理"><a href="#实现原理" class="headerlink" title="实现原理"></a>实现原理</h2><blockquote><p>根据视口高度（上图中的 B 区域高度），父元素的滚动距离（scrollTop）及每一个列表元素 item 的平均高度，计算出当前 scrollTop 到 scrollTop+视口高度这段可视区域 对应数据源列表所需要展示的 部分数据，再将这部分数据展示在 B 区域内，对于隐藏滚动区域 C,D 使用 paddingTop&amp;&amp;paddingBottom 填充，保持整个滚动区域高度不变，同时监听滚动，滚动触发时动态改变可是区域内数据及 paddingTop&amp;&amp;paddingBottom 等数据</p></blockquote><ul><li>1，监听容器元素滚动</li><li>2，获取容器元素滚动距离 scrollTop</li><li>3，获取当前滚动距离（scrollTop）下可视区域首个需要渲染元素索引（in 数据源）startIndex，计算方式：startIndex = 滚动距离（scrollTop）/ 列表元素高度（itemHeight）</li><li>4，获取当前滚动距离（scrollTop）下可视区域最后一个需要渲染元素索引（in 数据源）endIndex，计算方式：endIndex = startIndex + 可视区域高度（viewHeight）/ 列表元素高度（itemHeight）</li><li>5，根据 startIndex 和 endIndex 获取数据源对应的 可视区域需要展示的数据 viewData，计算方式：viewData =dataSource（数据源）.slice(startIndex,endIndex+1)</li><li>6，计算 C 区域的高度，既 paddingTop，计算方式：paddingTop = startIndex*itemHeight（列表元素高度）</li><li>7，计算 D 区域的高度，既 paddingBottom，计算方式：paddingBottom = contentHeight（整个滚动区域高度，既 A 区域）-paddingTop-可视区域高度（viewHeight）</li><li>8，清除可是区域内上一次展示的数据，使用新数据 viewData 重新填充，且设置新的 paddingTop&amp;paddingBottom</li></ul><h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;ie=edge&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">      <span class="selector-tag">html</span>,</span></span><br><span class="line"><span class="language-css">      <span class="selector-tag">body</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">width</span>: <span class="number">100%</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">height</span>: <span class="number">100%</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">margin</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">      &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">      <span class="selector-id">#container</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">width</span>: <span class="number">100%</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">height</span>: <span class="number">100%</span>;</span></span><br><span class="line"><span class="language-css">      &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">      <span class="selector-id">#content</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">background-color</span>: pink;</span></span><br><span class="line"><span class="language-css">      &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;container&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;content&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">function</span> <span class="title function_">createVlist</span>(<span class="params">container, content, data_Source, item_Height</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">const</span> dataSource = data_Source; <span class="comment">// 数据源</span></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">const</span> itemHeight = item_Height; <span class="comment">// 每一行元素高度</span></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">const</span> viewHeight = container.<span class="property">clientHeight</span>; <span class="comment">// 视口高度（虚拟列表所展示部分高度）</span></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">const</span> contentHeight = itemHeight * dataSource.<span class="property">length</span>; <span class="comment">// 滚动区域高度</span></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">const</span> itemCount = <span class="title class_">Math</span>.<span class="title function_">ceil</span>(viewHeight / itemHeight); <span class="comment">// 视口元素数量</span></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// 设置容器元素overflow: auto （生成滚动区域，不被截取）</span></span></span><br><span class="line"><span class="language-javascript">        container.<span class="title function_">setAttribute</span>(<span class="string">&quot;style&quot;</span>, <span class="string">`overflow:auto`</span>);</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// 设置滚动区域高度</span></span></span><br><span class="line"><span class="language-javascript">        content.<span class="title function_">setAttribute</span>(<span class="string">&quot;style&quot;</span>, <span class="string">`height:<span class="subst">$&#123;contentHeight&#125;</span>px`</span>);</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">const</span> <span class="title function_">scrollCallback</span> = (<span class="params">e</span>) =&gt; &#123;</span></span><br><span class="line"><span class="language-javascript">          <span class="keyword">const</span> scrollTop = e.<span class="property">target</span>.<span class="property">scrollTop</span>; <span class="comment">// 容器元素的滚动距离</span></span></span><br><span class="line"><span class="language-javascript">          <span class="keyword">const</span> startIndex = <span class="title class_">Math</span>.<span class="title function_">ceil</span>(scrollTop / itemHeight); <span class="comment">// 视口第一个元素所在数据源中的索引</span></span></span><br><span class="line"><span class="language-javascript">          <span class="keyword">const</span> endIndex = startIndex + itemCount; <span class="comment">// 视口最后一个元素所在数据源中的索引</span></span></span><br><span class="line"><span class="language-javascript">          <span class="comment">// 根据startIndex endIndex找出数据源中需要展示在虚拟列表中的部分数据</span></span></span><br><span class="line"><span class="language-javascript">          <span class="keyword">const</span> itemList = dataSource.<span class="title function_">slice</span>(startIndex, endIndex + <span class="number">1</span>);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">          <span class="comment">// 滚动区域高度contentHeight =  滚动区域paddingTop + 视口高度 + 滚动区域paddingBottom</span></span></span><br><span class="line"><span class="language-javascript">          <span class="keyword">const</span> paddingTop = startIndex * itemHeight;</span></span><br><span class="line"><span class="language-javascript">          <span class="keyword">const</span> paddingBottom =</span></span><br><span class="line"><span class="language-javascript">            contentHeight - paddingTop - itemCount * itemHeight;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">          <span class="comment">// 动态调整滚动区域的paddingTop  paddingBottom 保证列表部分始终展示在视口</span></span></span><br><span class="line"><span class="language-javascript">          content.<span class="title function_">setAttribute</span>(</span></span><br><span class="line"><span class="language-javascript">            <span class="string">&quot;style&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="string">`padding-top:<span class="subst">$&#123;paddingTop&#125;</span>px;padding-bottom:<span class="subst">$&#123;paddingBottom&#125;</span>px`</span></span></span><br><span class="line"><span class="language-javascript">          );</span></span><br><span class="line"><span class="language-javascript">          <span class="comment">// 展示下一批次列表前删除上一批次列表数据</span></span></span><br><span class="line"><span class="language-javascript">          content.<span class="property">innerHTML</span> = <span class="string">&quot;&quot;</span>;</span></span><br><span class="line"><span class="language-javascript">          <span class="comment">// 动态调整每次滚动后对应的展示数据</span></span></span><br><span class="line"><span class="language-javascript">          <span class="keyword">for</span> (<span class="keyword">const</span> val <span class="keyword">of</span> itemList) &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">const</span> item = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&quot;div&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">            item.<span class="property">innerHTML</span> = val;</span></span><br><span class="line"><span class="language-javascript">            item.<span class="title function_">setAttribute</span>(</span></span><br><span class="line"><span class="language-javascript">              <span class="string">&quot;style&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">              <span class="string">`background-color:<span class="subst">$&#123;</span></span></span></span><br><span class="line"><span class="subst"><span class="string"><span class="language-javascript">                val % <span class="number">2</span> === <span class="number">0</span> ? <span class="string">&quot;red&quot;</span> : <span class="string">&quot;blue&quot;</span></span></span></span></span><br><span class="line"><span class="subst"><span class="string"><span class="language-javascript">              &#125;</span>;width:100%;height:<span class="subst">$&#123;item_Height&#125;</span>px`</span></span></span><br><span class="line"><span class="language-javascript">            );</span></span><br><span class="line"><span class="language-javascript">            content.<span class="title function_">appendChild</span>(item);</span></span><br><span class="line"><span class="language-javascript">          &#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;;</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// 添加容器元素的滚动监听</span></span></span><br><span class="line"><span class="language-javascript">        container.<span class="title function_">addEventListener</span>(<span class="string">&quot;scroll&quot;</span>, scrollCallback);</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// 初始首屏数据</span></span></span><br><span class="line"><span class="language-javascript">        <span class="title function_">scrollCallback</span>(&#123; <span class="attr">target</span>: container &#125;);</span></span><br><span class="line"><span class="language-javascript">      &#125;</span></span><br><span class="line"><span class="language-javascript">      <span class="comment">// 创建虚拟列表</span></span></span><br><span class="line"><span class="language-javascript">      <span class="title function_">createVlist</span>(</span></span><br><span class="line"><span class="language-javascript">        container,</span></span><br><span class="line"><span class="language-javascript">        content,</span></span><br><span class="line"><span class="language-javascript">        <span class="title class_">Array</span>.<span class="title function_">from</span>(&#123; <span class="attr">length</span>: <span class="number">100</span> &#125;, <span class="function">(<span class="params">v, i</span>) =&gt;</span> i),</span></span><br><span class="line"><span class="language-javascript">        <span class="number">60</span></span></span><br><span class="line"><span class="language-javascript">      );</span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="Vue-使用虚拟列表"><a href="#Vue-使用虚拟列表" class="headerlink" title="Vue 使用虚拟列表"></a>Vue 使用虚拟列表</h2><h3 id="安装-vue-virtual-scroller"><a href="#安装-vue-virtual-scroller" class="headerlink" title="安装 vue-virtual-scroller"></a>安装 <code>vue-virtual-scroller</code></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i vue-virtual-scroller</span><br></pre></td></tr></table></figure><h3 id="在main-js中引入"><a href="#在main-js中引入" class="headerlink" title="在main.js中引入"></a>在<code>main.js</code>中引入</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">&quot;vue-virtual-scroller/dist/vue-virtual-scroller.css&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> vuevirtualscroller <span class="keyword">from</span> <span class="string">&quot;vue-virtual-scroller&quot;</span>;</span><br><span class="line"><span class="title class_">Vue</span>.<span class="title function_">use</span>(vuevirtualscroller);</span><br></pre></td></tr></table></figure><h3 id="基础用法-固定大小"><a href="#基础用法-固定大小" class="headerlink" title="基础用法(固定大小)"></a>基础用法(固定大小)</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;RecycleScroller</span><br><span class="line">    class=&quot;scroller&quot;</span><br><span class="line">    :items=&quot;list&quot;</span><br><span class="line">    :item-size=&quot;32&quot;</span><br><span class="line">    key-field=&quot;id&quot;</span><br><span class="line">    v-slot=&quot;&#123; item &#125;&quot;</span><br><span class="line">  &gt;</span><br><span class="line">    &lt;div class=&quot;user&quot;&gt;</span><br><span class="line">      &#123;&#123; item.name &#125;&#125;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/RecycleScroller&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">  name: &quot;Home&quot;,</span><br><span class="line">  components: &#123;&#125;,</span><br><span class="line">  data() &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      items: [],</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">  created() &#123;</span><br><span class="line">    this.getData();</span><br><span class="line">  &#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    getData() &#123;</span><br><span class="line">      for (let i = 0; i &lt; 200000; i++) &#123;</span><br><span class="line">        this.items.push(&#123; title: &quot;ssadqwesadwqe&quot;, id: i &#125;);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style lang=&quot;less&quot; scoped&gt;</span><br><span class="line">.scroller &#123;</span><br><span class="line">  height: 300px;</span><br><span class="line">  background-color: rgba(0, 0, 0, 0.1);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.user &#123;</span><br><span class="line">  height: 32%;</span><br><span class="line">  padding: 0 12px;</span><br><span class="line">  display: flex;</span><br><span class="line">  align-items: center;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><p>使用<code>&lt;RecycleScroller&gt;</code>，<code>items</code>绑定数据源，<code>item-size</code>设置的子元素的高度,<strong>父子元素高度都必须固定</strong></p><hr><h3 id="上拉加载-固定大小"><a href="#上拉加载-固定大小" class="headerlink" title="上拉加载(固定大小)"></a>上拉加载(固定大小)</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;RecycleScroller</span><br><span class="line">      class=&quot;scroller&quot;</span><br><span class="line">      :items=&quot;items&quot;</span><br><span class="line">      :item-size=&quot;150&quot;</span><br><span class="line">      :emitUpdate=&quot;true&quot;</span><br><span class="line">      @update=&quot;update&quot;</span><br><span class="line">      v-if=&quot;items.length&quot;</span><br><span class="line">    &gt;</span><br><span class="line">      &lt;template slot-scope=&quot;props&quot;&gt;</span><br><span class="line">        &lt;li :key=&quot;props.itemKey&quot;&gt;</span><br><span class="line">          &lt;div&gt;&#123;&#123; props.item.title &#125;&#125;&lt;/div&gt;</span><br><span class="line">          &lt;img :src=&quot;props.item.img&quot; alt=&quot;&quot; /&gt;</span><br><span class="line">        &lt;/li&gt;</span><br><span class="line">      &lt;/template&gt;</span><br><span class="line">    &lt;/RecycleScroller&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">  name: &quot;test&quot;,</span><br><span class="line">  data() &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      items: [],</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">  created() &#123;</span><br><span class="line">    this.getData();</span><br><span class="line">  &#125;,</span><br><span class="line">  mounted() &#123;&#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    getData() &#123;</span><br><span class="line">      let arr = [];</span><br><span class="line">      for (let i = 1; i &lt; 20; i++) &#123;</span><br><span class="line">        arr.push(&#123;</span><br><span class="line">          id: i + 1,</span><br><span class="line">          img: &quot;http://dummyimage.com/200x100/FF6600&quot;,</span><br><span class="line">          time: &quot;2003-02-02&quot;,</span><br><span class="line">          title: &quot;hahahha&quot;,</span><br><span class="line">        &#125;);</span><br><span class="line">      &#125;</span><br><span class="line">      this.items = arr;</span><br><span class="line">    &#125;,</span><br><span class="line">    update(start, end) &#123;</span><br><span class="line">      if (end === this.items.length) &#123;</span><br><span class="line">        let temp = [];</span><br><span class="line">        let id = this.items[this.items.length - 1].id;</span><br><span class="line">        let arr = [];</span><br><span class="line">        for (let i = 1; i &lt; 20; i++) &#123;</span><br><span class="line">          arr.push(&#123;</span><br><span class="line">            id: id + i,</span><br><span class="line">            img: &quot;http://dummyimage.com/200x100/FF6600&quot;,</span><br><span class="line">            time: &quot;2003-02-02&quot;,</span><br><span class="line">            title: &quot;hahahha&quot;,</span><br><span class="line">          &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">        let res = &#123;</span><br><span class="line">          code: 200,</span><br><span class="line">          data: arr,</span><br><span class="line">        &#125;;</span><br><span class="line">        temp = [...this.items, ...res.data];</span><br><span class="line">        this.items = temp;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;style lang=&quot;css&quot; scoped&gt;</span><br><span class="line">.scroller &#123;</span><br><span class="line">  height: 300px;</span><br><span class="line">  background-color: #ccc;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.user &#123;</span><br><span class="line">  height: 150px;</span><br><span class="line">  padding: 0 12px;</span><br><span class="line">  display: flex;</span><br><span class="line">  align-items: center;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><p>加入<code>:emitUpdate=“true”</code>和<code>@update=“update”</code>,<strong>emitUpdate 必须设置为 true</strong>,<code>update</code>中定义数据更新的方法</p><hr><h3 id="上拉加载-可变大小"><a href="#上拉加载-可变大小" class="headerlink" title="上拉加载(可变大小)"></a>上拉加载(可变大小)</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;DynamicScroller</span><br><span class="line">      :items=&quot;items&quot;</span><br><span class="line">      :min-item-size=&quot;54&quot;</span><br><span class="line">      class=&quot;scroller&quot;</span><br><span class="line">      :emitUpdate=&quot;true&quot;</span><br><span class="line">      @update=&quot;update&quot;</span><br><span class="line">      v-if=&quot;items.length&quot;</span><br><span class="line">    &gt;</span><br><span class="line">      &lt;template v-slot=&quot;&#123; item, index, active &#125;&quot;&gt;</span><br><span class="line">        &lt;DynamicScrollerItem</span><br><span class="line">          :item=&quot;item&quot;</span><br><span class="line">          :active=&quot;active&quot;</span><br><span class="line">          :size-dependencies=&quot;[item.message]&quot;</span><br><span class="line">          :data-index=&quot;index&quot;</span><br><span class="line">        &gt;</span><br><span class="line">          &lt;li class=&quot;single-item&quot; :key=&quot;item.id&quot;&gt;</span><br><span class="line">            &lt;div class=&quot;right-info&quot;&gt;</span><br><span class="line">              &lt;span&gt;标题：&#123;&#123; item.title &#125;&#125;&lt;/span&gt;</span><br><span class="line">              &lt;span&gt;项目数量：&#123;&#123; item.id &#125;&#125;&lt;/span&gt;</span><br><span class="line">              &lt;span&gt;项目时间:&#123;&#123; item.time &#125;&#125;&lt;/span&gt;</span><br><span class="line">              &lt;span&gt;项目描述:&#123;&#123; item.des &#125;&#125;&lt;/span&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">          &lt;/li&gt;</span><br><span class="line">        &lt;/DynamicScrollerItem&gt;</span><br><span class="line">      &lt;/template&gt;</span><br><span class="line">    &lt;/DynamicScroller&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">  name: &quot;test&quot;,</span><br><span class="line">  data() &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      items: [],</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">  created() &#123;</span><br><span class="line">    this.getData();</span><br><span class="line">  &#125;,</span><br><span class="line">  mounted() &#123;&#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    getData() &#123;</span><br><span class="line">      let arr = [];</span><br><span class="line">      for (let i = 1; i &lt; 20; i++) &#123;</span><br><span class="line">        arr.push(&#123;</span><br><span class="line">          id: i + 1,</span><br><span class="line">          img: &quot;http://dummyimage.com/200x100/FF6600&quot;,</span><br><span class="line">          time: &quot;2003-02-02&quot;,</span><br><span class="line">          title: &quot;hahahha&quot;,</span><br><span class="line">        &#125;);</span><br><span class="line">      &#125;</span><br><span class="line">      this.items = arr;</span><br><span class="line">    &#125;,</span><br><span class="line">    update(start, end) &#123;</span><br><span class="line">      if (end === this.items.length) &#123;</span><br><span class="line">        let temp = [];</span><br><span class="line">        let id = this.items[this.items.length - 1].id;</span><br><span class="line">        let arr = [];</span><br><span class="line">        for (let i = 1; i &lt; 20; i++) &#123;</span><br><span class="line">          arr.push(&#123;</span><br><span class="line">            id: id + i,</span><br><span class="line">            img: &quot;http://dummyimage.com/200x100/FF6600&quot;,</span><br><span class="line">            time: &quot;2003-02-02&quot;,</span><br><span class="line">            title: &quot;hahahha&quot;,</span><br><span class="line">          &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">        let res = &#123;</span><br><span class="line">          code: 200,</span><br><span class="line">          data: arr,</span><br><span class="line">        &#125;;</span><br><span class="line">        temp = [...this.items, ...res.data];</span><br><span class="line">        this.items = temp;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;style lang=&quot;less&quot; scoped&gt;</span><br><span class="line">.scroller &#123;</span><br><span class="line">  height: calc(100vh - 3rem);</span><br><span class="line">  background-color: #ccc;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.user &#123;</span><br><span class="line">  height: 32%;</span><br><span class="line">  padding: 0 12px;</span><br><span class="line">  display: flex;</span><br><span class="line">&#125;</span><br><span class="line">.single-item &#123;</span><br><span class="line">  display: flex;</span><br><span class="line">  justify-content: flex-start;</span><br><span class="line">  align-items: center;</span><br><span class="line">  border-bottom: 1px solid rgb(187, 167, 167);</span><br><span class="line">  .left-pic &#123;</span><br><span class="line">    width: 200px;</span><br><span class="line">    img &#123;</span><br><span class="line">      width: 200px;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  .right-info &#123;</span><br><span class="line">    padding-left: 20px;</span><br><span class="line">    text-align: left;</span><br><span class="line">    span &#123;</span><br><span class="line">      display: block;</span><br><span class="line">      &amp;:last-child &#123;</span><br><span class="line">        word-break: break-all;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><hr><h2 id="vue-virtual-scroller"><a href="#vue-virtual-scroller" class="headerlink" title="vue-virtual-scroller"></a>vue-virtual-scroller</h2><a class="tag-Link" target="_blank" href="https://github.com/Akryum/vue-virtual-scroller/blob/master/packages/vue-virtual-scroller/README.md"><div class="tag-link-tips">引用站外地址</div><div class="tag-link-bottom"><div class="tag-link-left" style="background-image: url(https://api.iowen.cn/favicon/github.com/Akryum/vue-virtual-scroller/blob/master/packages/vue-virtual-scroller/README.md.png);"></div><div class="tag-link-right"><div class="tag-link-title">vue-virtual-scroller 官方文档</div><div class="tag-link-sitename">超快滚动任意数量的数据</div></div><i class="fa-solid fa-angle-right"></i></div></a><h3 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h3><table><thead><tr><th align="left">参数</th><th align="left">说明</th><th align="left">默认值</th></tr></thead><tbody><tr><td align="left">items</td><td align="left">要在滚动条中显示的项目列表。</td><td align="left">-</td></tr><tr><td align="left">direction</td><td align="left">滚动方向(<code>vertical</code>或<code>horizontal</code>)</td><td align="left">vertical</td></tr><tr><td align="left">itemSize</td><td align="left">以像素为单位显示项目的高度（或水平模式下的宽度），用于计算滚动大小和位置。<br>如果设置为（默认值），它将使用可变大小模式。</td><td align="left">null</td></tr><tr><td align="left">gridItems</td><td align="left">在同一行上显示多个项目以创建网格。您必须输入一个值才能使用此道具（不支持动态大小）。</td><td align="left">-</td></tr><tr><td align="left">itemSecondarySize</td><td align="left">设置时网格中项目的大小（垂直模式下的宽度，水平模式下的高度）。<br>如果未设置，它将使用 <code>gridItems</code> <code>itemSecondarySize</code> <code>itemSize</code> 的值。</td><td align="left">-</td></tr><tr><td align="left">minItemSize</td><td align="left">如果项目的高度（或水平模式下的宽度）未知，则使用的最小大小。</td><td align="left">-</td></tr><tr><td align="left">sizeField</td><td align="left">用于在可变大小模式下获取项目大小的字段。</td><td align="left">size</td></tr><tr><td align="left">typeField</td><td align="left">用于区分列表中不同类型的组件的字段。对于每种不同的类型，将创建一个回收物品池。</td><td align="left">type</td></tr><tr><td align="left">keyField</td><td align="left">用于标识项目和优化管理渲染视图的字段。</td><td align="left">id</td></tr><tr><td align="left">pageMode</td><td align="left">启用页面模式。</td><td align="left">false</td></tr><tr><td align="left">prerender</td><td align="left">为服务器端呈现 （SSR） 渲染固定数量的项目。</td><td align="left">0</td></tr><tr><td align="left">buffer</td><td align="left">要添加到滚动可见区域边缘以开始渲染更远的项目的像素量。</td><td align="left">200</td></tr><tr><td align="left">emitUpdate</td><td align="left">每次更新虚拟滚动条内容时发出一个事件（可能会影响性能）。</td><td align="left">false</td></tr><tr><td align="left">listClass</td><td align="left">添加到项目列表包装器的自定义类。</td><td align="left">-</td></tr><tr><td align="left">itemClass</td><td align="left">添加到每个项目的自定义类。</td><td align="left">-</td></tr><tr><td align="left">listTag</td><td align="left">要呈现为列表包装器的元素。</td><td align="left">div</td></tr><tr><td align="left">itemTag</td><td align="left">要呈现为列表项（默认槽内容的直接父级）的元素。</td><td align="left">div</td></tr></tbody></table><h3 id="事件"><a href="#事件" class="headerlink" title="事件"></a>事件</h3><table><thead><tr><th align="left">事件名</th><th align="left">说明</th><th align="left">参数</th></tr></thead><tbody><tr><td align="left">resize</td><td align="left">当滚动条的大小更改时发出。</td><td align="left"></td></tr><tr><td align="left">visible</td><td align="left">当滚动条认为自己在页面中可见时发出。</td><td align="left"></td></tr><tr><td align="left">hidden</td><td align="left">当滚动条隐藏在页面中时发出。</td><td align="left"></td></tr><tr><td align="left">update</td><td align="left">每次更新视图时发出。<code>emitUpdate</code> 需设置为 <code>true</code></td><td align="left">startIndex, endIndex, visibleStartIndex, visibleEndIndex</td></tr><tr><td align="left">scroll-start</td><td align="left">渲染第一项时发出。</td><td align="left"></td></tr><tr><td align="left">scroll-end</td><td align="left">呈现最后一项时发出。</td><td align="left"></td></tr></tbody></table>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;虚拟列表：简而言之，对于大量列表数据，仅渲染滚动区域内可视区域 所对应 数据源 的部分数据&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;介绍&quot;&gt;&lt;a href=&quot;#介绍&quot; class=&quot;headerlink&quot; title=&quot;介绍&quot;&gt;&lt;/a&gt;</summary>
      
    
    
    
    <category term="学习笔记" scheme="https://wade9264.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="JavaScript" scheme="https://wade9264.github.io/tags/JavaScript/"/>
    
    <category term="Vue" scheme="https://wade9264.github.io/tags/Vue/"/>
    
  </entry>
  
  <entry>
    <title>git 退回历史版本</title>
    <link href="https://wade9264.github.io/posts/4201199c.html"/>
    <id>https://wade9264.github.io/posts/4201199c.html</id>
    <published>2023-02-21T08:37:00.000Z</published>
    <updated>2023-02-21T09:21:02.081Z</updated>
    
    <content type="html"><![CDATA[<p>这是一个悲伤的故事 😢</p><h2 id="方法一：直接回退版本"><a href="#方法一：直接回退版本" class="headerlink" title="方法一：直接回退版本"></a>方法一：直接回退版本</h2><blockquote><p>如果想恢复到之前某个提交的版本，且那个版本之后提交的版本我们都不要了，就可以用这种方法。</p></blockquote><h3 id="查看历史版本号"><a href="#查看历史版本号" class="headerlink" title="查看历史版本号"></a>查看历史版本号</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">log</span> -10 <span class="comment">#查看最近10次commit的记录</span></span><br></pre></td></tr></table></figure><h3 id="版本回退"><a href="#版本回退" class="headerlink" title="版本回退"></a>版本回退</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git reset --hard 目标版本号</span><br></pre></td></tr></table></figure><h3 id="代码提交"><a href="#代码提交" class="headerlink" title="代码提交"></a>代码提交</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git push -f</span><br><span class="line"><span class="comment"># 此时如果用“git push”会报错，因为我们本地库 HEAD 指向的版本比远程库的要旧。</span></span><br><span class="line"><span class="comment"># 所以我们要用“git push -f”强制推上去，就可以了。</span></span><br></pre></td></tr></table></figure><hr><h2 id="方法二：反做历史版本"><a href="#方法二：反做历史版本" class="headerlink" title="方法二：反做历史版本"></a>方法二：反做历史版本</h2><blockquote><p>如果我们想撤销之前的某一版本，但是又想保留该目标版本后面的版本，记录下这整个版本变动流程，就可以用这种方法。</p></blockquote><h3 id="查看历史版本号-1"><a href="#查看历史版本号-1" class="headerlink" title="查看历史版本号"></a>查看历史版本号</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">log</span> -10 <span class="comment">#查看最近10次commit的记录</span></span><br></pre></td></tr></table></figure><h3 id="反做目标版本"><a href="#反做目标版本" class="headerlink" title="反做目标版本"></a>反做目标版本</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git revert -n 目标版本号</span><br><span class="line"><span class="comment"># 注意：这里可能会出现冲突，那么需要手动修改冲突的文件。而且要git add 文件名。</span></span><br></pre></td></tr></table></figure><h3 id="代码提交-1"><a href="#代码提交-1" class="headerlink" title="代码提交"></a>代码提交</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git commit -m <span class="string">&quot;XXXX&quot;</span></span><br><span class="line"><span class="comment"># 此时可以用“git log”查看本地的版本信息，可见多生成了一个新的版本</span></span><br></pre></td></tr></table></figure><h3 id="代码提交-2"><a href="#代码提交-2" class="headerlink" title="代码提交"></a>代码提交</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;这是一个悲伤的故事 😢&lt;/p&gt;
&lt;h2 id=&quot;方法一：直接回退版本&quot;&gt;&lt;a href=&quot;#方法一：直接回退版本&quot; class=&quot;headerlink&quot; title=&quot;方法一：直接回退版本&quot;&gt;&lt;/a&gt;方法一：直接回退版本&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;如果想恢复</summary>
      
    
    
    
    <category term="问题汇总" scheme="https://wade9264.github.io/categories/%E9%97%AE%E9%A2%98%E6%B1%87%E6%80%BB/"/>
    
    
    <category term="git" scheme="https://wade9264.github.io/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>&lt;el-table&gt;底部滚动条无法拖动问题解决</title>
    <link href="https://wade9264.github.io/posts/5f510e8f.html"/>
    <id>https://wade9264.github.io/posts/5f510e8f.html</id>
    <published>2023-02-08T06:57:00.000Z</published>
    <updated>2023-02-17T16:41:14.619Z</updated>
    
    <content type="html"><![CDATA[<h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><p><code>el-table</code>中的<code>el-table-column</code>提供了一个<code>fixed</code>属性设置固定列，但是设置了之后发现表格的滚动条无法拖动了，</p><h2 id="原因"><a href="#原因" class="headerlink" title="原因"></a>原因</h2><p>滚动条被固定列生成的元素<strong>覆盖</strong>了。</p><h2 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.el-table</span> &#123;</span><br><span class="line">  <span class="selector-class">.el-table__fixed</span> &#123;</span><br><span class="line">    // 左固定列</span><br><span class="line">    <span class="attribute">height</span>: auto <span class="meta">!important</span>;</span><br><span class="line">    <span class="attribute">bottom</span>: <span class="number">18px</span>; // 改为自动高度后，设置与父容器的底部距离，高度会动态改变，值可以设置比滚动条的高度稍微大一些</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="selector-class">.el-table__fixed-right</span> &#123;</span><br><span class="line">    // 右固定列</span><br><span class="line">    <span class="attribute">height</span>: auto <span class="meta">!important</span>;</span><br><span class="line">    <span class="attribute">bottom</span>: <span class="number">18px</span>; // 改为自动高度后，设置与父容器的底部距离，高度会动态改变，值可以设置比滚动条的高度稍微大一些</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.el-table--scrollable-x</span> <span class="selector-class">.el-table__body-wrapper</span> &#123;</span><br><span class="line">  <span class="attribute">z-index</span>: <span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;问题&quot;&gt;&lt;a href=&quot;#问题&quot; class=&quot;headerlink&quot; title=&quot;问题&quot;&gt;&lt;/a&gt;问题&lt;/h2&gt;&lt;p&gt;&lt;code&gt;el-table&lt;/code&gt;中的&lt;code&gt;el-table-column&lt;/code&gt;提供了一个&lt;code&gt;fixed&lt;/c</summary>
      
    
    
    
    <category term="问题汇总" scheme="https://wade9264.github.io/categories/%E9%97%AE%E9%A2%98%E6%B1%87%E6%80%BB/"/>
    
    
    <category term="Element" scheme="https://wade9264.github.io/tags/Element/"/>
    
    <category term="Vue" scheme="https://wade9264.github.io/tags/Vue/"/>
    
  </entry>
  
  <entry>
    <title>在Vue中实现拖拽功能</title>
    <link href="https://wade9264.github.io/posts/63b8f629.html"/>
    <id>https://wade9264.github.io/posts/63b8f629.html</id>
    <published>2023-02-06T07:47:23.000Z</published>
    <updated>2023-02-14T12:56:24.221Z</updated>
    
    
    
    
    <category term="Vue" scheme="https://wade9264.github.io/categories/Vue/"/>
    
    
    <category term="Vue" scheme="https://wade9264.github.io/tags/Vue/"/>
    
  </entry>
  
  <entry>
    <title>使用watermark.js给网页添加水印</title>
    <link href="https://wade9264.github.io/posts/14824453.html"/>
    <id>https://wade9264.github.io/posts/14824453.html</id>
    <published>2023-02-06T07:41:26.000Z</published>
    <updated>2023-02-09T14:21:52.859Z</updated>
    
    
    
    
    <category term="JavaScript" scheme="https://wade9264.github.io/categories/JavaScript/"/>
    
    
    <category term="JavaScript" scheme="https://wade9264.github.io/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>浏览器调用摄像头获取媒体流，并实现拍照功能</title>
    <link href="https://wade9264.github.io/posts/67c97ff3.html"/>
    <id>https://wade9264.github.io/posts/67c97ff3.html</id>
    <published>2022-12-30T11:13:48.000Z</published>
    <updated>2023-02-17T16:44:21.452Z</updated>
    
    
    
    
    <category term="JavaScript" scheme="https://wade9264.github.io/categories/JavaScript/"/>
    
    
    <category term="JavaScript" scheme="https://wade9264.github.io/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>前端实现Excel表格上传解析与导出</title>
    <link href="https://wade9264.github.io/posts/a913bf31.html"/>
    <id>https://wade9264.github.io/posts/a913bf31.html</id>
    <published>2022-12-16T10:32:16.000Z</published>
    <updated>2023-02-15T11:01:45.916Z</updated>
    
    <content type="html"><![CDATA[<h1 id="读取-excel-表格"><a href="#读取-excel-表格" class="headerlink" title="读取 excel 表格"></a>读取 excel 表格</h1><h2 id="安装-xlsx"><a href="#安装-xlsx" class="headerlink" title="安装 xlsx"></a>安装 xlsx</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install xlsx --save-dev</span><br></pre></td></tr></table></figure><h2 id="引入插件"><a href="#引入插件" class="headerlink" title="引入插件"></a>引入插件</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">import * as xlsx from <span class="string">&quot;xlsx/xlsx.mjs&quot;</span>;</span><br></pre></td></tr></table></figure><h2 id="读取-excel-表格-1"><a href="#读取-excel-表格-1" class="headerlink" title="读取 excel 表格"></a>读取 excel 表格</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;form ref=&quot;fileRef&quot;&gt;</span><br><span class="line">    &lt;input</span><br><span class="line">      type=&quot;file&quot;</span><br><span class="line">      ref=&quot;upload&quot;</span><br><span class="line">      accept=&quot;.xls,.xlsx&quot;</span><br><span class="line">      @change=&quot;readExcel&quot;</span><br><span class="line">      class=&quot;upload-button&quot;</span><br><span class="line">    /&gt;</span><br><span class="line">    &lt;span class=&quot;tips&quot;&gt;支持扩展名：.xls .xlsx，且不超过100M&lt;/span&gt;</span><br><span class="line">  &lt;/form&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">import * as XLSX from &quot;xlsx/xlsx.mjs&quot;;</span><br><span class="line">export default &#123;</span><br><span class="line">  methods: &#123;</span><br><span class="line">    readExcel(e) &#123;</span><br><span class="line">      const files = e.target.files;</span><br><span class="line">      const fileReader = new FileReader();</span><br><span class="line">      fileReader.onload = (ev) =&gt; &#123;</span><br><span class="line">        console.log(123);</span><br><span class="line">        try &#123;</span><br><span class="line">          const data = ev.target.result;</span><br><span class="line">          const workbook = XLSX.read(data, &#123;</span><br><span class="line">            type: &quot;binary&quot;,</span><br><span class="line">          &#125;); // 读取数据</span><br><span class="line">          const wsname = workbook.SheetNames[0]; // 取第一张表</span><br><span class="line">          const ws = XLSX.utils.sheet_to_json(workbook.Sheets[wsname]); // 生成json表格内容</span><br><span class="line">          // const ws1 = XLSX.utils.sheet_to_slk(workbook.Sheets[wsname]) // 输出表格对应位置是什么值</span><br><span class="line">          // const ws2 = XLSX.utils.sheet_to_html(workbook.Sheets[wsname]) // 生成HTML输出</span><br><span class="line">          // const ws3 = XLSX.utils.sheet_to_csv(workbook.Sheets[wsname]) // 生成分隔符分隔值输出</span><br><span class="line">          // const ws4 = XLSX.utils.sheet_to_formulae(workbook.Sheets[wsname]) // 生成公式列表（具有值回退）</span><br><span class="line">          // const ws5 = XLSX.utils.sheet_to_txt(workbook.Sheets[wsname]) // 生成UTF16格式的文本</span><br><span class="line">          // const ws = xlsx.utils.sheet_to_json(workbook.Sheets[wsname], &#123;header: 1,defval: &quot;&quot;&#125;); // 生成json表格内容</span><br><span class="line">          console.log(ws);</span><br><span class="line">          this.$refs.fileRef.reset(); // 清空form</span><br><span class="line">        &#125; catch (e) &#123;</span><br><span class="line">          return false;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;;</span><br><span class="line">      fileReader.readAsBinaryString(files[0]);</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h1 id="导出-excel-表格"><a href="#导出-excel-表格" class="headerlink" title="导出 excel 表格"></a>导出 excel 表格</h1><p>1.引入依赖：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install xlsx@0.17.0 file-saver@2.0.5 --save</span><br></pre></td></tr></table></figure><p>注：xlsx 要指定版本不然会报错</p><p>2.封装导出的 js 文件</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> fs <span class="keyword">from</span> <span class="string">&quot;file-saver&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="variable constant_">XLSX</span> <span class="keyword">from</span> <span class="string">&quot;xlsx&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">function</span> <span class="title function_">xlsx</span>(<span class="params">json, fields, filename = <span class="string">&quot;.xlsx&quot;</span></span>) &#123;</span><br><span class="line">  <span class="comment">//导出xlsx</span></span><br><span class="line">  json.<span class="title function_">forEach</span>(<span class="function">(<span class="params">item</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i <span class="keyword">in</span> item) &#123;</span><br><span class="line">      <span class="keyword">if</span> (fields.<span class="title function_">hasOwnProperty</span>(i)) &#123;</span><br><span class="line">        item[fields[i]] = item[i];</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">delete</span> item[i]; <span class="comment">//删除原先的对象属性</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line">  <span class="keyword">let</span> sheetName = filename; <span class="comment">//excel的文件名称</span></span><br><span class="line">  <span class="keyword">let</span> wb = <span class="variable constant_">XLSX</span>.<span class="property">utils</span>.<span class="title function_">book_new</span>(); <span class="comment">//工作簿对象包含一SheetNames数组，以及一个表对象映射表名称到表对象。XLSX.utils.book_new实用函数创建一个新的工作簿对象。</span></span><br><span class="line">  <span class="keyword">let</span> ws = <span class="variable constant_">XLSX</span>.<span class="property">utils</span>.<span class="title function_">json_to_sheet</span>(json, &#123; <span class="attr">header</span>: <span class="title class_">Object</span>.<span class="title function_">values</span>(fields) &#125;); <span class="comment">//将JS对象数组转换为工作表。</span></span><br><span class="line">  wb.<span class="property">SheetNames</span>.<span class="title function_">push</span>(sheetName);</span><br><span class="line">  wb.<span class="property">Sheets</span>[sheetName] = ws;</span><br><span class="line">  <span class="keyword">const</span> defaultCellStyle = &#123;</span><br><span class="line">    <span class="attr">font</span>: &#123; <span class="attr">name</span>: <span class="string">&quot;Verdana&quot;</span>, <span class="attr">sz</span>: <span class="number">13</span>, <span class="attr">color</span>: <span class="string">&quot;FF00FF88&quot;</span> &#125;,</span><br><span class="line">    <span class="attr">fill</span>: &#123; <span class="attr">fgColor</span>: &#123; <span class="attr">rgb</span>: <span class="string">&quot;FFFFAA00&quot;</span> &#125; &#125;,</span><br><span class="line">  &#125;; <span class="comment">//设置表格的样式</span></span><br><span class="line">  <span class="keyword">let</span> wopts = &#123;</span><br><span class="line">    <span class="attr">bookType</span>: <span class="string">&quot;xlsx&quot;</span>,</span><br><span class="line">    <span class="attr">bookSST</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="attr">type</span>: <span class="string">&quot;binary&quot;</span>,</span><br><span class="line">    <span class="attr">cellStyles</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">defaultCellStyle</span>: defaultCellStyle,</span><br><span class="line">    <span class="attr">showGridLines</span>: <span class="literal">false</span>,</span><br><span class="line">  &#125;; <span class="comment">//写入的样式</span></span><br><span class="line">  <span class="keyword">let</span> wbout = <span class="variable constant_">XLSX</span>.<span class="title function_">write</span>(wb, wopts);</span><br><span class="line">  <span class="keyword">let</span> blob = <span class="keyword">new</span> <span class="title class_">Blob</span>([<span class="title function_">s2ab</span>(wbout)], &#123; <span class="attr">type</span>: <span class="string">&quot;application/octet-stream&quot;</span> &#125;);</span><br><span class="line">  fs.<span class="title function_">saveAs</span>(blob, filename + <span class="string">&quot;.xlsx&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">s2ab</span> = (<span class="params">s</span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">var</span> buf;</span><br><span class="line">  <span class="keyword">if</span> (<span class="keyword">typeof</span> <span class="title class_">ArrayBuffer</span> !== <span class="string">&quot;undefined&quot;</span>) &#123;</span><br><span class="line">    buf = <span class="keyword">new</span> <span class="title class_">ArrayBuffer</span>(s.<span class="property">length</span>);</span><br><span class="line">    <span class="keyword">var</span> view = <span class="keyword">new</span> <span class="title class_">Uint8Array</span>(buf);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i != s.<span class="property">length</span>; ++i) view[i] = s.<span class="title function_">charCodeAt</span>(i) &amp; <span class="number">0xff</span>;</span><br><span class="line">    <span class="keyword">return</span> buf;</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    buf = <span class="keyword">new</span> <span class="title class_">Array</span>(s.<span class="property">length</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i != s.<span class="property">length</span>; ++i) buf[i] = s.<span class="title function_">charCodeAt</span>(i) &amp; <span class="number">0xff</span>;</span><br><span class="line">    <span class="keyword">return</span> buf;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>3.在用导出的文件里引入 xlsx.js 文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div id=&quot;app&quot;&gt;</span><br><span class="line">    &lt;div&gt;&lt;el-button type=&quot;success&quot; @click=&quot;outExcel&quot;&gt;导出excel&lt;/el-button&gt;&lt;/div&gt;</span><br><span class="line">    &lt;el-table :data=&quot;jsonData&quot; stripe style=&quot;width: 100%&quot;&gt;</span><br><span class="line">      &lt;el-table-column prop=&quot;id&quot; label=&quot;学号&quot; width=&quot;180&quot;&gt; &lt;/el-table-column&gt;</span><br><span class="line">      &lt;el-table-column prop=&quot;name&quot; label=&quot;姓名&quot; width=&quot;180&quot;&gt; &lt;/el-table-column&gt;</span><br><span class="line">      &lt;el-table-column prop=&quot;age&quot; label=&quot;年龄&quot;&gt; &lt;/el-table-column&gt;</span><br><span class="line">      &lt;el-table-column prop=&quot;classes&quot; label=&quot;学院&quot;&gt; &lt;/el-table-column&gt;</span><br><span class="line">    &lt;/el-table&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">import &#123; xlsx &#125; from &quot;./utils/xlsx&quot;;</span><br><span class="line"></span><br><span class="line">export default &#123;</span><br><span class="line">  data() &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      jsonData: [</span><br><span class="line">        &#123;</span><br><span class="line">          id: &quot;1&quot;,</span><br><span class="line">          name: &quot;小智&quot;,</span><br><span class="line">          age: 18,</span><br><span class="line">          classes: &quot;商学院&quot;,</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          id: &quot;2&quot;,</span><br><span class="line">          name: &quot;小白&quot;,</span><br><span class="line">          age: 19,</span><br><span class="line">          classes: &quot;商学院&quot;,</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          id: &quot;3&quot;,</span><br><span class="line">          name: &quot;小蓝&quot;,</span><br><span class="line">          age: 12,</span><br><span class="line">          classes: &quot;商学院&quot;,</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          id: &quot;4&quot;,</span><br><span class="line">          name: &quot;小花&quot;,</span><br><span class="line">          age: 14,</span><br><span class="line">          classes: &quot;商学院&quot;,</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          id: &quot;5&quot;,</span><br><span class="line">          name: &quot;小粉&quot;,</span><br><span class="line">          age: 15,</span><br><span class="line">          classes: &quot;商学院&quot;,</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          id: &quot;6&quot;,</span><br><span class="line">          name: &quot;小黄&quot;,</span><br><span class="line">          age: 16,</span><br><span class="line">          classes: &quot;商学院&quot;,</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          id: &quot;7&quot;,</span><br><span class="line">          name: &quot;小红&quot;,</span><br><span class="line">          age: 17,</span><br><span class="line">          classes: &quot;商学院&quot;,</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          id: &quot;8&quot;,</span><br><span class="line">          name: &quot;小黑&quot;,</span><br><span class="line">          age: 19,</span><br><span class="line">          classes: &quot;商学院&quot;,</span><br><span class="line">        &#125;,</span><br><span class="line">      ],</span><br><span class="line">      listHander: &#123;</span><br><span class="line">        id: &quot;学号&quot;,</span><br><span class="line">        name: &quot;姓名&quot;,</span><br><span class="line">        age: &quot;年龄&quot;,</span><br><span class="line">        classes: &quot;学院&quot;,</span><br><span class="line">      &#125;,</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    outExcel() &#123;</span><br><span class="line">      // this.jsonData是要导出的数据内容（表格里的内容），</span><br><span class="line">      // this.listHander对应要导出内容的表头</span><br><span class="line">      // 学生：指向的是excel文件名</span><br><span class="line">      xlsx(this.jsonData, this.listHander, &quot;学生&quot;);</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style&gt;&lt;/style&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;读取-excel-表格&quot;&gt;&lt;a href=&quot;#读取-excel-表格&quot; class=&quot;headerlink&quot; title=&quot;读取 excel 表格&quot;&gt;&lt;/a&gt;读取 excel 表格&lt;/h1&gt;&lt;h2 id=&quot;安装-xlsx&quot;&gt;&lt;a href=&quot;#安装-xlsx&quot; c</summary>
      
    
    
    
    <category term="学习笔记" scheme="https://wade9264.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="Vue" scheme="https://wade9264.github.io/tags/Vue/"/>
    
    <category term="Excel" scheme="https://wade9264.github.io/tags/Excel/"/>
    
  </entry>
  
  <entry>
    <title>WebSocket学习笔记</title>
    <link href="https://wade9264.github.io/posts/ce1ea377.html"/>
    <id>https://wade9264.github.io/posts/ce1ea377.html</id>
    <published>2022-11-03T14:36:15.000Z</published>
    <updated>2023-02-24T06:48:57.693Z</updated>
    
    <content type="html"><![CDATA[<h2 id="为什么需要-WebSocket-？"><a href="#为什么需要-WebSocket-？" class="headerlink" title="为什么需要 WebSocket ？"></a>为什么需要 WebSocket ？</h2><p>WebSocket 与 http 一样，也是一种网络传输协议。那么有 http 协议了为什么还需要 webSocket 呢？</p><blockquote><p>HTTP 中，通信只能由客户端向服务端发起请求。<br>WebSocket，通信既可以从服务端发起请求，也能从客户端发起请求。</p></blockquote><p>HTTP 协议做不到服务器主动向客户端推送信息。这种单向请求的特点，注定了如果服务器有连续的状态变化，客户端要获知就非常麻烦。传统的方式是用 Ajax 轮询，就是在特定的时间间隔，浏览器向服务器发送请求，这样明显浪费资源。</p><h2 id="WebSocket-简介"><a href="#WebSocket-简介" class="headerlink" title="WebSocket 简介"></a>WebSocket 简介</h2><blockquote><p>WebSocket 是 HTML5 开始提供的一种在单个 TCP 连接上进行全双工通讯的协议。<br>允许服务端主动向客户端推送数据，浏览器和服务器只需要一次握手，两者之间就直接可以创建持久性的连接，进行双向数据传输</p></blockquote><p><img src="https://wade1999-images-1307558348.cos.ap-shanghai.myqcloud.com/20210618091522653.png" alt="WebSocket"></p><p>浏览器发起 WebSocket 连接请求，连接建立起来之后，服务端和客户端就可以通过 TCP 连接直接交换数据。<br>连接之后 通过 send（）方法发送数据，通过 onmessage 事件来接受服务器返回的数据。</p><h2 id="WebSocket-特点"><a href="#WebSocket-特点" class="headerlink" title="WebSocket 特点"></a>WebSocket 特点</h2><ol><li>通信可以由客户端和服务端双向发送</li><li>建立在 TCP 链接之上，服务端比较容易实现</li><li>与 HTTP 协议有着良好的兼容性。默认端口也是 80 和 443，并且握手阶段采用 HTTP 协议，因此握手时不容易屏蔽，能通过各种 HTTP 代理服务器</li><li>数据格式比较轻量，性能开销小，通信高效。</li><li>可以发送文本，也可以发送二进制数据</li><li>没有同源限制，客户端可以与任意服务器通信</li><li>协议标识符是 ws（如果加密，则为 wss），服务器网址就是 URL</li></ol><h2 id="WebSocket-属性方法"><a href="#WebSocket-属性方法" class="headerlink" title="WebSocket 属性方法"></a>WebSocket 属性方法</h2><table><thead><tr><th>属性 &amp; 方法</th><th>说明</th></tr></thead><tbody><tr><td>onopen</td><td>连接成功后的回调</td></tr><tr><td>onclose</td><td>连接关闭后的回调</td></tr><tr><td>onerror</td><td>连接失败后的回调</td></tr><tr><td>bufferedAmount</td><td>检查传输数据的大小，当客户端传输大量数据时使用避免网络饱和</td></tr><tr><td>binaryType</td><td>使用二进制的数据类型连接</td></tr><tr><td>protocol</td><td>让服务端知道客户端使用的 WebSocket 协议，可以为空</td></tr><tr><td>url</td><td>WebSocket 的绝对路径</td></tr><tr><td>readyState</td><td>WebSocket 的连接状态<br>0:CONNECTING; 1:OPEN; 2:CLOSING; 3:CLOSED</td></tr><tr><td>close()</td><td>关闭当前连接</td></tr><tr><td>send(data)</td><td>向服务器发送数据</td></tr></tbody></table><h2 id="WebSocket-前端使用"><a href="#WebSocket-前端使用" class="headerlink" title="WebSocket 前端使用"></a>WebSocket 前端使用</h2><blockquote><p><strong>WebSocket(url[, protocols])</strong><br>url: WebSocket API URL,URL 之前需要添加 ws://或者 wss://（类似 http://、https://）<br>protocol: 与服务端定义的协议名称相同，协议的参数例如 XMPP（Extensible Messaging and Presence Protocol）、SOAP（Simple Object Access Protocol）或者自定义协议。</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//先握手，并查看客户端的浏览器是否支持WebSocket协议</span></span><br><span class="line"><span class="keyword">var</span> ws = <span class="keyword">new</span> <span class="title class_">WebSocket</span>(<span class="string">&quot;wss://echo.websocket.org&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//连接发生错误的回调方法</span></span><br><span class="line">ws.<span class="property">onerror</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">  <span class="title function_">alert</span>(<span class="string">&quot;WebSocket连接发生错误&quot;</span>);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//连接成功建立的回调方法</span></span><br><span class="line">ws.<span class="property">onopen</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">  <span class="title function_">alert</span>(<span class="string">&quot;WebSocket连接成功&quot;</span>);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//接收到消息的回调方法，websocket的controller里的onMessage方法session_to传过来的值</span></span><br><span class="line">ws.<span class="property">onmessage</span> = <span class="keyword">function</span> (<span class="params">event</span>) &#123;</span><br><span class="line">  <span class="title function_">alert</span>(event.<span class="property">data</span>);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//连接关闭的回调方法</span></span><br><span class="line">ws.<span class="property">onclose</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">  <span class="title function_">alert</span>(<span class="string">&quot;WebSocket连接关闭&quot;</span>);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//监听窗口关闭事件，当窗口关闭时，主动去关闭websocket连接，防止连接还没断开就关闭窗口，server端会抛异常。</span></span><br><span class="line"><span class="variable language_">window</span>.<span class="property">onbeforeunload</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">  ws.<span class="title function_">close</span>();</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="Vue-封装-WebSocket"><a href="#Vue-封装-WebSocket" class="headerlink" title="Vue 封装 WebSocket"></a>Vue 封装 WebSocket</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="title class_">Socket</span> = <span class="string">&quot;&quot;</span>;</span><br><span class="line"><span class="keyword">let</span> setIntervalWesocketPush = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">let</span> url = <span class="string">&quot;&quot;</span>;</span><br><span class="line"><span class="keyword">let</span> reconnectionNum = <span class="number">0</span>; <span class="comment">// 重连次数</span></span><br><span class="line"><span class="keyword">const</span> limitReconnectionNum = <span class="number">5</span>; <span class="comment">// 最大重连次数</span></span><br><span class="line"><span class="comment">// 建立连接</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">function</span> <span class="title function_">createSocket</span>(<span class="params">urls</span>) &#123;</span><br><span class="line">  url = urls;</span><br><span class="line">  <span class="keyword">if</span> (!<span class="title class_">Socket</span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;建立websocket连接&quot;</span>);</span><br><span class="line">    <span class="built_in">clearInterval</span>(setIntervalWesocketPush);</span><br><span class="line">    <span class="title class_">Socket</span> = <span class="keyword">new</span> <span class="title class_">WebSocket</span>(urls);</span><br><span class="line">    <span class="title class_">Socket</span>.<span class="property">onopen</span> = onopenWS;</span><br><span class="line">    <span class="title class_">Socket</span>.<span class="property">onmessage</span> = im_msg;</span><br><span class="line">    <span class="title class_">Socket</span>.<span class="property">onerror</span> = onerrorWS;</span><br><span class="line">    <span class="title class_">Socket</span>.<span class="property">onclose</span> = oncloseWS;</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="built_in">clearInterval</span>(setIntervalWesocketPush);</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;websocket已连接&quot;</span>);</span><br><span class="line">    <span class="title function_">onopenWS</span>();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 打开WS之后发送心跳</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">function</span> <span class="title function_">onopenWS</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="built_in">clearInterval</span>(setIntervalWesocketPush);</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;已连接&quot;</span>);</span><br><span class="line">  <span class="title function_">sendPing</span>(); <span class="comment">// 发送心跳</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 连接失败重连</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">function</span> <span class="title function_">onerrorWS</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;连接失败&quot;</span>);</span><br><span class="line">  <span class="built_in">clearInterval</span>(setIntervalWesocketPush);</span><br><span class="line">  <span class="title class_">Socket</span>.<span class="title function_">close</span>();</span><br><span class="line">  <span class="title class_">Socket</span> = <span class="string">&quot;&quot;</span>;</span><br><span class="line">  <span class="comment">// createSocket(url) // 重连</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// WS数据接收统一处理</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">function</span> <span class="title function_">im_msg</span>(<span class="params">e</span>) &#123;</span><br><span class="line">  <span class="variable language_">window</span>.<span class="title function_">dispatchEvent</span>(</span><br><span class="line">    <span class="keyword">new</span> <span class="title class_">CustomEvent</span>(<span class="string">&quot;im_msg&quot;</span>, &#123;</span><br><span class="line">      <span class="attr">detail</span>: &#123;</span><br><span class="line">        <span class="attr">data</span>: e,</span><br><span class="line">      &#125;,</span><br><span class="line">    &#125;)</span><br><span class="line">  );</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/** 发送数据 */</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">function</span> <span class="title function_">sendWSPush</span>(<span class="params">obj</span>) &#123;</span><br><span class="line">  <span class="keyword">if</span> (<span class="title class_">Socket</span> !== <span class="literal">null</span> &amp;&amp; <span class="title class_">Socket</span>.<span class="property">readyState</span> === <span class="number">3</span>) &#123;</span><br><span class="line">    <span class="title class_">Socket</span>.<span class="title function_">close</span>();</span><br><span class="line">    <span class="title function_">createSocket</span>(url); <span class="comment">// 重连</span></span><br><span class="line">  &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="title class_">Socket</span>.<span class="property">readyState</span> === <span class="number">1</span>) &#123;</span><br><span class="line">    <span class="title class_">Socket</span>.<span class="title function_">send</span>(<span class="title class_">JSON</span>.<span class="title function_">stringify</span>(obj));</span><br><span class="line">  &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="title class_">Socket</span>.<span class="property">readyState</span> === <span class="number">0</span>) &#123;</span><br><span class="line">    <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">      <span class="title class_">Socket</span>.<span class="title function_">send</span>(<span class="title class_">JSON</span>.<span class="title function_">stringify</span>(obj));</span><br><span class="line">    &#125;, <span class="number">3000</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/** 关闭WS */</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">function</span> <span class="title function_">oncloseWS</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">let</span> i = <span class="number">0</span>;</span><br><span class="line">  <span class="built_in">clearInterval</span>(setIntervalWesocketPush);</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;websocket已断开&quot;</span>);</span><br><span class="line">  setIntervalWesocketPush = <span class="built_in">setInterval</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    reconnectionNum++;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;重连中&quot;</span>, reconnectionNum);</span><br><span class="line">    <span class="title class_">Socket</span> = <span class="string">&quot;&quot;</span>;</span><br><span class="line">    <span class="keyword">if</span> (reconnectionNum &gt; limitReconnectionNum) &#123;</span><br><span class="line">      <span class="title class_">Socket</span> = <span class="string">&quot;&quot;</span>;</span><br><span class="line">      <span class="built_in">clearInterval</span>(setIntervalWesocketPush);</span><br><span class="line">      reconnectionNum = <span class="number">0</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="title function_">createSocket</span>(url); <span class="comment">// 重连</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;, <span class="number">5000</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/** 发送心跳 */</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">function</span> <span class="title function_">sendPing</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="title class_">Socket</span>.<span class="title function_">send</span>(<span class="string">&quot;ping&quot;</span>);</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;心跳包发送成功&quot;</span>);</span><br><span class="line">  setIntervalWesocketPush = <span class="built_in">setInterval</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;连接状态检测中&quot;</span>);</span><br><span class="line">    <span class="title class_">Socket</span>.<span class="title function_">send</span>(<span class="string">&quot;ping&quot;</span>);</span><br><span class="line">  &#125;, <span class="number">5000</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Node-js-实现-WebSocket"><a href="#Node-js-实现-WebSocket" class="headerlink" title="Node.js 实现 WebSocket"></a>Node.js 实现 WebSocket</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> ws = <span class="built_in">require</span>(<span class="string">&quot;ws&quot;</span>); <span class="comment">//引入websocket模块</span></span><br><span class="line"><span class="keyword">let</span> uuid = <span class="built_in">require</span>(<span class="string">&quot;uuid&quot;</span>); <span class="comment">//引入创建唯一id模块</span></span><br><span class="line"><span class="keyword">let</span> socketServer = ws.<span class="property">Server</span>;</span><br><span class="line"><span class="keyword">let</span> clientIndex = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">let</span> wss = <span class="keyword">new</span> <span class="title function_">socketServer</span>(&#123; <span class="attr">port</span>: <span class="number">8090</span> &#125;, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;服务启动, http://127.0.0.1:8090&quot;</span>);</span><br><span class="line">&#125;); <span class="comment">//创建websocketServer实例监听8090端口</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> clients = []; <span class="comment">//创建客户端列表，用于保存客户端及相关连接信息</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 广播所有客户端消息</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span>  &#123;<span class="type">String</span>&#125; type     广播方式(admin为系统消息，user为用户消息)</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span>  &#123;<span class="type">String</span>&#125; message  消息</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span>  &#123;<span class="type">String</span>&#125; nickname 用户昵称，广播方式为admin时可以不存在</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">broadcastSend</span>(<span class="params">type, message, nickname</span>) &#123;</span><br><span class="line">  clients.<span class="title function_">forEach</span>(<span class="keyword">function</span> (<span class="params">v, i</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (v.<span class="property">ws</span>.<span class="property">readyState</span> === ws.<span class="property">OPEN</span>) &#123;</span><br><span class="line">      v.<span class="property">ws</span>.<span class="title function_">send</span>(<span class="title class_">JSON</span>.<span class="title function_">stringify</span>(obj));</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> obj = &#123;</span><br><span class="line">  <span class="title class_">Id</span>: <span class="literal">null</span>,</span><br><span class="line">  <span class="title class_">Equipment</span>: <span class="string">&quot;X1&quot;</span>,</span><br><span class="line">  <span class="title class_">EquipmentName</span>: <span class="string">&quot;里氏硬度计08&quot;</span>,</span><br><span class="line">  <span class="title class_">Ip</span>: <span class="literal">null</span>,</span><br><span class="line">  <span class="title class_">Code</span>: <span class="number">3</span>,</span><br><span class="line">  <span class="title class_">Isok</span>: <span class="literal">true</span>,</span><br><span class="line">  <span class="title class_">Msg</span>: <span class="literal">null</span>,</span><br><span class="line">  <span class="title class_">BarCode</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">  <span class="title class_">EndTime</span>: <span class="literal">null</span>,</span><br><span class="line">  <span class="title class_">StartTime</span>: <span class="literal">null</span>,</span><br><span class="line">  <span class="title class_">IsData</span>: <span class="literal">false</span>,</span><br><span class="line">  <span class="title class_">Obj</span>: &#123;</span><br><span class="line">    硬度值: <span class="number">50</span>,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">//监听连接</span></span><br><span class="line">wss.<span class="title function_">on</span>(<span class="string">&quot;connection&quot;</span>, <span class="keyword">function</span> (<span class="params">ws</span>) &#123;</span><br><span class="line">  <span class="keyword">let</span> client_uuid = uuid.<span class="title function_">v4</span>();</span><br><span class="line">  <span class="keyword">let</span> nickname = <span class="string">`AnonymousUser<span class="subst">$&#123;clientIndex++&#125;</span>`</span>;</span><br><span class="line">  clients.<span class="title function_">push</span>(&#123;</span><br><span class="line">    <span class="attr">id</span>: client_uuid,</span><br><span class="line">    <span class="attr">ws</span>: ws,</span><br><span class="line">    <span class="attr">nickname</span>: nickname,</span><br><span class="line">  &#125;);</span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 关闭服务，从客户端监听列表删除</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="keyword">function</span> <span class="title function_">closeSocket</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; clients.<span class="property">length</span>; i++) &#123;</span><br><span class="line">      <span class="keyword">if</span> (clients[i].<span class="property">id</span> == client_uuid) &#123;</span><br><span class="line">        <span class="keyword">let</span> disconnect_message = <span class="string">`<span class="subst">$&#123;nickname&#125;</span> has disconnected`</span>;</span><br><span class="line">        <span class="title function_">broadcastSend</span>(<span class="string">&quot;notification&quot;</span>, disconnect_message, nickname);</span><br><span class="line">        clients.<span class="title function_">splice</span>(i, <span class="number">1</span>);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//无客户端时</span></span><br><span class="line">    <span class="keyword">if</span> (clients.<span class="property">length</span> == <span class="number">0</span>) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;无客户端连接&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">/*监听消息*/</span></span><br><span class="line">  ws.<span class="title function_">on</span>(<span class="string">&quot;message&quot;</span>, <span class="keyword">function</span> (<span class="params">message</span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> msg = message.<span class="title function_">toString</span>();</span><br><span class="line">    <span class="keyword">if</span> (<span class="title class_">JSON</span>.<span class="title function_">parse</span>(msg).<span class="property">Type</span> !== <span class="string">&quot;ping&quot;</span>) &#123;</span><br><span class="line">      <span class="title function_">broadcastSend</span>(<span class="string">&quot;user&quot;</span>, <span class="string">&quot;接收成功&quot;</span>, nickname);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line">  <span class="comment">/*监听断开连接*/</span></span><br><span class="line">  ws.<span class="title function_">on</span>(<span class="string">&quot;close&quot;</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="title function_">closeSocket</span>();</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;为什么需要-WebSocket-？&quot;&gt;&lt;a href=&quot;#为什么需要-WebSocket-？&quot; class=&quot;headerlink&quot; title=&quot;为什么需要 WebSocket ？&quot;&gt;&lt;/a&gt;为什么需要 WebSocket ？&lt;/h2&gt;&lt;p&gt;WebSocket </summary>
      
    
    
    
    <category term="学习笔记" scheme="https://wade9264.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="JavaScript" scheme="https://wade9264.github.io/tags/JavaScript/"/>
    
    <category term="Vue" scheme="https://wade9264.github.io/tags/Vue/"/>
    
    <category term="WebSocket" scheme="https://wade9264.github.io/tags/WebSocket/"/>
    
    <category term="Node.js" scheme="https://wade9264.github.io/tags/Node-js/"/>
    
  </entry>
  
  <entry>
    <title>在网页中预览zip压缩包中的文件</title>
    <link href="https://wade9264.github.io/posts/ba0bb0.html"/>
    <id>https://wade9264.github.io/posts/ba0bb0.html</id>
    <published>2022-07-01T10:51:27.000Z</published>
    <updated>2023-02-09T14:22:19.268Z</updated>
    
    
    
    
    <category term="JavaScript" scheme="https://wade9264.github.io/categories/JavaScript/"/>
    
    
    <category term="JavaScript" scheme="https://wade9264.github.io/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>通过Canvas实现图片压缩功能</title>
    <link href="https://wade9264.github.io/posts/90124800.html"/>
    <id>https://wade9264.github.io/posts/90124800.html</id>
    <published>2022-06-27T10:36:41.000Z</published>
    <updated>2023-02-22T08:40:52.464Z</updated>
    
    <content type="html"><![CDATA[<h2 id="实现思路"><a href="#实现思路" class="headerlink" title="实现思路"></a>实现思路</h2><p>通过调整图片的<code>分辨率</code>或者绘图<code>质量</code>来达到图片压缩的效果：</p><ol><li><p>获取上传 Input 中的图片对象 File</p></li><li><p>将图片转换成 base64 格式</p></li><li><p>base64 编码的图片通过 Canvas 转换压缩，这里会用到的 Canvas 的 drawImage 以及 toDataURL 这两个 Api，一个调节图片的分辨率的，一个是调节图片压缩质量并且输出的</p></li><li><p>转换后的图片生成对应的新图片，然后输出</p></li></ol><hr><h2 id="获取上传-Input-中的图片对象-File"><a href="#获取上传-Input-中的图片对象-File" class="headerlink" title="获取上传 Input 中的图片对象 File"></a>获取上传 Input 中的图片对象 File</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 压缩图片</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">File</span>&#125; file : 图片</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">Number</span>&#125; maxSize ：最大文件大小</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">compressImage</span> = (<span class="params">file, maxSize = <span class="number">1024</span> * <span class="number">1024</span> * <span class="number">0.5</span></span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">if</span> (file.<span class="property">size</span> &gt; maxSize) &#123;</span><br><span class="line">    <span class="title function_">canvasDataURL</span>(file, <span class="function">(<span class="params">blob</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;压缩前：&quot;</span> + file.<span class="property">size</span> / <span class="number">1024</span> / <span class="number">1024</span> + <span class="string">&quot;M&quot;</span>);</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;压缩后：&quot;</span> + blob.<span class="property">size</span> / <span class="number">1024</span> / <span class="number">1024</span> + <span class="string">&quot;M&quot;</span>);</span><br><span class="line">      <span class="keyword">const</span> compresFile = <span class="keyword">new</span> <span class="title class_">File</span>([blob], file.<span class="property">name</span>, &#123;</span><br><span class="line">        <span class="attr">type</span>: <span class="string">&quot;image/jpeg&quot;</span>,</span><br><span class="line">      &#125;);</span><br><span class="line">      <span class="comment">// 判断文件是否需要继续压缩</span></span><br><span class="line">      <span class="comment">// if (compresFile.size &gt; maxSize) &#123;</span></span><br><span class="line">      <span class="comment">//   compressImage(compresFile, maxSize);</span></span><br><span class="line">      <span class="comment">// &#125; else &#123;</span></span><br><span class="line">      <span class="comment">//   return compresFile;</span></span><br><span class="line">      <span class="comment">// &#125;</span></span><br><span class="line">      <span class="keyword">return</span> compresFile;</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> file;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><div class="note danger modern"><p>注意：最大文件大小设置过小可能导致无限循环（个人建议为 300kb 以上，最好增加最大循环次数）</p></div><hr><h2 id="通过-canvas-画布实现压缩，并转化为-base64-格式的图片"><a href="#通过-canvas-画布实现压缩，并转化为-base64-格式的图片" class="headerlink" title="通过 canvas 画布实现压缩，并转化为 base64 格式的图片"></a>通过 canvas 画布实现压缩，并转化为 base64 格式的图片</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 通过canvas画布实现压缩，并转化为base64格式的图片</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">File</span>&#125; file : 图片</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">Function</span>&#125; callback ：回调函数</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">canvasDataURL</span>(<span class="params">file, callback</span>) &#123;</span><br><span class="line">  <span class="comment">//压缩转化为base64</span></span><br><span class="line">  <span class="keyword">const</span> reader = <span class="keyword">new</span> <span class="title class_">FileReader</span>(); <span class="comment">//读取文件的对象</span></span><br><span class="line">  reader.<span class="title function_">readAsDataURL</span>(file); <span class="comment">//对文件读取，读取完成后会将内容以base64的形式赋值给result属性</span></span><br><span class="line">  reader.<span class="property">onload</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="comment">//读取完成的钩子</span></span><br><span class="line">    <span class="keyword">const</span> img = <span class="keyword">new</span> <span class="title class_">Image</span>();</span><br><span class="line">    <span class="comment">//先创建canvas画布，再获取canvas画布上的2d绘图环境，通过这个2d绘图环境才可使用绘制API</span></span><br><span class="line">    <span class="keyword">const</span> canvas = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&quot;canvas&quot;</span>); <span class="comment">//创建canvas画布</span></span><br><span class="line">    <span class="keyword">const</span> drawer = canvas.<span class="title function_">getContext</span>(<span class="string">&quot;2d&quot;</span>); <span class="comment">//返回一个在画布上绘制2d图的环境对象，该对象上包含有canvas绘制2d图形的API</span></span><br><span class="line">    img.<span class="property">src</span> = <span class="variable language_">this</span>.<span class="property">result</span>;</span><br><span class="line">    <span class="comment">//图片压缩代码，需要注意的是，img图片渲染是异步的，所以必须在img的onlaod钩子中再进行相应操作</span></span><br><span class="line">    img.<span class="property">onload</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">      <span class="keyword">const</span> quality = <span class="number">0.5</span>; <span class="comment">// 比例、质量</span></span><br><span class="line"></span><br><span class="line">      <span class="comment">// // 通过改变图像尺寸实现压缩</span></span><br><span class="line">      <span class="comment">// canvas.width = img.width * quality;</span></span><br><span class="line">      <span class="comment">// canvas.height = img.height * quality;</span></span><br><span class="line">      <span class="comment">// drawer.drawImage(img, 0, 0, canvas.width, canvas.height);</span></span><br><span class="line">      <span class="comment">// convertBase64UrlToBlob(canvas.toDataURL(&quot;image/jpeg&quot;, 1), callback);</span></span><br><span class="line"></span><br><span class="line">      <span class="comment">// 通过改变图像质量实现压缩</span></span><br><span class="line">      <span class="title function_">convertBase64UrlToBlob</span>(canvas.<span class="title function_">toDataURL</span>(<span class="string">&quot;image/jpeg&quot;</span>, quality), callback);</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="将-base64-格式转化为-Blob-格式"><a href="#将-base64-格式转化为-Blob-格式" class="headerlink" title="将 base64 格式转化为 Blob 格式"></a>将 base64 格式转化为 Blob 格式</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 将base64格式转化为Blob格式</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">string</span>&#125; urlData : urlData格式的数据，通过这个转化为Blob对象</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">Function</span>&#125; callback : 回调函数</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">convertBase64UrlToBlob</span>(<span class="params">urlData, callback</span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> arr = urlData.<span class="title function_">split</span>(<span class="string">&quot;,&quot;</span>);</span><br><span class="line">  <span class="keyword">const</span> mime = arr[<span class="number">0</span>].<span class="title function_">match</span>(<span class="regexp">/:(.*?);/</span>)[<span class="number">1</span>];</span><br><span class="line">  <span class="keyword">const</span> bstr = <span class="title function_">atob</span>(arr[<span class="number">1</span>]); <span class="comment">//atob方法用于解码base64</span></span><br><span class="line">  <span class="comment">// console.log(&quot;将base64进行解码:&quot;,bstr);</span></span><br><span class="line">  <span class="keyword">let</span> n = bstr.<span class="property">length</span>;</span><br><span class="line">  <span class="keyword">const</span> u8arr = <span class="keyword">new</span> <span class="title class_">Uint8Array</span>(n);</span><br><span class="line">  <span class="keyword">while</span> (n--) &#123;</span><br><span class="line">    u8arr[n] = bstr.<span class="title function_">charCodeAt</span>(n);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="title function_">callback</span>(</span><br><span class="line">    <span class="keyword">new</span> <span class="title class_">Blob</span>([u8arr], &#123;</span><br><span class="line">      <span class="attr">type</span>: mime,</span><br><span class="line">    &#125;)</span><br><span class="line">  );</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="相关插件"><a href="#相关插件" class="headerlink" title="相关插件"></a>相关插件</h2><a class="tag-Link" target="_blank" href="https://github.com/fengyuanchen/compressorjs/blob/main/README.md"><div class="tag-link-tips">引用站外地址</div><div class="tag-link-bottom"><div class="tag-link-left" style="background-image: url(https://api.iowen.cn/favicon/github.com/fengyuanchen/compressorjs/blob/main/README.md.png);"></div><div class="tag-link-right"><div class="tag-link-title">compressor.js 官方文档</div><div class="tag-link-sitename">使用canvas做压缩工作的图像压缩器</div></div><i class="fa-solid fa-angle-right"></i></div></a><h3 id="安装compression-js"><a href="#安装compression-js" class="headerlink" title="安装compression.js"></a>安装<code>compression.js</code></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install compressorjs</span><br></pre></td></tr></table></figure><h3 id="引入"><a href="#引入" class="headerlink" title="引入"></a>引入</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">Compressor</span> <span class="keyword">from</span> <span class="string">&quot;compressorjs&quot;</span>;</span><br></pre></td></tr></table></figure><h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;file&quot;</span>).<span class="title function_">addEventListener</span>(<span class="string">&quot;change&quot;</span>, <span class="function">(<span class="params">e</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> file = e.<span class="property">target</span>.<span class="property">files</span>[<span class="number">0</span>];</span><br><span class="line">  <span class="keyword">if</span> (!file) &#123;</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">new</span> <span class="title class_">Compressor</span>(file, &#123;</span><br><span class="line">    <span class="attr">quality</span>: <span class="number">0.6</span>,</span><br><span class="line">    <span class="title function_">success</span>(<span class="params">result</span>) &#123;</span><br><span class="line">      <span class="keyword">const</span> formData = <span class="keyword">new</span> <span class="title class_">FormData</span>();</span><br><span class="line">      formData.<span class="title function_">append</span>(<span class="string">&quot;file&quot;</span>, result, result.<span class="property">name</span>);</span><br><span class="line">      axios.<span class="title function_">post</span>(<span class="string">&quot;/path/to/upload&quot;</span>, formData).<span class="title function_">then</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;Upload success&quot;</span>);</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="title function_">error</span>(<span class="params">err</span>) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(err.<span class="property">message</span>);</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;实现思路&quot;&gt;&lt;a href=&quot;#实现思路&quot; class=&quot;headerlink&quot; title=&quot;实现思路&quot;&gt;&lt;/a&gt;实现思路&lt;/h2&gt;&lt;p&gt;通过调整图片的&lt;code&gt;分辨率&lt;/code&gt;或者绘图&lt;code&gt;质量&lt;/code&gt;来达到图片压缩的效果：&lt;/p&gt;
&lt;ol&gt;</summary>
      
    
    
    
    <category term="学习笔记" scheme="https://wade9264.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="JavaScript" scheme="https://wade9264.github.io/tags/JavaScript/"/>
    
    <category term="Canvas" scheme="https://wade9264.github.io/tags/Canvas/"/>
    
  </entry>
  
  <entry>
    <title>前端实现图片批量下载、并打包成压缩包</title>
    <link href="https://wade9264.github.io/posts/a8a74f38.html"/>
    <id>https://wade9264.github.io/posts/a8a74f38.html</id>
    <published>2022-06-22T11:34:09.000Z</published>
    <updated>2023-02-09T14:22:33.036Z</updated>
    
    
    
    
    <category term="JavaScript" scheme="https://wade9264.github.io/categories/JavaScript/"/>
    
    
    <category term="JavaScript" scheme="https://wade9264.github.io/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>将DOM元素保存为图片</title>
    <link href="https://wade9264.github.io/posts/eb575759.html"/>
    <id>https://wade9264.github.io/posts/eb575759.html</id>
    <published>2022-06-21T08:23:35.000Z</published>
    <updated>2023-02-24T07:33:30.414Z</updated>
    
    <content type="html"><![CDATA[<div class="note danger modern"><p>注意：无法绘制跨域图片</p></div><a class="tag-Link" target="_blank" href="http://html2canvas.hertzen.com"><div class="tag-link-tips">引用站外地址</div><div class="tag-link-bottom"><div class="tag-link-left" style="background-image: url(https://api.iowen.cn/favicon/html2canvas.hertzen.com.png);"></div><div class="tag-link-right"><div class="tag-link-title">html2canvas 官方文档</div><div class="tag-link-sitename">Screenshots with JavaScript</div></div><i class="fa-solid fa-angle-right"></i></div></a><hr><h2 id="安装-html2canvas"><a href="#安装-html2canvas" class="headerlink" title="安装 html2canvas"></a>安装 html2canvas</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i html2canvas</span><br></pre></td></tr></table></figure><h2 id="引入"><a href="#引入" class="headerlink" title="引入"></a>引入</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> html2canvas <span class="keyword">from</span> <span class="string">&quot;html2canvas&quot;</span>;</span><br></pre></td></tr></table></figure><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;code&quot;&gt;存为图片&lt;/div&gt;</span><br><span class="line">  &lt;button @click=&quot;generateImages&quot;&gt;下载&lt;/button&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">import html2canvas from &quot;html2canvas&quot;;</span><br><span class="line">export default &#123;</span><br><span class="line">  ...</span><br><span class="line">  methods:&#123;</span><br><span class="line">    generateImages() &#123;</span><br><span class="line">      html2canvas(document.querySelector(&quot;.code&quot;)).then((canvas) =&gt; &#123;</span><br><span class="line">        // 生成图片</span><br><span class="line">        const imgUrl = canvas.toDataURL(&quot;image/png&quot;, 1);</span><br><span class="line">        const image = document.createElement(&quot;img&quot;);</span><br><span class="line">        image.src = imgUrl;</span><br><span class="line">        // 显示图片</span><br><span class="line">        const content = document.createElement(&quot;div&quot;);</span><br><span class="line">        content.appendChild(image);</span><br><span class="line">        // 下载图片</span><br><span class="line">        const a = document.createElement(&quot;a&quot;);</span><br><span class="line">        a.href = imgUrl;</span><br><span class="line">        a.download = &quot;图片名称&quot;;</span><br><span class="line">        a.click();</span><br><span class="line">        content.remove();</span><br><span class="line">        a.remove();</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;div class=&quot;note danger modern&quot;&gt;&lt;p&gt;注意：无法绘制跨域图片&lt;/p&gt;
&lt;/div&gt;

&lt;a class=&quot;tag-Link&quot; target=&quot;_blank&quot; href=&quot;http://html2canvas.hertzen.com&quot;&gt;
	&lt;div </summary>
      
    
    
    
    <category term="学习笔记" scheme="https://wade9264.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="JavaScript" scheme="https://wade9264.github.io/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>Vue添加进入、离开、列表过渡动画</title>
    <link href="https://wade9264.github.io/posts/fdb7b858.html"/>
    <id>https://wade9264.github.io/posts/fdb7b858.html</id>
    <published>2022-06-03T14:10:33.000Z</published>
    <updated>2023-02-16T06:53:59.782Z</updated>
    
    <content type="html"><![CDATA[<a class="tag-Link" target="_blank" href="https://v2.cn.vuejs.org/v2/guide/transitions.html"><div class="tag-link-tips">引用站外地址</div><div class="tag-link-bottom"><div class="tag-link-left" style="background-image: url(https://api.iowen.cn/favicon/v2.cn.vuejs.org/v2/guide/transitions.html.png);"></div><div class="tag-link-right"><div class="tag-link-title">Vue.js官方文档</div><div class="tag-link-sitename">进入/离开 & 列表过渡</div></div><i class="fa-solid fa-angle-right"></i></div></a>]]></content>
    
    
      
      
    <summary type="html">&lt;a class=&quot;tag-Link&quot; target=&quot;_blank&quot; href=&quot;https://v2.cn.vuejs.org/v2/guide/transitions.html&quot;&gt;
	&lt;div class=&quot;tag-link-tips&quot;&gt;引用站外地址&lt;/div&gt;
	&lt;div</summary>
      
    
    
    
    <category term="学习笔记" scheme="https://wade9264.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="Vue" scheme="https://wade9264.github.io/tags/Vue/"/>
    
    <category term="CSS" scheme="https://wade9264.github.io/tags/CSS/"/>
    
  </entry>
  
  <entry>
    <title>通过Highcharts制作简易甘特图</title>
    <link href="https://wade9264.github.io/posts/90077f97.html"/>
    <id>https://wade9264.github.io/posts/90077f97.html</id>
    <published>2022-05-14T14:34:37.000Z</published>
    <updated>2023-02-09T14:22:06.373Z</updated>
    
    
    
    
    <category term="JavaScript" scheme="https://wade9264.github.io/categories/JavaScript/"/>
    
    
    <category term="JavaScript" scheme="https://wade9264.github.io/tags/JavaScript/"/>
    
    <category term="Highcharts" scheme="https://wade9264.github.io/tags/Highcharts/"/>
    
  </entry>
  
</feed>
