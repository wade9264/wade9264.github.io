<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>WHY&#39;s Blog</title>
  
  
  <link href="https://wade9264.github.io/atom.xml" rel="self"/>
  
  <link href="https://wade9264.github.io/"/>
  <updated>2023-02-08T07:11:46.380Z</updated>
  <id>https://wade9264.github.io/</id>
  
  <author>
    <name>WHY</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>el-table底部滚动条无法拖动问题解决</title>
    <link href="https://wade9264.github.io/posts/5f510e8f.html"/>
    <id>https://wade9264.github.io/posts/5f510e8f.html</id>
    <published>2023-02-08T06:57:00.000Z</published>
    <updated>2023-02-08T07:11:46.380Z</updated>
    
    <content type="html"><![CDATA[<p>el-table 中的 el-table-column 提供了一个 fixed 属性设置固定列，但是设置了之后发现表格的滚动条无法拖动了，通过 F12 定位到页面元素发现是滚动条被固定列生成的元素给覆盖了。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;style lang=&quot;scss&quot; scoped&gt;</span><br><span class="line">  <span class="selector-class">.el-table</span> &#123;</span><br><span class="line">    <span class="selector-class">.el-table__fixed</span> &#123; // 左固定列</span><br><span class="line">      <span class="attribute">height</span>: auto <span class="meta">!important</span>;</span><br><span class="line">      <span class="attribute">bottom</span>: <span class="number">18px</span>; // 改为自动高度后，设置与父容器的底部距离，高度会动态改变，值可以设置比滚动条的高度稍微大一些</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-class">.el-table__fixed-right</span> &#123; // 右固定列</span><br><span class="line">      <span class="attribute">height</span>: auto <span class="meta">!important</span>;</span><br><span class="line">      <span class="attribute">bottom</span>: <span class="number">18px</span>; // 改为自动高度后，设置与父容器的底部距离，高度会动态改变，值可以设置比滚动条的高度稍微大一些</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"><span class="selector-class">.el-table--scrollable-x</span> <span class="selector-class">.el-table__body-wrapper</span> &#123;</span><br><span class="line">    <span class="attribute">z-index</span>: <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;el-table 中的 el-table-column 提供了一个 fixed 属性设置固定列，但是设置了之后发现表格的滚动条无法拖动了，通过 F12 定位到页面元素发现是滚动条被固定列生成的元素给覆盖了。&lt;/p&gt;
&lt;figure class=&quot;highlight css&quot;</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>在Vue中实现拖拽功能</title>
    <link href="https://wade9264.github.io/posts/63b8f629.html"/>
    <id>https://wade9264.github.io/posts/63b8f629.html</id>
    <published>2023-02-06T07:47:23.000Z</published>
    <updated>2023-02-14T12:56:24.221Z</updated>
    
    
    
    
    <category term="Vue" scheme="https://wade9264.github.io/categories/Vue/"/>
    
    
    <category term="Vue" scheme="https://wade9264.github.io/tags/Vue/"/>
    
  </entry>
  
  <entry>
    <title>使用watermark.js给网页添加水印</title>
    <link href="https://wade9264.github.io/posts/14824453.html"/>
    <id>https://wade9264.github.io/posts/14824453.html</id>
    <published>2023-02-06T07:41:26.000Z</published>
    <updated>2023-02-09T14:21:52.859Z</updated>
    
    
    
    
    <category term="JavaScript" scheme="https://wade9264.github.io/categories/JavaScript/"/>
    
    
    <category term="JavaScript" scheme="https://wade9264.github.io/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>浏览器调用摄像头获取媒体流，并实现拍照功能</title>
    <link href="https://wade9264.github.io/posts/67c97ff3.html"/>
    <id>https://wade9264.github.io/posts/67c97ff3.html</id>
    <published>2022-12-30T11:13:48.000Z</published>
    <updated>2023-02-02T09:25:52.529Z</updated>
    
    
    
    
    <category term="JavaScript" scheme="https://wade9264.github.io/categories/JavaScript/"/>
    
    
    <category term="JavaScript" scheme="https://wade9264.github.io/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>前端实现Excel表格上传解析与导出</title>
    <link href="https://wade9264.github.io/posts/a913bf31.html"/>
    <id>https://wade9264.github.io/posts/a913bf31.html</id>
    <published>2022-12-16T10:32:16.000Z</published>
    <updated>2023-02-15T11:01:45.916Z</updated>
    
    <content type="html"><![CDATA[<h1 id="读取-excel-表格"><a href="#读取-excel-表格" class="headerlink" title="读取 excel 表格"></a>读取 excel 表格</h1><h2 id="安装-xlsx"><a href="#安装-xlsx" class="headerlink" title="安装 xlsx"></a>安装 xlsx</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install xlsx --save-dev</span><br></pre></td></tr></table></figure><h2 id="引入插件"><a href="#引入插件" class="headerlink" title="引入插件"></a>引入插件</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">import * as xlsx from <span class="string">&quot;xlsx/xlsx.mjs&quot;</span>;</span><br></pre></td></tr></table></figure><h2 id="读取-excel-表格-1"><a href="#读取-excel-表格-1" class="headerlink" title="读取 excel 表格"></a>读取 excel 表格</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;form ref=&quot;fileRef&quot;&gt;</span><br><span class="line">    &lt;input</span><br><span class="line">      type=&quot;file&quot;</span><br><span class="line">      ref=&quot;upload&quot;</span><br><span class="line">      accept=&quot;.xls,.xlsx&quot;</span><br><span class="line">      @change=&quot;readExcel&quot;</span><br><span class="line">      class=&quot;upload-button&quot;</span><br><span class="line">    /&gt;</span><br><span class="line">    &lt;span class=&quot;tips&quot;&gt;支持扩展名：.xls .xlsx，且不超过100M&lt;/span&gt;</span><br><span class="line">  &lt;/form&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">import * as XLSX from &quot;xlsx/xlsx.mjs&quot;;</span><br><span class="line">export default &#123;</span><br><span class="line">  methods: &#123;</span><br><span class="line">    readExcel(e) &#123;</span><br><span class="line">      const files = e.target.files;</span><br><span class="line">      const fileReader = new FileReader();</span><br><span class="line">      fileReader.onload = (ev) =&gt; &#123;</span><br><span class="line">        console.log(123);</span><br><span class="line">        try &#123;</span><br><span class="line">          const data = ev.target.result;</span><br><span class="line">          const workbook = XLSX.read(data, &#123;</span><br><span class="line">            type: &quot;binary&quot;,</span><br><span class="line">          &#125;); // 读取数据</span><br><span class="line">          const wsname = workbook.SheetNames[0]; // 取第一张表</span><br><span class="line">          const ws = XLSX.utils.sheet_to_json(workbook.Sheets[wsname]); // 生成json表格内容</span><br><span class="line">          // const ws1 = XLSX.utils.sheet_to_slk(workbook.Sheets[wsname]) // 输出表格对应位置是什么值</span><br><span class="line">          // const ws2 = XLSX.utils.sheet_to_html(workbook.Sheets[wsname]) // 生成HTML输出</span><br><span class="line">          // const ws3 = XLSX.utils.sheet_to_csv(workbook.Sheets[wsname]) // 生成分隔符分隔值输出</span><br><span class="line">          // const ws4 = XLSX.utils.sheet_to_formulae(workbook.Sheets[wsname]) // 生成公式列表（具有值回退）</span><br><span class="line">          // const ws5 = XLSX.utils.sheet_to_txt(workbook.Sheets[wsname]) // 生成UTF16格式的文本</span><br><span class="line">          // const ws = xlsx.utils.sheet_to_json(workbook.Sheets[wsname], &#123;header: 1,defval: &quot;&quot;&#125;); // 生成json表格内容</span><br><span class="line">          console.log(ws);</span><br><span class="line">          this.$refs.fileRef.reset(); // 清空form</span><br><span class="line">        &#125; catch (e) &#123;</span><br><span class="line">          return false;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;;</span><br><span class="line">      fileReader.readAsBinaryString(files[0]);</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h1 id="导出-excel-表格"><a href="#导出-excel-表格" class="headerlink" title="导出 excel 表格"></a>导出 excel 表格</h1><p>1.引入依赖：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install xlsx@0.17.0 file-saver@2.0.5 --save</span><br></pre></td></tr></table></figure><p>注：xlsx 要指定版本不然会报错</p><p>2.封装导出的 js 文件</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> fs <span class="keyword">from</span> <span class="string">&quot;file-saver&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="variable constant_">XLSX</span> <span class="keyword">from</span> <span class="string">&quot;xlsx&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">function</span> <span class="title function_">xlsx</span>(<span class="params">json, fields, filename = <span class="string">&quot;.xlsx&quot;</span></span>) &#123;</span><br><span class="line">  <span class="comment">//导出xlsx</span></span><br><span class="line">  json.<span class="title function_">forEach</span>(<span class="function">(<span class="params">item</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i <span class="keyword">in</span> item) &#123;</span><br><span class="line">      <span class="keyword">if</span> (fields.<span class="title function_">hasOwnProperty</span>(i)) &#123;</span><br><span class="line">        item[fields[i]] = item[i];</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">delete</span> item[i]; <span class="comment">//删除原先的对象属性</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line">  <span class="keyword">let</span> sheetName = filename; <span class="comment">//excel的文件名称</span></span><br><span class="line">  <span class="keyword">let</span> wb = <span class="variable constant_">XLSX</span>.<span class="property">utils</span>.<span class="title function_">book_new</span>(); <span class="comment">//工作簿对象包含一SheetNames数组，以及一个表对象映射表名称到表对象。XLSX.utils.book_new实用函数创建一个新的工作簿对象。</span></span><br><span class="line">  <span class="keyword">let</span> ws = <span class="variable constant_">XLSX</span>.<span class="property">utils</span>.<span class="title function_">json_to_sheet</span>(json, &#123; <span class="attr">header</span>: <span class="title class_">Object</span>.<span class="title function_">values</span>(fields) &#125;); <span class="comment">//将JS对象数组转换为工作表。</span></span><br><span class="line">  wb.<span class="property">SheetNames</span>.<span class="title function_">push</span>(sheetName);</span><br><span class="line">  wb.<span class="property">Sheets</span>[sheetName] = ws;</span><br><span class="line">  <span class="keyword">const</span> defaultCellStyle = &#123;</span><br><span class="line">    <span class="attr">font</span>: &#123; <span class="attr">name</span>: <span class="string">&quot;Verdana&quot;</span>, <span class="attr">sz</span>: <span class="number">13</span>, <span class="attr">color</span>: <span class="string">&quot;FF00FF88&quot;</span> &#125;,</span><br><span class="line">    <span class="attr">fill</span>: &#123; <span class="attr">fgColor</span>: &#123; <span class="attr">rgb</span>: <span class="string">&quot;FFFFAA00&quot;</span> &#125; &#125;,</span><br><span class="line">  &#125;; <span class="comment">//设置表格的样式</span></span><br><span class="line">  <span class="keyword">let</span> wopts = &#123;</span><br><span class="line">    <span class="attr">bookType</span>: <span class="string">&quot;xlsx&quot;</span>,</span><br><span class="line">    <span class="attr">bookSST</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="attr">type</span>: <span class="string">&quot;binary&quot;</span>,</span><br><span class="line">    <span class="attr">cellStyles</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">defaultCellStyle</span>: defaultCellStyle,</span><br><span class="line">    <span class="attr">showGridLines</span>: <span class="literal">false</span>,</span><br><span class="line">  &#125;; <span class="comment">//写入的样式</span></span><br><span class="line">  <span class="keyword">let</span> wbout = <span class="variable constant_">XLSX</span>.<span class="title function_">write</span>(wb, wopts);</span><br><span class="line">  <span class="keyword">let</span> blob = <span class="keyword">new</span> <span class="title class_">Blob</span>([<span class="title function_">s2ab</span>(wbout)], &#123; <span class="attr">type</span>: <span class="string">&quot;application/octet-stream&quot;</span> &#125;);</span><br><span class="line">  fs.<span class="title function_">saveAs</span>(blob, filename + <span class="string">&quot;.xlsx&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">s2ab</span> = (<span class="params">s</span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">var</span> buf;</span><br><span class="line">  <span class="keyword">if</span> (<span class="keyword">typeof</span> <span class="title class_">ArrayBuffer</span> !== <span class="string">&quot;undefined&quot;</span>) &#123;</span><br><span class="line">    buf = <span class="keyword">new</span> <span class="title class_">ArrayBuffer</span>(s.<span class="property">length</span>);</span><br><span class="line">    <span class="keyword">var</span> view = <span class="keyword">new</span> <span class="title class_">Uint8Array</span>(buf);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i != s.<span class="property">length</span>; ++i) view[i] = s.<span class="title function_">charCodeAt</span>(i) &amp; <span class="number">0xff</span>;</span><br><span class="line">    <span class="keyword">return</span> buf;</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    buf = <span class="keyword">new</span> <span class="title class_">Array</span>(s.<span class="property">length</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i != s.<span class="property">length</span>; ++i) buf[i] = s.<span class="title function_">charCodeAt</span>(i) &amp; <span class="number">0xff</span>;</span><br><span class="line">    <span class="keyword">return</span> buf;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>3.在用导出的文件里引入 xlsx.js 文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div id=&quot;app&quot;&gt;</span><br><span class="line">    &lt;div&gt;&lt;el-button type=&quot;success&quot; @click=&quot;outExcel&quot;&gt;导出excel&lt;/el-button&gt;&lt;/div&gt;</span><br><span class="line">    &lt;el-table :data=&quot;jsonData&quot; stripe style=&quot;width: 100%&quot;&gt;</span><br><span class="line">      &lt;el-table-column prop=&quot;id&quot; label=&quot;学号&quot; width=&quot;180&quot;&gt; &lt;/el-table-column&gt;</span><br><span class="line">      &lt;el-table-column prop=&quot;name&quot; label=&quot;姓名&quot; width=&quot;180&quot;&gt; &lt;/el-table-column&gt;</span><br><span class="line">      &lt;el-table-column prop=&quot;age&quot; label=&quot;年龄&quot;&gt; &lt;/el-table-column&gt;</span><br><span class="line">      &lt;el-table-column prop=&quot;classes&quot; label=&quot;学院&quot;&gt; &lt;/el-table-column&gt;</span><br><span class="line">    &lt;/el-table&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">import &#123; xlsx &#125; from &quot;./utils/xlsx&quot;;</span><br><span class="line"></span><br><span class="line">export default &#123;</span><br><span class="line">  data() &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      jsonData: [</span><br><span class="line">        &#123;</span><br><span class="line">          id: &quot;1&quot;,</span><br><span class="line">          name: &quot;小智&quot;,</span><br><span class="line">          age: 18,</span><br><span class="line">          classes: &quot;商学院&quot;,</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          id: &quot;2&quot;,</span><br><span class="line">          name: &quot;小白&quot;,</span><br><span class="line">          age: 19,</span><br><span class="line">          classes: &quot;商学院&quot;,</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          id: &quot;3&quot;,</span><br><span class="line">          name: &quot;小蓝&quot;,</span><br><span class="line">          age: 12,</span><br><span class="line">          classes: &quot;商学院&quot;,</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          id: &quot;4&quot;,</span><br><span class="line">          name: &quot;小花&quot;,</span><br><span class="line">          age: 14,</span><br><span class="line">          classes: &quot;商学院&quot;,</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          id: &quot;5&quot;,</span><br><span class="line">          name: &quot;小粉&quot;,</span><br><span class="line">          age: 15,</span><br><span class="line">          classes: &quot;商学院&quot;,</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          id: &quot;6&quot;,</span><br><span class="line">          name: &quot;小黄&quot;,</span><br><span class="line">          age: 16,</span><br><span class="line">          classes: &quot;商学院&quot;,</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          id: &quot;7&quot;,</span><br><span class="line">          name: &quot;小红&quot;,</span><br><span class="line">          age: 17,</span><br><span class="line">          classes: &quot;商学院&quot;,</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          id: &quot;8&quot;,</span><br><span class="line">          name: &quot;小黑&quot;,</span><br><span class="line">          age: 19,</span><br><span class="line">          classes: &quot;商学院&quot;,</span><br><span class="line">        &#125;,</span><br><span class="line">      ],</span><br><span class="line">      listHander: &#123;</span><br><span class="line">        id: &quot;学号&quot;,</span><br><span class="line">        name: &quot;姓名&quot;,</span><br><span class="line">        age: &quot;年龄&quot;,</span><br><span class="line">        classes: &quot;学院&quot;,</span><br><span class="line">      &#125;,</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    outExcel() &#123;</span><br><span class="line">      // this.jsonData是要导出的数据内容（表格里的内容），</span><br><span class="line">      // this.listHander对应要导出内容的表头</span><br><span class="line">      // 学生：指向的是excel文件名</span><br><span class="line">      xlsx(this.jsonData, this.listHander, &quot;学生&quot;);</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style&gt;&lt;/style&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;读取-excel-表格&quot;&gt;&lt;a href=&quot;#读取-excel-表格&quot; class=&quot;headerlink&quot; title=&quot;读取 excel 表格&quot;&gt;&lt;/a&gt;读取 excel 表格&lt;/h1&gt;&lt;h2 id=&quot;安装-xlsx&quot;&gt;&lt;a href=&quot;#安装-xlsx&quot; c</summary>
      
    
    
    
    <category term="学习笔记" scheme="https://wade9264.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="Vue" scheme="https://wade9264.github.io/tags/Vue/"/>
    
    <category term="Excel" scheme="https://wade9264.github.io/tags/Excel/"/>
    
  </entry>
  
  <entry>
    <title>WebSocket学习笔记</title>
    <link href="https://wade9264.github.io/posts/ce1ea377.html"/>
    <id>https://wade9264.github.io/posts/ce1ea377.html</id>
    <published>2022-11-03T14:36:15.000Z</published>
    <updated>2023-02-15T10:56:14.219Z</updated>
    
    <content type="html"><![CDATA[<h2 id="为什么需要-WebSocket-？"><a href="#为什么需要-WebSocket-？" class="headerlink" title="为什么需要 WebSocket ？"></a>为什么需要 WebSocket ？</h2><p>WebSocket 与 http 一样，也是一种网络传输协议。那么有 http 协议了为什么还需要 webSocket 呢？</p><blockquote><p>HTTP 中，通信只能由客户端向服务端发起请求。<br>WebSocket，通信既可以从服务端发起请求，也能从客户端发起请求。</p></blockquote><p>HTTP 协议做不到服务器主动向客户端推送信息。这种单向请求的特点，注定了如果服务器有连续的状态变化，客户端要获知就非常麻烦。传统的方式是用 Ajax 轮询，就是在特定的时间间隔，浏览器向服务器发送请求，这样明显浪费资源。</p><h2 id="WebSocket-简介"><a href="#WebSocket-简介" class="headerlink" title="WebSocket 简介"></a>WebSocket 简介</h2><blockquote><p>WebSocket 是 HTML5 开始提供的一种在单个 TCP 连接上进行全双工通讯的协议。<br>允许服务端主动向客户端推送数据，浏览器和服务器只需要一次握手，两者之间就直接可以创建持久性的连接，进行双向数据传输</p></blockquote><p><img src="https://wade1999-images-1307558348.cos.ap-shanghai.myqcloud.com/20210618091522653.png" alt="WebSocket"></p><p>浏览器发起 WebSocket 连接请求，连接建立起来之后，服务端和客户端就可以通过 TCP 连接直接交换数据。<br>连接之后 通过 send（）方法发送数据，通过 onmessage 事件来接受服务器返回的数据。</p><h2 id="WebSocket-特点"><a href="#WebSocket-特点" class="headerlink" title="WebSocket 特点"></a>WebSocket 特点</h2><ol><li>通信可以由客户端和服务端双向发送</li><li>建立在 TCP 链接之上，服务端比较容易实现</li><li>与 HTTP 协议有着良好的兼容性。默认端口也是 80 和 443，并且握手阶段采用 HTTP 协议，因此握手时不容易屏蔽，能通过各种 HTTP 代理服务器</li><li>数据格式比较轻量，性能开销小，通信高效。</li><li>可以发送文本，也可以发送二进制数据</li><li>没有同源限制，客户端可以与任意服务器通信</li><li>协议标识符是 ws（如果加密，则为 wss），服务器网址就是 URL</li></ol><h2 id="WebSocket-属性方法"><a href="#WebSocket-属性方法" class="headerlink" title="WebSocket 属性方法"></a>WebSocket 属性方法</h2><table><thead><tr><th>属性 &amp; 方法</th><th>说明</th></tr></thead><tbody><tr><td>onopen</td><td>连接成功后的回调</td></tr><tr><td>onclose</td><td>连接关闭后的回调</td></tr><tr><td>onerror</td><td>连接失败后的回调</td></tr><tr><td>bufferedAmount</td><td>检查传输数据的大小，当客户端传输大量数据时使用避免网络饱和</td></tr><tr><td>binaryType</td><td>使用二进制的数据类型连接</td></tr><tr><td>protocol</td><td>让服务端知道客户端使用的 WebSocket 协议，可以为空</td></tr><tr><td>url</td><td>WebSocket 的绝对路径</td></tr><tr><td>readyState</td><td>WebSocket 的连接状态<br>0:CONNECTING; 1:OPEN; 2:CLOSING; 3:CLOSED</td></tr><tr><td>close()</td><td>关闭当前连接</td></tr><tr><td>send(data)</td><td>向服务器发送数据</td></tr></tbody></table><h2 id="WebSocket-前端使用"><a href="#WebSocket-前端使用" class="headerlink" title="WebSocket 前端使用"></a>WebSocket 前端使用</h2><blockquote><p><strong>WebSocket(url[, protocols])</strong><br>url: WebSocket API URL,URL 之前需要添加 ws://或者 wss://（类似 http://、https://）<br>protocol: 与服务端定义的协议名称相同，协议的参数例如 XMPP（Extensible Messaging and Presence Protocol）、SOAP（Simple Object Access Protocol）或者自定义协议。</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//先握手，并查看客户端的浏览器是否支持WebSocket协议</span></span><br><span class="line"><span class="keyword">var</span> ws = <span class="keyword">new</span> <span class="title class_">WebSocket</span>(<span class="string">&quot;wss://echo.websocket.org&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//连接发生错误的回调方法</span></span><br><span class="line">ws.<span class="property">onerror</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">  <span class="title function_">alert</span>(<span class="string">&quot;WebSocket连接发生错误&quot;</span>);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//连接成功建立的回调方法</span></span><br><span class="line">ws.<span class="property">onopen</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">  <span class="title function_">alert</span>(<span class="string">&quot;WebSocket连接成功&quot;</span>);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//接收到消息的回调方法，websocket的controller里的onMessage方法session_to传过来的值</span></span><br><span class="line">ws.<span class="property">onmessage</span> = <span class="keyword">function</span> (<span class="params">event</span>) &#123;</span><br><span class="line">  <span class="title function_">alert</span>(event.<span class="property">data</span>);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//连接关闭的回调方法</span></span><br><span class="line">ws.<span class="property">onclose</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">  <span class="title function_">alert</span>(<span class="string">&quot;WebSocket连接关闭&quot;</span>);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//监听窗口关闭事件，当窗口关闭时，主动去关闭websocket连接，防止连接还没断开就关闭窗口，server端会抛异常。</span></span><br><span class="line"><span class="variable language_">window</span>.<span class="property">onbeforeunload</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">  ws.<span class="title function_">close</span>();</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="Vue-封装-WebSocket"><a href="#Vue-封装-WebSocket" class="headerlink" title="Vue 封装 WebSocket"></a>Vue 封装 WebSocket</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="title class_">Socket</span> = <span class="string">&quot;&quot;</span>;</span><br><span class="line"><span class="keyword">let</span> setIntervalWesocketPush = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">let</span> url = <span class="string">&quot;&quot;</span>;</span><br><span class="line"><span class="keyword">let</span> reconnectionNum = <span class="number">0</span>; <span class="comment">// 重连次数</span></span><br><span class="line"><span class="keyword">const</span> limitReconnectionNum = <span class="number">5</span>; <span class="comment">// 最大重连次数</span></span><br><span class="line"><span class="comment">// 建立连接</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">function</span> <span class="title function_">createSocket</span>(<span class="params">urls</span>) &#123;</span><br><span class="line">  url = urls;</span><br><span class="line">  <span class="keyword">if</span> (!<span class="title class_">Socket</span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;建立websocket连接&quot;</span>);</span><br><span class="line">    <span class="built_in">clearInterval</span>(setIntervalWesocketPush);</span><br><span class="line">    <span class="title class_">Socket</span> = <span class="keyword">new</span> <span class="title class_">WebSocket</span>(urls);</span><br><span class="line">    <span class="title class_">Socket</span>.<span class="property">onopen</span> = onopenWS;</span><br><span class="line">    <span class="title class_">Socket</span>.<span class="property">onmessage</span> = im_msg;</span><br><span class="line">    <span class="title class_">Socket</span>.<span class="property">onerror</span> = onerrorWS;</span><br><span class="line">    <span class="title class_">Socket</span>.<span class="property">onclose</span> = oncloseWS;</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="built_in">clearInterval</span>(setIntervalWesocketPush);</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;websocket已连接&quot;</span>);</span><br><span class="line">    <span class="title function_">onopenWS</span>();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 打开WS之后发送心跳</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">function</span> <span class="title function_">onopenWS</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="built_in">clearInterval</span>(setIntervalWesocketPush);</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;已连接&quot;</span>);</span><br><span class="line">  <span class="title function_">sendPing</span>(); <span class="comment">// 发送心跳</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 连接失败重连</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">function</span> <span class="title function_">onerrorWS</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;连接失败&quot;</span>);</span><br><span class="line">  <span class="built_in">clearInterval</span>(setIntervalWesocketPush);</span><br><span class="line">  <span class="title class_">Socket</span>.<span class="title function_">close</span>();</span><br><span class="line">  <span class="title class_">Socket</span> = <span class="string">&quot;&quot;</span>;</span><br><span class="line">  <span class="comment">// createSocket(url) // 重连</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// WS数据接收统一处理</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">function</span> <span class="title function_">im_msg</span>(<span class="params">e</span>) &#123;</span><br><span class="line">  <span class="variable language_">window</span>.<span class="title function_">dispatchEvent</span>(</span><br><span class="line">    <span class="keyword">new</span> <span class="title class_">CustomEvent</span>(<span class="string">&quot;im_msg&quot;</span>, &#123;</span><br><span class="line">      <span class="attr">detail</span>: &#123;</span><br><span class="line">        <span class="attr">data</span>: e,</span><br><span class="line">      &#125;,</span><br><span class="line">    &#125;)</span><br><span class="line">  );</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/** 发送数据 */</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">function</span> <span class="title function_">sendWSPush</span>(<span class="params">obj</span>) &#123;</span><br><span class="line">  <span class="keyword">if</span> (<span class="title class_">Socket</span> !== <span class="literal">null</span> &amp;&amp; <span class="title class_">Socket</span>.<span class="property">readyState</span> === <span class="number">3</span>) &#123;</span><br><span class="line">    <span class="title class_">Socket</span>.<span class="title function_">close</span>();</span><br><span class="line">    <span class="title function_">createSocket</span>(url); <span class="comment">// 重连</span></span><br><span class="line">  &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="title class_">Socket</span>.<span class="property">readyState</span> === <span class="number">1</span>) &#123;</span><br><span class="line">    <span class="title class_">Socket</span>.<span class="title function_">send</span>(<span class="title class_">JSON</span>.<span class="title function_">stringify</span>(obj));</span><br><span class="line">  &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="title class_">Socket</span>.<span class="property">readyState</span> === <span class="number">0</span>) &#123;</span><br><span class="line">    <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">      <span class="title class_">Socket</span>.<span class="title function_">send</span>(<span class="title class_">JSON</span>.<span class="title function_">stringify</span>(obj));</span><br><span class="line">    &#125;, <span class="number">3000</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/** 关闭WS */</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">function</span> <span class="title function_">oncloseWS</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">let</span> i = <span class="number">0</span>;</span><br><span class="line">  <span class="built_in">clearInterval</span>(setIntervalWesocketPush);</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;websocket已断开&quot;</span>);</span><br><span class="line">  setIntervalWesocketPush = <span class="built_in">setInterval</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    reconnectionNum++;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;重连中&quot;</span>, reconnectionNum);</span><br><span class="line">    <span class="title class_">Socket</span> = <span class="string">&quot;&quot;</span>;</span><br><span class="line">    <span class="keyword">if</span> (reconnectionNum &gt; limitReconnectionNum) &#123;</span><br><span class="line">      <span class="title class_">Socket</span> = <span class="string">&quot;&quot;</span>;</span><br><span class="line">      <span class="built_in">clearInterval</span>(setIntervalWesocketPush);</span><br><span class="line">      reconnectionNum = <span class="number">0</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="title function_">createSocket</span>(url); <span class="comment">// 重连</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;, <span class="number">5000</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/** 发送心跳 */</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">function</span> <span class="title function_">sendPing</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="title class_">Socket</span>.<span class="title function_">send</span>(<span class="string">&quot;ping&quot;</span>);</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;心跳包发送成功&quot;</span>);</span><br><span class="line">  setIntervalWesocketPush = <span class="built_in">setInterval</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;连接状态检测中&quot;</span>);</span><br><span class="line">    <span class="title class_">Socket</span>.<span class="title function_">send</span>(<span class="string">&quot;ping&quot;</span>);</span><br><span class="line">  &#125;, <span class="number">5000</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Node-js-实现-WebSocket"><a href="#Node-js-实现-WebSocket" class="headerlink" title="Node.js 实现 WebSocket"></a>Node.js 实现 WebSocket</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> ws = <span class="built_in">require</span>(<span class="string">&quot;ws&quot;</span>); <span class="comment">//引入websocket模块</span></span><br><span class="line"><span class="keyword">let</span> uuid = <span class="built_in">require</span>(<span class="string">&quot;uuid&quot;</span>); <span class="comment">//引入创建唯一id模块</span></span><br><span class="line"><span class="keyword">let</span> socketServer = ws.<span class="property">Server</span>;</span><br><span class="line"><span class="keyword">let</span> clientIndex = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">let</span> wss = <span class="keyword">new</span> <span class="title function_">socketServer</span>(&#123; <span class="attr">port</span>: <span class="number">8090</span> &#125;, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;服务启动, http://127.0.0.1:8090&quot;</span>);</span><br><span class="line">&#125;); <span class="comment">//创建websocketServer实例监听8090端口</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> clients = []; <span class="comment">//创建客户端列表，用于保存客户端及相关连接信息</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 广播所有客户端消息</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span>  &#123;<span class="type">String</span>&#125; type     广播方式(admin为系统消息，user为用户消息)</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span>  &#123;<span class="type">String</span>&#125; message  消息</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span>  &#123;<span class="type">String</span>&#125; nickname 用户昵称，广播方式为admin时可以不存在</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">broadcastSend</span>(<span class="params">type, message, nickname</span>) &#123;</span><br><span class="line">  clients.<span class="title function_">forEach</span>(<span class="keyword">function</span> (<span class="params">v, i</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (v.<span class="property">ws</span>.<span class="property">readyState</span> === ws.<span class="property">OPEN</span>) &#123;</span><br><span class="line">      v.<span class="property">ws</span>.<span class="title function_">send</span>(<span class="title class_">JSON</span>.<span class="title function_">stringify</span>(obj));</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> obj = &#123;</span><br><span class="line">  <span class="title class_">Id</span>: <span class="literal">null</span>,</span><br><span class="line">  <span class="title class_">Equipment</span>: <span class="string">&quot;X1&quot;</span>,</span><br><span class="line">  <span class="title class_">EquipmentName</span>: <span class="string">&quot;里氏硬度计08&quot;</span>,</span><br><span class="line">  <span class="title class_">Ip</span>: <span class="literal">null</span>,</span><br><span class="line">  <span class="title class_">Code</span>: <span class="number">3</span>,</span><br><span class="line">  <span class="title class_">Isok</span>: <span class="literal">true</span>,</span><br><span class="line">  <span class="title class_">Msg</span>: <span class="literal">null</span>,</span><br><span class="line">  <span class="title class_">BarCode</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">  <span class="title class_">EndTime</span>: <span class="literal">null</span>,</span><br><span class="line">  <span class="title class_">StartTime</span>: <span class="literal">null</span>,</span><br><span class="line">  <span class="title class_">IsData</span>: <span class="literal">false</span>,</span><br><span class="line">  <span class="title class_">Obj</span>: &#123;</span><br><span class="line">    硬度值: <span class="number">50</span>,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">//监听连接</span></span><br><span class="line">wss.<span class="title function_">on</span>(<span class="string">&quot;connection&quot;</span>, <span class="keyword">function</span> (<span class="params">ws</span>) &#123;</span><br><span class="line">  <span class="keyword">let</span> client_uuid = uuid.<span class="title function_">v4</span>();</span><br><span class="line">  <span class="keyword">let</span> nickname = <span class="string">`AnonymousUser<span class="subst">$&#123;clientIndex++&#125;</span>`</span>;</span><br><span class="line">  clients.<span class="title function_">push</span>(&#123;</span><br><span class="line">    <span class="attr">id</span>: client_uuid,</span><br><span class="line">    <span class="attr">ws</span>: ws,</span><br><span class="line">    <span class="attr">nickname</span>: nickname,</span><br><span class="line">  &#125;);</span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 关闭服务，从客户端监听列表删除</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="keyword">function</span> <span class="title function_">closeSocket</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; clients.<span class="property">length</span>; i++) &#123;</span><br><span class="line">      <span class="keyword">if</span> (clients[i].<span class="property">id</span> == client_uuid) &#123;</span><br><span class="line">        <span class="keyword">let</span> disconnect_message = <span class="string">`<span class="subst">$&#123;nickname&#125;</span> has disconnected`</span>;</span><br><span class="line">        <span class="title function_">broadcastSend</span>(<span class="string">&quot;notification&quot;</span>, disconnect_message, nickname);</span><br><span class="line">        clients.<span class="title function_">splice</span>(i, <span class="number">1</span>);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//无客户端时</span></span><br><span class="line">    <span class="keyword">if</span> (clients.<span class="property">length</span> == <span class="number">0</span>) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;无客户端连接&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">/*监听消息*/</span></span><br><span class="line">  ws.<span class="title function_">on</span>(<span class="string">&quot;message&quot;</span>, <span class="keyword">function</span> (<span class="params">message</span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> msg = message.<span class="title function_">toString</span>();</span><br><span class="line">    <span class="keyword">if</span> (<span class="title class_">JSON</span>.<span class="title function_">parse</span>(msg).<span class="property">Type</span> !== <span class="string">&quot;ping&quot;</span>) &#123;</span><br><span class="line">      <span class="title function_">broadcastSend</span>(<span class="string">&quot;user&quot;</span>, <span class="string">&quot;接收成功&quot;</span>, nickname);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line">  <span class="comment">/*监听断开连接*/</span></span><br><span class="line">  ws.<span class="title function_">on</span>(<span class="string">&quot;close&quot;</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="title function_">closeSocket</span>();</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;为什么需要-WebSocket-？&quot;&gt;&lt;a href=&quot;#为什么需要-WebSocket-？&quot; class=&quot;headerlink&quot; title=&quot;为什么需要 WebSocket ？&quot;&gt;&lt;/a&gt;为什么需要 WebSocket ？&lt;/h2&gt;&lt;p&gt;WebSocket </summary>
      
    
    
    
    <category term="学习笔记" scheme="https://wade9264.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="JavaScript" scheme="https://wade9264.github.io/tags/JavaScript/"/>
    
    <category term="Vue" scheme="https://wade9264.github.io/tags/Vue/"/>
    
    <category term="WebSocket" scheme="https://wade9264.github.io/tags/WebSocket/"/>
    
    <category term="Node.js" scheme="https://wade9264.github.io/tags/Node-js/"/>
    
  </entry>
  
  <entry>
    <title>在网页中预览zip压缩包中的文件</title>
    <link href="https://wade9264.github.io/posts/ba0bb0.html"/>
    <id>https://wade9264.github.io/posts/ba0bb0.html</id>
    <published>2022-07-01T10:51:27.000Z</published>
    <updated>2023-02-09T14:22:19.268Z</updated>
    
    
    
    
    <category term="JavaScript" scheme="https://wade9264.github.io/categories/JavaScript/"/>
    
    
    <category term="JavaScript" scheme="https://wade9264.github.io/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>通过Canvas实现图片压缩功能</title>
    <link href="https://wade9264.github.io/posts/90124800.html"/>
    <id>https://wade9264.github.io/posts/90124800.html</id>
    <published>2022-06-27T10:36:41.000Z</published>
    <updated>2023-02-15T10:54:36.090Z</updated>
    
    <content type="html"><![CDATA[<h2 id="实现思路"><a href="#实现思路" class="headerlink" title="实现思路"></a>实现思路</h2><p>通过调整图片的<strong>分辨率</strong>或者绘图<strong>质量</strong>来达到图片压缩的效果：</p><ol><li><p>获取上传 Input 中的图片对象 File</p></li><li><p>将图片转换成 base64 格式</p></li><li><p>base64 编码的图片通过 Canvas 转换压缩，这里会用到的 Canvas 的 drawImage 以及 toDataURL 这两个 Api，一个调节图片的分辨率的，一个是调节图片压缩质量并且输出的</p></li><li><p>转换后的图片生成对应的新图片，然后输出</p></li></ol><hr><h2 id="获取上传-Input-中的图片对象-File"><a href="#获取上传-Input-中的图片对象-File" class="headerlink" title="获取上传 Input 中的图片对象 File"></a>获取上传 Input 中的图片对象 File</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 压缩图片</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">File</span>&#125; file : 图片</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">Number</span>&#125; maxSize ：最大文件大小</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">compressImage</span> = (<span class="params">file, maxSize = <span class="number">1024</span> * <span class="number">1024</span> * <span class="number">0.5</span></span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">if</span> (file.<span class="property">size</span> &gt; maxSize) &#123;</span><br><span class="line">    <span class="title function_">canvasDataURL</span>(file, <span class="function">(<span class="params">blob</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;压缩前：&quot;</span> + file.<span class="property">size</span> / <span class="number">1024</span> / <span class="number">1024</span> + <span class="string">&quot;M&quot;</span>);</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;压缩后：&quot;</span> + blob.<span class="property">size</span> / <span class="number">1024</span> / <span class="number">1024</span> + <span class="string">&quot;M&quot;</span>);</span><br><span class="line">      <span class="keyword">const</span> compresFile = <span class="keyword">new</span> <span class="title class_">File</span>([blob], file.<span class="property">name</span>, &#123;</span><br><span class="line">        <span class="attr">type</span>: <span class="string">&quot;image/jpeg&quot;</span>,</span><br><span class="line">      &#125;);</span><br><span class="line">      <span class="comment">// 判断文件是否需要继续压缩</span></span><br><span class="line">      <span class="comment">// if (compresFile.size &gt; maxSize) &#123;</span></span><br><span class="line">      <span class="comment">//   compressImage(compresFile, maxSize);</span></span><br><span class="line">      <span class="comment">// &#125; else &#123;</span></span><br><span class="line">      <span class="comment">//   return compresFile;</span></span><br><span class="line">      <span class="comment">// &#125;</span></span><br><span class="line">      <span class="keyword">return</span> compresFile;</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> file;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><div class="note danger modern"><p>注意：最大文件大小设置过小可能导致无限循环（个人建议为 300kb 以上，最好增加最大循环次数）</p></div><hr><h2 id="通过-canvas-画布实现压缩，并转化为-base64-格式的图片"><a href="#通过-canvas-画布实现压缩，并转化为-base64-格式的图片" class="headerlink" title="通过 canvas 画布实现压缩，并转化为 base64 格式的图片"></a>通过 canvas 画布实现压缩，并转化为 base64 格式的图片</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 通过canvas画布实现压缩，并转化为base64格式的图片</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">File</span>&#125; file : 图片</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">Function</span>&#125; callback ：回调函数</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">canvasDataURL</span>(<span class="params">file, callback</span>) &#123;</span><br><span class="line">  <span class="comment">//压缩转化为base64</span></span><br><span class="line">  <span class="keyword">const</span> reader = <span class="keyword">new</span> <span class="title class_">FileReader</span>(); <span class="comment">//读取文件的对象</span></span><br><span class="line">  reader.<span class="title function_">readAsDataURL</span>(file); <span class="comment">//对文件读取，读取完成后会将内容以base64的形式赋值给result属性</span></span><br><span class="line">  reader.<span class="property">onload</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="comment">//读取完成的钩子</span></span><br><span class="line">    <span class="keyword">const</span> img = <span class="keyword">new</span> <span class="title class_">Image</span>();</span><br><span class="line">    <span class="comment">//先创建canvas画布，再获取canvas画布上的2d绘图环境，通过这个2d绘图环境才可使用绘制API</span></span><br><span class="line">    <span class="keyword">const</span> canvas = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&quot;canvas&quot;</span>); <span class="comment">//创建canvas画布</span></span><br><span class="line">    <span class="keyword">const</span> drawer = canvas.<span class="title function_">getContext</span>(<span class="string">&quot;2d&quot;</span>); <span class="comment">//返回一个在画布上绘制2d图的环境对象，该对象上包含有canvas绘制2d图形的API</span></span><br><span class="line">    img.<span class="property">src</span> = <span class="variable language_">this</span>.<span class="property">result</span>;</span><br><span class="line">    <span class="comment">//图片压缩代码，需要注意的是，img图片渲染是异步的，所以必须在img的onlaod钩子中再进行相应操作</span></span><br><span class="line">    img.<span class="property">onload</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">      <span class="keyword">const</span> quality = <span class="number">0.5</span>; <span class="comment">// 比例、质量</span></span><br><span class="line"></span><br><span class="line">      <span class="comment">// // 通过改变图像尺寸实现压缩</span></span><br><span class="line">      <span class="comment">// canvas.width = img.width * quality;</span></span><br><span class="line">      <span class="comment">// canvas.height = img.height * quality;</span></span><br><span class="line">      <span class="comment">// drawer.drawImage(img, 0, 0, canvas.width, canvas.height);</span></span><br><span class="line">      <span class="comment">// convertBase64UrlToBlob(canvas.toDataURL(&quot;image/jpeg&quot;, 1), callback);</span></span><br><span class="line"></span><br><span class="line">      <span class="comment">// 通过改变图像质量实现压缩</span></span><br><span class="line">      <span class="title function_">convertBase64UrlToBlob</span>(canvas.<span class="title function_">toDataURL</span>(<span class="string">&quot;image/jpeg&quot;</span>, quality), callback);</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="将-base64-格式转化为-Blob-格式"><a href="#将-base64-格式转化为-Blob-格式" class="headerlink" title="将 base64 格式转化为 Blob 格式"></a>将 base64 格式转化为 Blob 格式</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 将base64格式转化为Blob格式</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">string</span>&#125; urlData : urlData格式的数据，通过这个转化为Blob对象</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">Function</span>&#125; callback : 回调函数</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">convertBase64UrlToBlob</span>(<span class="params">urlData, callback</span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> arr = urlData.<span class="title function_">split</span>(<span class="string">&quot;,&quot;</span>);</span><br><span class="line">  <span class="keyword">const</span> mime = arr[<span class="number">0</span>].<span class="title function_">match</span>(<span class="regexp">/:(.*?);/</span>)[<span class="number">1</span>];</span><br><span class="line">  <span class="keyword">const</span> bstr = <span class="title function_">atob</span>(arr[<span class="number">1</span>]); <span class="comment">//atob方法用于解码base64</span></span><br><span class="line">  <span class="comment">// console.log(&quot;将base64进行解码:&quot;,bstr);</span></span><br><span class="line">  <span class="keyword">let</span> n = bstr.<span class="property">length</span>;</span><br><span class="line">  <span class="keyword">const</span> u8arr = <span class="keyword">new</span> <span class="title class_">Uint8Array</span>(n);</span><br><span class="line">  <span class="keyword">while</span> (n--) &#123;</span><br><span class="line">    u8arr[n] = bstr.<span class="title function_">charCodeAt</span>(n);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="title function_">callback</span>(</span><br><span class="line">    <span class="keyword">new</span> <span class="title class_">Blob</span>([u8arr], &#123;</span><br><span class="line">      <span class="attr">type</span>: mime,</span><br><span class="line">    &#125;)</span><br><span class="line">  );</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;实现思路&quot;&gt;&lt;a href=&quot;#实现思路&quot; class=&quot;headerlink&quot; title=&quot;实现思路&quot;&gt;&lt;/a&gt;实现思路&lt;/h2&gt;&lt;p&gt;通过调整图片的&lt;strong&gt;分辨率&lt;/strong&gt;或者绘图&lt;strong&gt;质量&lt;/strong&gt;来达到图片压缩的效果：&lt;</summary>
      
    
    
    
    <category term="学习笔记" scheme="https://wade9264.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="JavaScript" scheme="https://wade9264.github.io/tags/JavaScript/"/>
    
    <category term="Canvas" scheme="https://wade9264.github.io/tags/Canvas/"/>
    
  </entry>
  
  <entry>
    <title>前端实现图片批量下载、并打包成压缩包</title>
    <link href="https://wade9264.github.io/posts/a8a74f38.html"/>
    <id>https://wade9264.github.io/posts/a8a74f38.html</id>
    <published>2022-06-22T11:34:09.000Z</published>
    <updated>2023-02-09T14:22:33.036Z</updated>
    
    
    
    
    <category term="JavaScript" scheme="https://wade9264.github.io/categories/JavaScript/"/>
    
    
    <category term="JavaScript" scheme="https://wade9264.github.io/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>将DOM元素保存为图片</title>
    <link href="https://wade9264.github.io/posts/eb575759.html"/>
    <id>https://wade9264.github.io/posts/eb575759.html</id>
    <published>2022-06-21T08:23:35.000Z</published>
    <updated>2023-02-15T11:01:46.866Z</updated>
    
    <content type="html"><![CDATA[<h2 id="安装-html2canvas"><a href="#安装-html2canvas" class="headerlink" title="安装 html2canvas"></a>安装 html2canvas</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i html2canvas</span><br></pre></td></tr></table></figure><h2 id="引入"><a href="#引入" class="headerlink" title="引入"></a>引入</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> html2canvas <span class="keyword">from</span> <span class="string">&quot;html2canvas&quot;</span>;</span><br></pre></td></tr></table></figure><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;code&quot;&gt;存为图片&lt;/div&gt;</span><br><span class="line">  &lt;button @click=&quot;generateImages&quot;&gt;下载&lt;/button&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">import html2canvas from &quot;html2canvas&quot;;</span><br><span class="line">export default &#123;</span><br><span class="line">  ...</span><br><span class="line">  methods:&#123;</span><br><span class="line">    generateImages() &#123;</span><br><span class="line">      html2canvas(document.querySelector(&quot;.code&quot;)).then((canvas) =&gt; &#123;</span><br><span class="line">        // 生成图片</span><br><span class="line">        const imgUrl = canvas.toDataURL(&quot;image/png&quot;, 1);</span><br><span class="line">        const image = document.createElement(&quot;img&quot;);</span><br><span class="line">        image.src = imgUrl;</span><br><span class="line">        // 显示图片</span><br><span class="line">        const content = document.createElement(&quot;div&quot;);</span><br><span class="line">        content.appendChild(image);</span><br><span class="line">        // 下载图片</span><br><span class="line">        const a = document.createElement(&quot;a&quot;);</span><br><span class="line">        a.href = imgUrl;</span><br><span class="line">        a.download = &quot;图片名称&quot;;</span><br><span class="line">        a.click();</span><br><span class="line">        content.remove();</span><br><span class="line">        a.remove();</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;安装-html2canvas&quot;&gt;&lt;a href=&quot;#安装-html2canvas&quot; class=&quot;headerlink&quot; title=&quot;安装 html2canvas&quot;&gt;&lt;/a&gt;安装 html2canvas&lt;/h2&gt;&lt;figure class=&quot;highlight </summary>
      
    
    
    
    <category term="学习笔记" scheme="https://wade9264.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="JavaScript" scheme="https://wade9264.github.io/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>Vue添加进入、离开、列表过渡动画</title>
    <link href="https://wade9264.github.io/posts/fdb7b858.html"/>
    <id>https://wade9264.github.io/posts/fdb7b858.html</id>
    <published>2022-06-03T14:10:33.000Z</published>
    <updated>2023-02-15T08:15:17.934Z</updated>
    
    <content type="html"><![CDATA[<a class="tag-Link" target="_blank" href="https://v2.cn.vuejs.org/v2/guide/transitions.html"><div class="tag-link-tips">引用站外地址</div><div class="tag-link-bottom"><div class="tag-link-left" style="background-image: url(https://api.iowen.cn/favicon/v2.cn.vuejs.org/v2/guide/transitions.html.png);"></div><div class="tag-link-right"><div class="tag-link-title">官方文档</div><div class="tag-link-sitename">进入/离开 & 列表过渡</div></div><i class="fa-solid fa-angle-right"></i></div></a>]]></content>
    
    
      
      
    <summary type="html">&lt;a class=&quot;tag-Link&quot; target=&quot;_blank&quot; href=&quot;https://v2.cn.vuejs.org/v2/guide/transitions.html&quot;&gt;
	&lt;div class=&quot;tag-link-tips&quot;&gt;引用站外地址&lt;/div&gt;
	&lt;div</summary>
      
    
    
    
    <category term="Vue" scheme="https://wade9264.github.io/categories/Vue/"/>
    
    
    <category term="JavaScript" scheme="https://wade9264.github.io/tags/JavaScript/"/>
    
    <category term="Vue" scheme="https://wade9264.github.io/tags/Vue/"/>
    
  </entry>
  
  <entry>
    <title>通过Highcharts制作简易甘特图</title>
    <link href="https://wade9264.github.io/posts/90077f97.html"/>
    <id>https://wade9264.github.io/posts/90077f97.html</id>
    <published>2022-05-14T14:34:37.000Z</published>
    <updated>2023-02-09T14:22:06.373Z</updated>
    
    
    
    
    <category term="JavaScript" scheme="https://wade9264.github.io/categories/JavaScript/"/>
    
    
    <category term="JavaScript" scheme="https://wade9264.github.io/tags/JavaScript/"/>
    
    <category term="Highcharts" scheme="https://wade9264.github.io/tags/Highcharts/"/>
    
  </entry>
  
  <entry>
    <title>使用Node.js编写爬虫程序</title>
    <link href="https://wade9264.github.io/posts/f9f25371.html"/>
    <id>https://wade9264.github.io/posts/f9f25371.html</id>
    <published>2022-04-16T12:11:54.000Z</published>
    <updated>2023-02-09T14:21:39.383Z</updated>
    
    
    
    
    <category term="Node.js" scheme="https://wade9264.github.io/categories/Node-js/"/>
    
    
    <category term="JavaScript" scheme="https://wade9264.github.io/tags/JavaScript/"/>
    
    <category term="Node.js" scheme="https://wade9264.github.io/tags/Node-js/"/>
    
  </entry>
  
  <entry>
    <title>JS在循环遍历时按同步顺序依次执行异步操作</title>
    <link href="https://wade9264.github.io/posts/7a3e4b9e.html"/>
    <id>https://wade9264.github.io/posts/7a3e4b9e.html</id>
    <published>2022-04-15T11:52:04.000Z</published>
    <updated>2023-02-09T14:23:31.603Z</updated>
    
    
    
    
    <category term="JavaScript" scheme="https://wade9264.github.io/categories/JavaScript/"/>
    
    
    <category term="JavaScript" scheme="https://wade9264.github.io/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>在JavaScript中实现sleep睡眠函数</title>
    <link href="https://wade9264.github.io/posts/b0c81bfe.html"/>
    <id>https://wade9264.github.io/posts/b0c81bfe.html</id>
    <published>2022-04-15T10:29:05.000Z</published>
    <updated>2023-02-09T14:23:37.699Z</updated>
    
    
    
    
    <category term="JavaScript" scheme="https://wade9264.github.io/categories/JavaScript/"/>
    
    
    <category term="JavaScript" scheme="https://wade9264.github.io/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>&lt;el-form&gt;根据选择条件动态控制表单必填项</title>
    <link href="https://wade9264.github.io/posts/a086744a.html"/>
    <id>https://wade9264.github.io/posts/a086744a.html</id>
    <published>2022-04-12T13:44:13.000Z</published>
    <updated>2023-02-02T10:41:04.101Z</updated>
    
    <content type="html"><![CDATA[<h2 id="页面效果"><a href="#页面效果" class="headerlink" title="页面效果"></a>页面效果</h2><blockquote><p>当【来款方式】= 银行来款，【来款银行】必填，选择其他选项，非必填。</p></blockquote><p><img src="https://img-blog.csdnimg.cn/20200605181354448.png" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200605181415889.png" alt="在这里插入图片描述"></p><h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><blockquote><p>rules 判断要写在 el-form-item 中。</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-col</span> <span class="attr">:span</span>=<span class="string">&quot;8&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-form-item</span> <span class="attr">label</span>=<span class="string">&quot;来款方式&quot;</span> <span class="attr">prop</span>=<span class="string">&quot;fIncomeWay&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">eIncomeWay</span> <span class="attr">v-model</span>=<span class="string">&quot;form.fIncomeWay&quot;</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">el-col</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">el-col</span> <span class="attr">:span</span>=<span class="string">&quot;8&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-form-item</span></span></span><br><span class="line"><span class="tag">    <span class="attr">label</span>=<span class="string">&quot;来款银行&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">prop</span>=<span class="string">&quot;fOppositeBank&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">:rules</span>=<span class="string">&quot;form.fIncomeWay == 726 ? rules.fOppositeBank : [&#123;required: false&#125;]&quot;</span></span></span><br><span class="line"><span class="tag">  &gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">el-autocomplete</span></span></span><br><span class="line"><span class="tag">      <span class="attr">class</span>=<span class="string">&quot;inline-input&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">v-model</span>=<span class="string">&quot;form.fOppositeBank&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">:fetch-suggestions</span>=<span class="string">&quot;queryBankSearchAsync&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">value-key</span>=<span class="string">&quot;fOppositeBank&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">:trigger-on-focus</span>=<span class="string">&quot;false&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">:debounce</span>=<span class="string">&quot;300&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">placeholder</span>=<span class="string">&quot;请输入来款银行&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">:maxlength</span>=<span class="string">&quot;50&quot;</span></span></span><br><span class="line"><span class="tag">    &gt;</span><span class="tag">&lt;/<span class="name">el-autocomplete</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">el-col</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">data</span>(<span class="params"></span>)&#123;</span><br><span class="line">  <span class="keyword">return</span>&#123;</span><br><span class="line">    <span class="attr">rules</span>: &#123;</span><br><span class="line"> <span class="attr">fIncomeWay</span>: [</span><br><span class="line">   &#123;</span><br><span class="line">     <span class="attr">required</span>: <span class="literal">true</span>,</span><br><span class="line">     <span class="attr">message</span>: <span class="string">&quot;请选择来款方式&quot;</span>,</span><br><span class="line">     <span class="attr">trigger</span>: [<span class="string">&quot;blur&quot;</span>, <span class="string">&quot;change&quot;</span>]</span><br><span class="line">   &#125;</span><br><span class="line"> ],</span><br><span class="line"> <span class="attr">fOppositeBank</span>: [</span><br><span class="line">   &#123;</span><br><span class="line">     <span class="attr">required</span>: <span class="literal">true</span>,</span><br><span class="line">     <span class="attr">message</span>: <span class="string">&quot;请输入来款银行&quot;</span>,</span><br><span class="line">     <span class="attr">trigger</span>: <span class="string">&quot;blur&quot;</span></span><br><span class="line">   &#125;</span><br><span class="line"> ]</span><br><span class="line">&#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;页面效果&quot;&gt;&lt;a href=&quot;#页面效果&quot; class=&quot;headerlink&quot; title=&quot;页面效果&quot;&gt;&lt;/a&gt;页面效果&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;当【来款方式】= 银行来款，【来款银行】必填，选择其他选项，非必填。&lt;/p&gt;
&lt;/blockquo</summary>
      
    
    
    
    <category term="Element" scheme="https://wade9264.github.io/categories/Element/"/>
    
    
    <category term="Vue" scheme="https://wade9264.github.io/tags/Vue/"/>
    
    <category term="Element" scheme="https://wade9264.github.io/tags/Element/"/>
    
  </entry>
  
  <entry>
    <title>将一维数组按指定长度转为二维数组</title>
    <link href="https://wade9264.github.io/posts/bed71315.html"/>
    <id>https://wade9264.github.io/posts/bed71315.html</id>
    <published>2022-04-12T07:52:06.000Z</published>
    <updated>2023-02-09T14:21:05.225Z</updated>
    
    <content type="html"><![CDATA[<h2 id="定义转换函数"><a href="#定义转换函数" class="headerlink" title="定义转换函数"></a>定义转换函数</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">pages</span>(<span class="params">arr, len</span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> pages = [];</span><br><span class="line">  arr.<span class="title function_">forEach</span>(<span class="function">(<span class="params">item, index</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> page = <span class="title class_">Math</span>.<span class="title function_">floor</span>(index / len);</span><br><span class="line">    <span class="keyword">if</span> (!pages[page]) &#123;</span><br><span class="line">      pages[page] = [];</span><br><span class="line">    &#125;</span><br><span class="line">    pages[page].<span class="title function_">push</span>(item);</span><br><span class="line">  &#125;);</span><br><span class="line">  <span class="keyword">return</span> pages;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用</span></span><br><span class="line"><span class="keyword">const</span> arr = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>];</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">pages</span>(arr, <span class="number">3</span>)); <span class="comment">// [[1, 2, 3], [4, 5, 6], [7, 8, 9]]</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">pages</span>(arr, <span class="number">8</span>)); <span class="comment">// [[1, 2, 3, 4, 5, 6, 7, 8], [9]]</span></span><br></pre></td></tr></table></figure><h2 id="应用场景"><a href="#应用场景" class="headerlink" title="应用场景"></a>应用场景</h2><p>略。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;定义转换函数&quot;&gt;&lt;a href=&quot;#定义转换函数&quot; class=&quot;headerlink&quot; title=&quot;定义转换函数&quot;&gt;&lt;/a&gt;定义转换函数&lt;/h2&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class</summary>
      
    
    
    
    <category term="JavaScript" scheme="https://wade9264.github.io/categories/JavaScript/"/>
    
    
    <category term="JavaScript" scheme="https://wade9264.github.io/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>文字过长超出时显示省略号</title>
    <link href="https://wade9264.github.io/posts/38c6db38.html"/>
    <id>https://wade9264.github.io/posts/38c6db38.html</id>
    <published>2022-03-21T06:57:28.000Z</published>
    <updated>2023-02-15T11:17:34.801Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一行超出显示省略号"><a href="#一行超出显示省略号" class="headerlink" title="一行超出显示省略号"></a>一行超出显示省略号</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">overflow</span>: hidden;</span><br><span class="line"><span class="attribute">white-space</span>: nowrap;</span><br><span class="line"><span class="attribute">text-overflow</span>: ellipsis;</span><br></pre></td></tr></table></figure><style>.test1{width: 200px;background: var(--hl-bg);border: 1px solid var(--heo-fontcolor);overflow: hidden;white-space: nowrap;text-overflow: ellipsis;}</style><div class="test1">效果：超出显示省略号超出显示省略号超出显示省略号超出显示省略号超出显示省略号超出显示省略号超出显示省略号</div><h2 id="两行（多行）超出显示省略号"><a href="#两行（多行）超出显示省略号" class="headerlink" title="两行（多行）超出显示省略号"></a>两行（多行）超出显示省略号</h2><blockquote><p>显示的行数由 line-clamp 样式的值决定。</p></blockquote><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">overflow</span>: hidden;</span><br><span class="line"><span class="attribute">white-space</span>: normal;</span><br><span class="line"><span class="attribute">text-overflow</span>: ellipsis;</span><br><span class="line"><span class="attribute">display</span>: -webkit-box;</span><br><span class="line">-webkit-line-clamp: <span class="number">3</span>;</span><br><span class="line">-webkit-box-orient: vertical;</span><br></pre></td></tr></table></figure><style>.test2{width: 200px;background: var(--hl-bg);border: 1px solid var(--heo-fontcolor);overflow: hidden;white-space: normal;text-overflow: ellipsis;display: -webkit-box;-webkit-line-clamp: 3;-webkit-box-orient: vertical;}</style><div class="test2">效果：超出显示省略号超出显示省略号超出显示省略号超出显示省略号超出显示省略号超出显示省略号超出显示省略号</div><h2 id="JS-判断是否显示了省略号"><a href="#JS-判断是否显示了省略号" class="headerlink" title="JS 判断是否显示了省略号"></a>JS 判断是否显示了省略号</h2><p>有时候我们需要知道是否已经超出，显示了省略号，可以用到<code>clientHeight</code>和<code>scrollHeight</code>的知识：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> cHeight = dom.<span class="property">clientHeight</span>;</span><br><span class="line"><span class="keyword">let</span> sHeight = dom.<span class="property">scrollHeight</span>;</span><br><span class="line"><span class="keyword">if</span> (sHeight &gt; cHeight) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;已经超出显示省略号&quot;</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;没有超出&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>scrollHeight：元素内容的高度，包括由于超出导致的视图中不可见内容。不包含滚动条、边框和外边距。<br>clientHeight：元素内容的可视区的高度，包含内边距，但不包括水平滚动条、边框和外边距。<br>offsetHeight：元素的像素高度，高度包含该元素的垂直内边距和边框，且是一个整数。</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;一行超出显示省略号&quot;&gt;&lt;a href=&quot;#一行超出显示省略号&quot; class=&quot;headerlink&quot; title=&quot;一行超出显示省略号&quot;&gt;&lt;/a&gt;一行超出显示省略号&lt;/h2&gt;&lt;figure class=&quot;highlight css&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td </summary>
      
    
    
    
    <category term="学习笔记" scheme="https://wade9264.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="CSS" scheme="https://wade9264.github.io/tags/CSS/"/>
    
  </entry>
  
  <entry>
    <title>Markdown使用说明</title>
    <link href="https://wade9264.github.io/posts/1f9f495d.html"/>
    <id>https://wade9264.github.io/posts/1f9f495d.html</id>
    <published>2022-01-03T11:04:31.000Z</published>
    <updated>2023-02-15T11:13:50.320Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Markdown-简介"><a href="#Markdown-简介" class="headerlink" title="Markdown 简介"></a>Markdown 简介</h2><blockquote><p>Markdown 是一种轻量级的「标记语言」，它的优点很多，目前也被越来越多的写作爱好者，撰稿者广泛使用。看到这里请不要被「标记」、「语言」所迷惑，Markdown 的语法十分简单。常用的标记符号也不超过十个，这种相对于更为复杂的 HTML 标记语言来说，Markdown 可谓是十分轻量的，学习成本也不需要太多，且一旦熟悉这种语法规则，会有一劳永逸的效果。</p></blockquote><h2 id="为什么要用-MarkDown"><a href="#为什么要用-MarkDown" class="headerlink" title="为什么要用 MarkDown"></a>为什么要用 MarkDown</h2><p>有一天，想随便写点什么，就点开各种操作按键，功能强大的<em>Word</em>，间接想起论文的复杂格式和痛苦，发觉短短的几句话就用<code>.doc .docx</code>来承载实在太过大材小用，而使用<code>.txt</code>又显得不够庄重，即使在<code>Win</code>里记事本是去格式神器。</p><p>刚好这几天搭建了 Hexo 博客，与大多数大型同性社交网路都支持 Markdown，例如 github，简书，coding…….</p><p>发现，在如今越来越标准化的互联网环境下，Markdown 已经算是一套写作标准。在这几乎被 MarkDown 统治的环境下，掌握这一项技能是很重要的，无论是编程的 coder，还是写作的 writer。</p><p>工欲善其事，必先利其器</p><h3 id="创作工具"><a href="#创作工具" class="headerlink" title="创作工具"></a>创作工具</h3><p>既然下定了决心学这一门「标记语言」，就要选择一把好用的武器。在 Mac 平台相较 Win 有更多的选择，例如：</p><ul><li><a href="https://www.typora.io/">Typora</a>：如记事本一般简洁的操作，却可以书写标准 MarkDown，犹如光头般清爽。</li><li><a href="https://bear.app/">Bear</a>:图标好评，界面好评，操作好评，设备之间互联性满分，收费差评。</li><li><a href="https://macdown.uranusjr.com/">Macdown</a>:国产良心软件，免费开源，种草。</li></ul><p>对比了很多编辑软件，最终我还是选择<em>Github</em>出品的<em>Atom</em>搭配插件<em>markdown preview</em>,享受充分的个性化以及实时显示。</p><p>重要的是！</p><p>适配<em>Window</em>!!!</p><p>参考教程：<a href="https://www.jianshu.com/p/ad3e737e5dc2">Atom 与 markdown</a></p><p>进入 Atom 后的操作快捷键：</p><p>windows : <code>ctrl + shift + m</code></p><p>mac : <code>command + shift + m</code></p><h3 id="图床工具"><a href="#图床工具" class="headerlink" title="图床工具"></a>图床工具</h3><p>互联网时代，单纯的文字显得干枯，图片显得极其重要。<br>为了证明文章目标不是刊登在知音读者，就需要插一张图。</p><p><img src="https://upload-images.jianshu.io/upload_images/6402699-09313be5d30c7457.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/440/format/webp" alt="img"></p><p>IMG_1395.jpg</p><p>而选择恰当的图片又是区分专业论文和公众号搞笑推文的只要因素，所以要慎重。</p><p>那么如何让本地图片可以显示在每一台设备？那就需要上传到云端，再以链接的方式添加到*.md*文件中。</p><p>这种操作就需要使用云床，推荐：</p><ul><li><a href="https://sm.ms/">sm.ms</a>：网页版<em>sm.ms</em>还有<em>app</em>版，可以将手机里的图片上传直接返回*.md*格式，很是方便。</li><li><a href="http://weibotuchuang.sinaapp.com/">围脖图床修复计划</a>：网页端插件 图片一拖即可。</li><li><a href="https://sso.qiniu.com/">七牛</a>：开发者云储存 极其稳定 就是靠谱。</li></ul><hr><h2 id="如何使用-MarkDown？"><a href="#如何使用-MarkDown？" class="headerlink" title="如何使用 MarkDown？"></a>如何使用 MarkDown？</h2><h3 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h3><p>代码：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 一级标题</span></span><br><span class="line"><span class="comment">## 二级标题</span></span><br><span class="line"><span class="comment">### 三级标题</span></span><br><span class="line"><span class="comment">#### 四级标题</span></span><br><span class="line"><span class="comment">##### 五级标题</span></span><br><span class="line"><span class="comment">###### 六级标题</span></span><br></pre></td></tr></table></figure><p>效果：</p><h1 id="一级标题"><a href="#一级标题" class="headerlink" title="一级标题"></a>一级标题</h1><h2 id="二级标题"><a href="#二级标题" class="headerlink" title="二级标题"></a>二级标题</h2><h3 id="三级标题"><a href="#三级标题" class="headerlink" title="三级标题"></a>三级标题</h3><h4 id="四级标题"><a href="#四级标题" class="headerlink" title="四级标题"></a>四级标题</h4><h5 id="五级标题"><a href="#五级标题" class="headerlink" title="五级标题"></a>五级标题</h5><h6 id="六级标题"><a href="#六级标题" class="headerlink" title="六级标题"></a>六级标题</h6><h3 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h3><ul><li><p>网页链接</p><ul><li><p>内联</p><ul><li>代码：<code>[百度](www.baidu.com)</code></li><li>效果：</li><li>这是一个<a href="https://link.jianshu.com/?t=www.baidu.com">百度</a>链接</li></ul></li><li><p>引用</p><ul><li><p>代码： <code>这是一个[百度][1]链接 + [1]:www.baidu.com</code></p></li><li><p>效果：</p></li><li><p>这是一个[百度][1]链接 适合同一网址多处引用</p></li></ul><p>  [1]: <a href="http://www.baidu.com/(https://link.jianshu.com?t=http://www.baidu.com/)">www.baidu.com/(https://link.jianshu.com?t=http://www.baidu.com/)</a></p></li></ul></li><li><p>图片链接</p><ul><li><p>本地</p><ul><li>代码：<code>![](/Users/zhangchenyu/Downloads/IMG_1093.JPG)</code></li><li>效果：</li><li><img src="/Users/zhangchenyu/Downloads/IMG_1093.JPG" alt="img"></li></ul></li><li><p>内联</p><ul><li><p>代码：<code>![header](http://upload-images.jianshu.io/upload_images/6402699-76a86ea2e1168545.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)</code></p></li><li><p>效果：</p></li><li><p><img src="https://upload-images.jianshu.io/upload_images/6402699-76a86ea2e1168545.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/640/format/webp" alt="img"></p><p>header</p></li></ul></li></ul><p>但是，图片太大怎么办？</p><ul><li>修改图片大小<ul><li><code>![](http://upload-images.jianshu.io/upload_images/6402699-76a86ea2e1168545.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)</code></li><li>效果：</li><li><img src="https://upload-images.jianshu.io/upload_images/6402699-76a86ea2e1168545.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/640/format/webp" alt="img"></li></ul></li></ul></li></ul><h3 id="强调"><a href="#强调" class="headerlink" title="强调"></a>强调</h3><ul><li>正常</li><li><code>*斜*</code> <em>斜</em></li><li><code>**粗**</code> <strong>粗</strong></li><li><code>***又粗又斜***</code> <strong><em>又粗又斜</em></strong></li><li><code>~~划线~~</code> <del>划线</del></li><li><code>&lt;u&gt;下划线&lt;/u&gt;</code> <u>下划线</u></li></ul><h3 id="分割线"><a href="#分割线" class="headerlink" title="分割线"></a>分割线</h3><p>***、___（3 个星号、底线）<br>华丽丽的分割线~</p><p>代码：<code>***</code></p><hr><p>代码：<code>___</code></p><hr><h3 id="有序列表"><a href="#有序列表" class="headerlink" title="有序列表"></a>有序列表</h3><p>代码：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">0. 打开冰箱门</span><br><span class="line">1. 把大象塞进去</span><br><span class="line">4. 关上冰箱门</span><br></pre></td></tr></table></figure><p>效果：</p><ol><li>打开冰箱门</li><li>关上冰箱门</li><li>把大象塞进去</li></ol><p>可以看出，有序列表的顺序与编号大小有关但是与内容无关。</p><h3 id="无序列表"><a href="#无序列表" class="headerlink" title="无序列表"></a>无序列表</h3><p>代码：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">* 打开冰箱门</span><br><span class="line">     * 把大象塞进去</span><br><span class="line">         * 关上冰箱门</span><br></pre></td></tr></table></figure><p>效果：</p><ul><li>打开冰箱门<ul><li>把大象塞进去<ul><li>关上冰箱门</li></ul></li></ul></li></ul><p>无序列表可以根据<code>Tab</code>键调整，并且 <code>* + -</code>三个符号效果相同。</p><h3 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h3><p>代码：</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt; 打开冰箱门</span><br><span class="line"><span class="meta prompt_">&gt;&gt;</span> 把大象塞进去</span><br><span class="line">&gt;&gt;&gt; 关上冰箱门</span><br></pre></td></tr></table></figure><p>效果：</p><blockquote><p>打开冰箱门</p><blockquote><p>把大象塞进去</p><blockquote><p>关上冰箱门</p></blockquote></blockquote></blockquote><p>可见引用列表与<code>Tab</code>键无关，与<code>&gt;</code>数量有关</p><h3 id="代码区域"><a href="#代码区域" class="headerlink" title="代码区域"></a>代码区域</h3><ul><li><code>Tab</code>键缩进或连续空格</li><li><code>&#39;</code>号或<code>~</code>对应一个一行代码 三个包括区域为代码区域</li></ul><p>用 python 的头文件做示范</p><p>代码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">~~~</span><br><span class="line"><span class="comment">#-*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment">#! /usr/local/bin/python</span></span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line">reload(sys)</span><br><span class="line">sys.setdefaultencoding(<span class="string">&#x27;utf8&#x27;</span>)</span><br><span class="line">~~~</span><br></pre></td></tr></table></figure><p>效果：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#-*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment">#! /usr/local/bin/python</span></span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line">reload(sys)</span><br><span class="line">sys.setdefaultencoding(<span class="string">&#x27;utf8&#x27;</span>)</span><br></pre></td></tr></table></figure><h3 id="图表"><a href="#图表" class="headerlink" title="图表"></a>图表</h3><p>代码：</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">|<span class="params">第一列</span>|第二列|<span class="params">第三列</span>|</span><br><span class="line">----|<span class="params">------</span>|----</span><br><span class="line"><span class="number">1</span> |<span class="params"> 2  </span>| <span class="number">3</span></span><br><span class="line"><span class="number">1</span> |<span class="params"> 2  </span>| <span class="number">3</span></span><br><span class="line"><span class="number">1</span> |<span class="params"> 2  </span>| <span class="number">3</span></span><br></pre></td></tr></table></figure><p>效果:</p><table><thead><tr><th>第一列</th><th>第二列</th><th>第三列</th></tr></thead><tbody><tr><td>1</td><td>2</td><td>3</td></tr><tr><td>1</td><td>2</td><td>3</td></tr><tr><td>1</td><td>2</td><td>3</td></tr></tbody></table><p>代码：</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">|<span class="params">第一列</span>|第二列|<span class="params">第三列</span>|</span><br><span class="line">|<span class="params">:-:</span>|<span class="symbol">:-|-</span><span class="symbol">:|</span></span><br><span class="line">|<span class="params">第一列是居中的</span>|第二列是居左的|<span class="params">第三列是居右的</span>|</span><br></pre></td></tr></table></figure><p>效果:</p><table><thead><tr><th align="center">第一列</th><th align="left">第二列</th><th align="right">第三列</th></tr></thead><tbody><tr><td align="center">第一列是居中的</td><td align="left">第二列是居左的</td><td align="right">第三列是居右的</td></tr></tbody></table><h2 id="4-使用它，爱上它"><a href="#4-使用它，爱上它" class="headerlink" title="4.使用它，爱上它"></a>4.使用它，爱上它</h2><p>无论<br>写一封邮件<br>写一篇博客<br>还是写一篇公众号推文<br>Markdown<br>让文字与图片与其彼此融合</p><p>使用它<br>并爱上它</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;Markdown-简介&quot;&gt;&lt;a href=&quot;#Markdown-简介&quot; class=&quot;headerlink&quot; title=&quot;Markdown 简介&quot;&gt;&lt;/a&gt;Markdown 简介&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;Markdown 是一种轻量级的「标记语言</summary>
      
    
    
    
    <category term="学习笔记" scheme="https://wade9264.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="Markdown" scheme="https://wade9264.github.io/tags/Markdown/"/>
    
  </entry>
  
  <entry>
    <title>Chrome浏览器扩展开发</title>
    <link href="https://wade9264.github.io/posts/870abd39.html"/>
    <id>https://wade9264.github.io/posts/870abd39.html</id>
    <published>2020-06-11T16:00:00.000Z</published>
    <updated>2023-02-09T14:23:10.632Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1-什么是-Chrome-插件"><a href="#1-什么是-Chrome-插件" class="headerlink" title="1. 什么是 Chrome 插件"></a>1. 什么是 Chrome 插件</h3><p>Chrome 插件是一个用 Web 技术开发、用来增强浏览器功能的软件，它其实就是一个由 HTML、CSS、JS、图片等资源组成的一个<a href="https://developer.chrome.com/docs/extensions/mv3/hosting/">.crx</a>后缀的压缩包.</p><p>为什么是 Chrome 插件而不是 Firefox 插件</p><blockquote><ol><li>Chrome 占有率更高，更多人用；</li><li>开发更简单；</li><li>应用场景更广泛，Firefox 插件只能运行在 Firefox 上，而 Chrome 除了 Chrome 浏览器之外，还可以运行在所有 webkit 内核的国产浏览器，比如 360 极速浏览器、360 安全浏览器、搜狗浏览器、QQ 浏览器等等；</li><li>除此之外，Firefox 浏览器也对 Chrome 插件的运行提供了一定的支持；</li></ol></blockquote><h3 id="2-开发与调试"><a href="#2-开发与调试" class="headerlink" title="2.开发与调试"></a>2.开发与调试</h3><p>Chrome 插件没有严格的项目结构要求，只要保证本目录有一个<code>manifest.json</code>即可，也不需要专门的 IDE，普通的 web 开发工具即可。</p><p>从右上角菜单-&gt;更多工具-&gt;扩展程序可以进入 插件管理页面，也可以直接在地址栏输入 <a href="https://chrome//extensions">chrome://extensions</a> 访问。</p><p>勾选<code>开发者模式</code>即可以文件夹的形式直接加载插件，否则只能安装<code>.crx</code>格式的文件。Chrome 要求插件必须从它的 Chrome 应用商店安装，其它任何网站下载的都无法直接安装，所以，其实我们可以把<code>crx</code>文件解压，然后通过开发者模式直接加载。</p><p>开发中，代码有任何改动都必须重新加载插件，只需要在插件管理页按下<code>Ctrl+R</code>即可，以防万一最好还把页面刷新一下。</p><h3 id="3-核心介绍"><a href="#3-核心介绍" class="headerlink" title="3.核心介绍"></a>3.核心介绍</h3><p><code>manifest_version</code>、<code>name</code>、<code>version</code>3 个是必不可少的，<code>description</code>和<code>icons</code>是推荐的</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="comment">// 清单文件的版本，这个必须写，而且必须是2</span></span><br><span class="line">  <span class="attr">&quot;manifest_version&quot;</span><span class="punctuation">:</span> <span class="number">2</span><span class="punctuation">,</span></span><br><span class="line">  <span class="comment">// 插件的名称</span></span><br><span class="line">  <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;demo&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="comment">// 插件的版本</span></span><br><span class="line">  <span class="attr">&quot;version&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1.0.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="comment">// 插件描述</span></span><br><span class="line">  <span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;简单的Chrome扩展demo&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="comment">// 图标，一般偷懒全部用一个尺寸的也没问题</span></span><br><span class="line">  <span class="attr">&quot;icons&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;16&quot;</span><span class="punctuation">:</span> <span class="string">&quot;img/icon.png&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;48&quot;</span><span class="punctuation">:</span> <span class="string">&quot;img/icon.png&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;128&quot;</span><span class="punctuation">:</span> <span class="string">&quot;img/icon.png&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="comment">// 会一直常驻的后台JS或后台页面</span></span><br><span class="line">  <span class="attr">&quot;background&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="comment">// 2种指定方式，如果指定JS，那么会自动生成一个背景页</span></span><br><span class="line">    <span class="attr">&quot;page&quot;</span><span class="punctuation">:</span> <span class="string">&quot;background.html&quot;</span></span><br><span class="line">    <span class="comment">//&quot;scripts&quot;: [&quot;js/background.js&quot;]</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="comment">// 浏览器右上角图标设置，browser_action、page_action、app必须三选一</span></span><br><span class="line">  <span class="attr">&quot;browser_action&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;default_icon&quot;</span><span class="punctuation">:</span> <span class="string">&quot;img/icon.png&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="comment">// 图标悬停时的标题，可选</span></span><br><span class="line">    <span class="attr">&quot;default_title&quot;</span><span class="punctuation">:</span> <span class="string">&quot;这是一个示例Chrome插件&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;default_popup&quot;</span><span class="punctuation">:</span> <span class="string">&quot;popup.html&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="comment">// 当某些特定页面打开才显示的图标</span></span><br><span class="line">  <span class="comment">/*&quot;page_action&quot;:</span></span><br><span class="line"><span class="comment">    &#123;</span></span><br><span class="line"><span class="comment">        &quot;default_icon&quot;: &quot;img/icon.png&quot;,</span></span><br><span class="line"><span class="comment">        &quot;default_title&quot;: &quot;我是pageAction&quot;,</span></span><br><span class="line"><span class="comment">        &quot;default_popup&quot;: &quot;popup.html&quot;</span></span><br><span class="line"><span class="comment">    &#125;,*/</span></span><br><span class="line">  <span class="comment">// 需要直接注入页面的JS</span></span><br><span class="line">  <span class="attr">&quot;content_scripts&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="comment">//&quot;matches&quot;: [&quot;http://*/*&quot;, &quot;https://*/*&quot;],</span></span><br><span class="line">      <span class="comment">// &quot;&lt;all_urls&gt;&quot; 表示匹配所有地址</span></span><br><span class="line">      <span class="attr">&quot;matches&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;&lt;all_urls&gt;&quot;</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">      <span class="comment">// 多个JS按顺序注入</span></span><br><span class="line">      <span class="attr">&quot;js&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;js/jquery-1.8.3.js&quot;</span><span class="punctuation">,</span> <span class="string">&quot;js/content-script.js&quot;</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">      <span class="comment">// JS的注入可以随便一点，但是CSS的注意就要千万小心了，因为一不小心就可能影响全局样式</span></span><br><span class="line">      <span class="attr">&quot;css&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;css/custom.css&quot;</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">      <span class="comment">// 代码注入的时间，可选值： &quot;document_start&quot;, &quot;document_end&quot;, or &quot;document_idle&quot;，最后一个表示页面空闲时，默认document_idle</span></span><br><span class="line">      <span class="attr">&quot;run_at&quot;</span><span class="punctuation">:</span> <span class="string">&quot;document_start&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="comment">// 这里仅仅是为了演示content-script可以配置多个规则</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;matches&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;*://*/*.png&quot;</span><span class="punctuation">,</span> <span class="string">&quot;*://*/*.jpg&quot;</span><span class="punctuation">,</span> <span class="string">&quot;*://*/*.gif&quot;</span><span class="punctuation">,</span> <span class="string">&quot;*://*/*.bmp&quot;</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;js&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;js/show-image-content-size.js&quot;</span><span class="punctuation">]</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">  <span class="comment">// 权限申请</span></span><br><span class="line">  <span class="attr">&quot;permissions&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="string">&quot;contextMenus&quot;</span><span class="punctuation">,</span> <span class="comment">// 右键菜单</span></span><br><span class="line">    <span class="string">&quot;tabs&quot;</span><span class="punctuation">,</span> <span class="comment">// 标签</span></span><br><span class="line">    <span class="string">&quot;notifications&quot;</span><span class="punctuation">,</span> <span class="comment">// 通知</span></span><br><span class="line">    <span class="string">&quot;webRequest&quot;</span><span class="punctuation">,</span> <span class="comment">// web请求</span></span><br><span class="line">    <span class="string">&quot;webRequestBlocking&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="string">&quot;storage&quot;</span><span class="punctuation">,</span> <span class="comment">// 插件本地存储</span></span><br><span class="line">    <span class="string">&quot;http://*/*&quot;</span><span class="punctuation">,</span> <span class="comment">// 可以通过executeScript或者insertCSS访问的网站</span></span><br><span class="line">    <span class="string">&quot;https://*/*&quot;</span> <span class="comment">// 可以通过executeScript或者insertCSS访问的网站</span></span><br><span class="line">  <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">  <span class="comment">// 普通页面能够直接访问的插件资源列表，如果不设置是无法直接访问的</span></span><br><span class="line">  <span class="attr">&quot;web_accessible_resources&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;js/inject.js&quot;</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">  <span class="comment">// 插件主页，这个很重要，不要浪费了这个免费广告位</span></span><br><span class="line">  <span class="attr">&quot;homepage_url&quot;</span><span class="punctuation">:</span> <span class="string">&quot;https://www.baidu.com&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="comment">// 覆盖浏览器默认页面</span></span><br><span class="line">  <span class="attr">&quot;chrome_url_overrides&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="comment">// 覆盖浏览器默认的新标签页</span></span><br><span class="line">    <span class="attr">&quot;newtab&quot;</span><span class="punctuation">:</span> <span class="string">&quot;newtab.html&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="comment">// Chrome40以前的插件配置页写法</span></span><br><span class="line">  <span class="attr">&quot;options_page&quot;</span><span class="punctuation">:</span> <span class="string">&quot;options.html&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="comment">// Chrome40以后的插件配置页写法，如果2个都写，新版Chrome只认后面这一个</span></span><br><span class="line">  <span class="attr">&quot;options_ui&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;page&quot;</span><span class="punctuation">:</span> <span class="string">&quot;options.html&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="comment">// 添加一些默认的样式，推荐使用</span></span><br><span class="line">    <span class="attr">&quot;chrome_style&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="comment">// 向地址栏注册一个关键字以提供搜索建议，只能设置一个关键字</span></span><br><span class="line">  <span class="attr">&quot;omnibox&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;keyword&quot;</span><span class="punctuation">:</span> <span class="string">&quot;go&quot;</span> <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="comment">// 默认语言</span></span><br><span class="line">  <span class="attr">&quot;default_locale&quot;</span><span class="punctuation">:</span> <span class="string">&quot;zh_CN&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="comment">// devtools页面入口，注意只能指向一个HTML文件，不能是JS文件</span></span><br><span class="line">  <span class="attr">&quot;devtools_page&quot;</span><span class="punctuation">:</span> <span class="string">&quot;devtools.html&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h3 id="4-content-scripts"><a href="#4-content-scripts" class="headerlink" title="4.content-scripts"></a>4.content-scripts</h3><p>所谓<a href="https://developer.chrome.com/docs/extensions/mv3/content_scripts/">content-scripts</a>，其实就是 Chrome 插件中向页面注入脚本的一种形式（虽然名为 script，其实还可以包括 css 的），借助<code>content-scripts</code>我们可以实现通过配置的方式轻松向指定页面注入 JS 和 CSS（如果需要动态注入，可以参考下文），最常见的比如：广告屏蔽、页面 CSS 定制，等等。</p><p>示例配置：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="comment">// 需要直接注入页面的JS</span></span><br><span class="line">  <span class="attr">&quot;content_scripts&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="comment">//&quot;matches&quot;: [&quot;http://*/*&quot;, &quot;https://*/*&quot;],</span></span><br><span class="line">      <span class="comment">// &quot;&lt;all_urls&gt;&quot; 表示匹配所有地址</span></span><br><span class="line">      <span class="attr">&quot;matches&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;&lt;all_urls&gt;&quot;</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">      <span class="comment">// 多个JS按顺序注入</span></span><br><span class="line">      <span class="attr">&quot;js&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;js/jquery-1.8.3.js&quot;</span><span class="punctuation">,</span> <span class="string">&quot;js/content-script.js&quot;</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">      <span class="comment">// JS的注入可以随便一点，但是CSS的注意就要千万小心了，因为一不小心就可能影响全局样式</span></span><br><span class="line">      <span class="attr">&quot;css&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;css/custom.css&quot;</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">      <span class="comment">// 代码注入的时间，可选值： &quot;document_start&quot;, &quot;document_end&quot;, or &quot;document_idle&quot;，最后一个表示页面空闲时，默认document_idle</span></span><br><span class="line">      <span class="attr">&quot;run_at&quot;</span><span class="punctuation">:</span> <span class="string">&quot;document_start&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>特别注意，如果没有主动指定<code>run_at</code>为<code>document_start</code>（默认为<code>document_idle</code>），下面这种代码是不会生效的：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">document</span>.<span class="title function_">addEventListener</span>(<span class="string">&quot;DOMContentLoaded&quot;</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;我被执行了！&quot;</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p><code>content-scripts</code>和原始页面共享 DOM，但是不共享 JS，如要访问页面 JS（例如某个 JS 变量），只能通过<code>injected js</code>来实现。<code>content-scripts</code>不能访问绝大部分<code>chrome.xxx.api</code>，除了下面这 4 种：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">chrome.<span class="title function_">extension</span>(getURL, inIncognitoContext, lastError, onRequest, sendRequest);</span><br><span class="line"></span><br><span class="line">chrome.<span class="property">i18n</span>;</span><br><span class="line"></span><br><span class="line">chrome.<span class="title function_">runtime</span>(</span><br><span class="line">  connect,</span><br><span class="line">  getManifest,</span><br><span class="line">  getURL,</span><br><span class="line">  id,</span><br><span class="line">  onConnect,</span><br><span class="line">  onMessage,</span><br><span class="line">  sendMessage</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">chrome.<span class="property">storage</span>;</span><br></pre></td></tr></table></figure><h3 id="5-background"><a href="#5-background" class="headerlink" title="5. background"></a>5. background</h3><p>后台（姑且这么翻译吧），是一个常驻的页面，它的生命周期是插件中所有类型页面中最长的，它随着浏览器的打开而打开，随着浏览器的关闭而关闭，所以通常把需要一直运行的、启动就运行的、全局的代码放在 background 里面。</p><p>background 的权限非常高，几乎可以调用所有的 Chrome 扩展 API（除了 devtools），而且它可以无限制跨域，也就是可以跨域访问任何网站而无需要求对方设置<code>CORS</code>。</p><blockquote><p>经过测试，其实不止是 background，所有的直接通过<code>chrome-extension://id/xx.html</code>这种方式打开的网页都可以无限制跨域。</p></blockquote><p>配置中，<code>background</code>可以通过<code>page</code>指定一张网页，也可以通过<code>scripts</code>直接指定一个 JS，Chrome 会自动为这个 JS 生成一个默认的网页：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="comment">// 会一直常驻的后台JS或后台页面</span></span><br><span class="line">  <span class="attr">&quot;background&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="comment">// 2种指定方式，如果指定JS，那么会自动生成一个背景页</span></span><br><span class="line">    <span class="attr">&quot;page&quot;</span><span class="punctuation">:</span> <span class="string">&quot;background.html&quot;</span></span><br><span class="line">    <span class="comment">//&quot;scripts&quot;: [&quot;js/background.js&quot;]</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p><strong>需要特别说明的是</strong>，虽然你可以通过<code>chrome-extension://xxx/background.html</code>直接打开后台页，但是你打开的后台页和真正一直在后台运行的那个页面不是同一个，换句话说，你可以打开无数个<code>background.html</code>，但是真正在后台常驻的只有一个，而且这个你永远看不到它的界面，只能调试它的代码。</p><h3 id="6-event-pages"><a href="#6-event-pages" class="headerlink" title="6. event-pages"></a>6. event-pages</h3><p>这里顺带介绍一下<a href="https://developer.chrome.com/docs/apps/event_pages/">event-pages</a>，它是一个什么东西呢？鉴于 background 生命周期太长，长时间挂载后台可能会影响性能，所以 Google 又弄一个<code>event-pages</code>，在配置文件上，它与 background 的唯一区别就是多了一个<code>persistent</code>参数：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;background&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;scripts&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;event-page.js&quot;</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;persistent&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>它的生命周期是：在被需要时加载，在空闲时被关闭，什么叫被需要时呢？比如第一次安装、插件更新、有 content-script 向它发送消息，等等。</p><h3 id="7-popup"><a href="#7-popup" class="headerlink" title="7. popup"></a>7. popup</h3><p><code>popup</code>是点击<code>browser_action</code>或者<code>page_action</code>图标时打开的一个小窗口网页，焦点离开网页就立即关闭，一般用来做一些临时性的交互。</p><p><code>popup</code>可以包含任意你想要的 HTML 内容，并且会自适应大小。可以通过<code>default_popup</code>字段来指定 popup 页面，也可以调用<code>setPopup()</code>方法。</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;browser_action&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;default_icon&quot;</span><span class="punctuation">:</span> <span class="string">&quot;img/icon.png&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="comment">// 图标悬停时的标题，可选</span></span><br><span class="line">    <span class="attr">&quot;default_title&quot;</span><span class="punctuation">:</span> <span class="string">&quot;这是一个示例Chrome插件&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;default_popup&quot;</span><span class="punctuation">:</span> <span class="string">&quot;popup.html&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p><strong>需要特别注意的是</strong>，由于单击图标打开 popup，焦点离开又立即关闭，所以 popup 页面的生命周期一般很短，需要长时间运行的代码千万不要写在 popup 里面。</p><p>在权限上，它和 background 非常类似，它们之间最大的不同是生命周期的不同，popup 中可以直接通过<code>chrome.extension.getBackgroundPage()</code>获取 background 的 window 对象。</p><h3 id="8-injected-script"><a href="#8-injected-script" class="headerlink" title="8. injected-script"></a>8. injected-script</h3><p>这里的<code>injected-script</code>是我给它取的，指的是通过 DOM 操作的方式向页面注入的一种 JS。为什么要把这种 JS 单独拿出来讨论呢？又或者说为什么需要通过这种方式注入 JS 呢？</p><p>这是因为<code>content-script</code>有一个很大的“缺陷”，也就是无法访问页面中的 JS，虽然它可以操作 DOM，但是 DOM 却不能调用它，也就是无法在 DOM 中通过绑定事件的方式调用<code>content-script</code>中的代码（包括直接写<code>onclick</code>和<code>addEventListener</code>2 种方式都不行），但是，“在页面上添加一个按钮并调用插件的扩展 API”是一个很常见的需求，那该怎么办呢？其实这就是本小节要讲的。</p><p>在<code>content-script</code>中通过 DOM 方式向页面注入<code>inject-script</code>代码示例：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 向页面注入JS</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">injectCustomJs</span>(<span class="params">jsPath</span>) &#123;</span><br><span class="line">  jsPath = jsPath || <span class="string">&quot;js/inject.js&quot;</span>;</span><br><span class="line">  <span class="keyword">var</span> temp = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&quot;script&quot;</span>);</span><br><span class="line">  temp.<span class="title function_">setAttribute</span>(<span class="string">&quot;type&quot;</span>, <span class="string">&quot;text/javascript&quot;</span>);</span><br><span class="line">  <span class="comment">// 获得的地址类似：chrome-extension://ihcokhadfjfchaeagdoclpnjdiokfakg/js/inject.js</span></span><br><span class="line">  temp.<span class="property">src</span> = chrome.<span class="property">extension</span>.<span class="title function_">getURL</span>(jsPath);</span><br><span class="line">  temp.<span class="property">onload</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="comment">// 放在页面不好看，执行完后移除掉</span></span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">parentNode</span>.<span class="title function_">removeChild</span>(<span class="variable language_">this</span>);</span><br><span class="line">  &#125;;</span><br><span class="line">  <span class="variable language_">document</span>.<span class="property">head</span>.<span class="title function_">appendChild</span>(temp);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>你以为这样就行了？执行一下你会看到如下报错：</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Denying load of chrome-<span class="keyword">extension</span>:<span class="comment">//efbllncjkjiijkppagepehoekjojdclc/js/inject.js. Resources must be listed in the web_accessible_resources manifest key in order to be loaded by pages outside the extension.</span></span><br></pre></td></tr></table></figure><p>意思就是你想要在 web 中直接访问插件中的资源的话必须显示声明才行，配置文件中增加如下：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="comment">// 普通页面能够直接访问的插件资源列表，如果不设置是无法直接访问的</span></span><br><span class="line">    <span class="string">&quot;web_accessible_resources&quot;</span>: [<span class="string">&quot;js/inject.js&quot;</span>],</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>至于<code>inject-script</code>如何调用<code>content-script</code>中的代码，后面我会在专门的一个消息通信章节详细介绍。</p><h3 id="9-homepage-url"><a href="#9-homepage-url" class="headerlink" title="9.homepage_url"></a>9.homepage_url</h3><p>开发者或者插件主页设置，一般会在如下 2 个地方显示：</p><h3 id="10-browserAction-浏览器右上角"><a href="#10-browserAction-浏览器右上角" class="headerlink" title="10. browserAction(浏览器右上角)"></a>10. browserAction(浏览器右上角)</h3><p>通过配置<code>browser_action</code>可以在浏览器的右上角增加一个图标，一个<code>browser_action</code>可以拥有一个图标，一个<code>tooltip</code>，一个<code>badge</code>和一个<code>popup</code>。</p><p>示例配置如下：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">&quot;browser_action&quot;</span><span class="punctuation">:</span></span><br><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;default_icon&quot;</span><span class="punctuation">:</span> <span class="string">&quot;img/icon.png&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;default_title&quot;</span><span class="punctuation">:</span> <span class="string">&quot;这是一个示例Chrome插件&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;default_popup&quot;</span><span class="punctuation">:</span> <span class="string">&quot;popup.html&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h4 id="10-1-图标"><a href="#10-1-图标" class="headerlink" title="10.1 图标"></a>10.1 图标</h4><p><code>browser_action</code>图标推荐使用宽高都为 19 像素的图片，更大的图标会被缩小，格式随意，一般推荐 png，可以通过 manifest 中<code>default_icon</code>字段配置，也可以调用 setIcon()方法。</p><h4 id="10-2-tooltip"><a href="#10-2-tooltip" class="headerlink" title="10.2 tooltip"></a>10.2 tooltip</h4><p>修改<code>browser_action</code>的 manifest 中<code>default_title</code>字段，或者调用<code>setTitle()</code>方法。</p><h4 id="10-3-badge"><a href="#10-3-badge" class="headerlink" title="10.3. badge"></a>10.3. badge</h4><p>所谓<code>badge</code>就是在图标上显示一些文本，可以用来更新一些小的扩展状态提示信息。因为 badge 空间有限，所以只支持 4 个以下的字符（英文 4 个，中文 2 个）。badge 无法通过配置文件来指定，必须通过代码实现，设置 badge 文字和颜色可以分别使用<code>setBadgeText()</code>和<code>setBadgeBackgroundColor()</code>。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">chrome.<span class="property">browserAction</span>.<span class="title function_">setBadgeText</span>(&#123; <span class="attr">text</span>: <span class="string">&quot;new&quot;</span> &#125;);</span><br><span class="line">chrome.<span class="property">browserAction</span>.<span class="title function_">setBadgeBackgroundColor</span>(&#123; <span class="attr">color</span>: [<span class="number">255</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">255</span>] &#125;);</span><br></pre></td></tr></table></figure><p>效果：</p><h3 id="11-pageAction-地址栏右侧"><a href="#11-pageAction-地址栏右侧" class="headerlink" title="11. pageAction(地址栏右侧)"></a>11. pageAction(地址栏右侧)</h3><p>所谓<code>pageAction</code>，指的是只有当某些特定页面打开才显示的图标，它和<code>browserAction</code>最大的区别是一个始终都显示，一个只在特定情况才显示。</p><p>需要特别说明的是早些版本的 Chrome 是将 pageAction 放在地址栏的最右边，左键单击弹出 popup，右键单击则弹出相关默认的选项菜单：</p><p>而新版的 Chrome 更改了这一策略，pageAction 和普通的 browserAction 一样也是放在浏览器右上角，只不过没有点亮时是灰色的，点亮了才是彩色的，灰色时无论左键还是右键单击都是弹出选项：</p><blockquote><p>具体是从哪一版本开始改的没去仔细考究，反正知道 v50.0 的时候还是前者，v58.0 的时候已改为后者。</p></blockquote><p>调整之后的<code>pageAction</code>我们可以简单地把它看成是可以置灰的<code>browserAction</code>。</p><ul><li>chrome.pageAction.show(tabId) 显示图标；</li><li>chrome.pageAction.hide(tabId) 隐藏图标；</li></ul><p>示例(只有打开百度才显示图标)：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// manifest.json</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="string">&quot;page_action&quot;</span>:</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="string">&quot;default_icon&quot;</span>: <span class="string">&quot;img/icon.png&quot;</span>,</span><br><span class="line">        <span class="string">&quot;default_title&quot;</span>: <span class="string">&quot;我是pageAction&quot;</span>,</span><br><span class="line">        <span class="string">&quot;default_popup&quot;</span>: <span class="string">&quot;popup.html&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">&quot;permissions&quot;</span>: [<span class="string">&quot;declarativeContent&quot;</span>]</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// background.js</span></span><br><span class="line">chrome.<span class="property">runtime</span>.<span class="property">onInstalled</span>.<span class="title function_">addListener</span>(<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">    chrome.<span class="property">declarativeContent</span>.<span class="property">onPageChanged</span>.<span class="title function_">removeRules</span>(<span class="literal">undefined</span>, <span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">        chrome.<span class="property">declarativeContent</span>.<span class="property">onPageChanged</span>.<span class="title function_">addRules</span>([</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="attr">conditions</span>: [</span><br><span class="line">                    <span class="comment">// 只有打开百度才显示pageAction</span></span><br><span class="line">                    <span class="keyword">new</span> chrome.<span class="property">declarativeContent</span>.<span class="title class_">PageStateMatcher</span>(&#123;<span class="attr">pageUrl</span>: &#123;<span class="attr">urlContains</span>: <span class="string">&#x27;baidu.com&#x27;</span>&#125;&#125;)</span><br><span class="line">                ],</span><br><span class="line">                <span class="attr">actions</span>: [<span class="keyword">new</span> chrome.<span class="property">declarativeContent</span>.<span class="title class_">ShowPageAction</span>()]</span><br><span class="line">            &#125;</span><br><span class="line">        ]);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>效果图：</p><h3 id="12-右键菜单"><a href="#12-右键菜单" class="headerlink" title="12. 右键菜单"></a>12. 右键菜单</h3><p>通过开发 Chrome 插件可以自定义浏览器的右键菜单，主要是通过<code>chrome.contextMenus</code>API 实现，右键菜单可以出现在不同的上下文，比如普通页面、选中的文字、图片、链接，等等，如果有同一个插件里面定义了多个菜单，Chrome 会自动组合放到以插件名字命名的二级菜单里，如下：</p><h4 id="12-1-最简单的右键菜单示例"><a href="#12-1-最简单的右键菜单示例" class="headerlink" title="12.1 最简单的右键菜单示例"></a>12.1 最简单的右键菜单示例</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// manifest.json</span></span><br><span class="line">&#123;<span class="string">&quot;permissions&quot;</span>: [<span class="string">&quot;contextMenus&quot;</span>]&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// background.js</span></span><br><span class="line">chrome.<span class="property">contextMenus</span>.<span class="title function_">create</span>(&#123;</span><br><span class="line">    <span class="attr">title</span>: <span class="string">&quot;测试右键菜单&quot;</span>,</span><br><span class="line">    <span class="attr">onclick</span>: <span class="keyword">function</span>(<span class="params"></span>)&#123;<span class="title function_">alert</span>(<span class="string">&#x27;您点击了右键菜单！&#x27;</span>);&#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>效果：</p><h4 id="12-2-添加右键百度搜索"><a href="#12-2-添加右键百度搜索" class="headerlink" title="12.2 添加右键百度搜索"></a>12.2 添加右键百度搜索</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// manifest.json</span></span><br><span class="line">&#123;<span class="string">&quot;permissions&quot;</span>: [<span class="string">&quot;contextMenus&quot;</span>， <span class="string">&quot;tabs&quot;</span>]&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// background.js</span></span><br><span class="line">chrome.<span class="property">contextMenus</span>.<span class="title function_">create</span>(&#123;</span><br><span class="line">    <span class="attr">title</span>: <span class="string">&#x27;使用度娘搜索：%s&#x27;</span>, <span class="comment">// %s表示选中的文字</span></span><br><span class="line">    <span class="attr">contexts</span>: [<span class="string">&#x27;selection&#x27;</span>], <span class="comment">// 只有当选中文字时才会出现此右键菜单</span></span><br><span class="line">    <span class="attr">onclick</span>: <span class="keyword">function</span>(<span class="params">params</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 注意不能使用location.href，因为location是属于background的window对象</span></span><br><span class="line">        chrome.<span class="property">tabs</span>.<span class="title function_">create</span>(&#123;<span class="attr">url</span>: <span class="string">&#x27;https://www.baidu.com/s?ie=utf-8&amp;wd=&#x27;</span> + <span class="built_in">encodeURI</span>(params.<span class="property">selectionText</span>)&#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>效果如下：</p><h4 id="12-3-语法说明"><a href="#12-3-语法说明" class="headerlink" title="12.3 语法说明"></a>12.3 语法说明</h4><p>这里只是简单列举一些常用的，完整 API 参见：<a href="https://developer.chrome.com/docs/extensions/reference/contextMenus/">https://developer.chrome.com/extensions/contextMenus</a></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">chrome.<span class="property">contextMenus</span>.<span class="title function_">create</span>(&#123;</span><br><span class="line">    <span class="attr">type</span>: <span class="string">&#x27;normal&#x27;</span>， <span class="comment">// 类型，可选：[&quot;normal&quot;, &quot;checkbox&quot;, &quot;radio&quot;, &quot;separator&quot;]，默认 normal</span></span><br><span class="line">    <span class="attr">title</span>: <span class="string">&#x27;菜单的名字&#x27;</span>, <span class="comment">// 显示的文字，除非为“separator”类型否则此参数必需，如果类型为“selection”，可以使用%s显示选定的文本</span></span><br><span class="line">    <span class="attr">contexts</span>: [<span class="string">&#x27;page&#x27;</span>], <span class="comment">// 上下文环境，可选：[&quot;all&quot;, &quot;page&quot;, &quot;frame&quot;, &quot;selection&quot;, &quot;link&quot;, &quot;editable&quot;, &quot;image&quot;, &quot;video&quot;, &quot;audio&quot;]，默认page</span></span><br><span class="line">    <span class="attr">onclick</span>: <span class="keyword">function</span>(<span class="params"></span>)&#123;&#125;, <span class="comment">// 单击时触发的方法</span></span><br><span class="line">    <span class="attr">parentId</span>: <span class="number">1</span>, <span class="comment">// 右键菜单项的父菜单项ID。指定父菜单项将会使此菜单项成为父菜单项的子菜单</span></span><br><span class="line">    <span class="attr">documentUrlPatterns</span>: <span class="string">&#x27;https://*.baidu.com/*&#x27;</span> <span class="comment">// 只在某些页面显示此右键菜单</span></span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">// 删除某一个菜单项</span></span><br><span class="line">chrome.<span class="property">contextMenus</span>.<span class="title function_">remove</span>(menuItemId)；</span><br><span class="line"><span class="comment">// 删除所有自定义右键菜单</span></span><br><span class="line">chrome.<span class="property">contextMenus</span>.<span class="title function_">removeAll</span>();</span><br><span class="line"><span class="comment">// 更新某一个菜单项</span></span><br><span class="line">chrome.<span class="property">contextMenus</span>.<span class="title function_">update</span>(menuItemId, updateProperties);</span><br></pre></td></tr></table></figure><h4 id="12-4-override-覆盖特定页面"><a href="#12-4-override-覆盖特定页面" class="headerlink" title="12.4 override(覆盖特定页面)"></a>12.4 override(覆盖特定页面)</h4><p>使用<code>override</code>页可以将 Chrome 默认的一些特定页面替换掉，改为使用扩展提供的页面。</p><p>扩展可以替代如下页面：</p><ul><li>历史记录：从工具菜单上点击历史记录时访问的页面，或者从地址栏直接输入 <a href="https://chrome//history">chrome://history</a></li><li>新标签页：当创建新标签的时候访问的页面，或者从地址栏直接输入 <a href="https://chrome//newtab">chrome://newtab</a></li><li>书签：浏览器的书签，或者直接输入 <a href="https://chrome//bookmarks">chrome://bookmarks</a></li></ul><p>注意：</p><ul><li>一个扩展只能替代一个页面；</li><li>不能替代隐身窗口的新标签页；</li><li>网页必须设置 title，否则用户可能会看到网页的 URL，造成困扰；</li></ul><p>下面的截图是默认的新标签页和被扩展替换掉的新标签页。</p><p>代码（注意，一个插件只能替代一个默认页，以下仅为演示）：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;chrome_url_overrides&quot;</span>:</span><br><span class="line">&#123;</span><br><span class="line">    <span class="string">&quot;newtab&quot;</span>: <span class="string">&quot;newtab.html&quot;</span>,</span><br><span class="line">    <span class="string">&quot;history&quot;</span>: <span class="string">&quot;history.html&quot;</span>,</span><br><span class="line">    <span class="string">&quot;bookmarks&quot;</span>: <span class="string">&quot;bookmarks.html&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="13-option-选项页"><a href="#13-option-选项页" class="headerlink" title="13. option(选项页)"></a>13. option(选项页)</h3><p>所谓<code>options</code>页，就是插件的设置页面，有 2 个入口，一个是右键图标有一个“选项”菜单，还有一个在插件管理页面：</p><p>在 Chrome40 以前，options 页面和其它普通页面没什么区别，Chrome40 以后则有了一些变化。</p><p>我们先看老版的<a href="https://developer.chrome.com/docs/extensions/mv3/options/">options</a>：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="comment">// Chrome40以前的插件配置页写法</span></span><br><span class="line">    <span class="string">&quot;options_page&quot;</span>: <span class="string">&quot;options.html&quot;</span>,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这个页面里面的内容就随你自己发挥了，配置之后在插件管理页就会看到一个<code>选项</code>按钮入口，点进去就是打开一个网页，没啥好讲的。</p><p>效果:</p><p>再来看新版的<a href="https://developer.chrome.com/docs/extensions/mv2/options/">optionsV2</a>：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="string">&quot;options_ui&quot;</span>:</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="string">&quot;page&quot;</span>: <span class="string">&quot;options.html&quot;</span>,</span><br><span class="line">        <span class="comment">// 添加一些默认的样式，推荐使用</span></span><br><span class="line">        <span class="string">&quot;chrome_style&quot;</span>: <span class="literal">true</span></span><br><span class="line">    &#125;,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>options.html</code>的代码我们没有任何改动，只是配置文件改了，之后效果如下：</p><p>看起来是不是高大上了？</p><p>几点注意：</p><ul><li>为了兼容，建议 2 种都写，如果都写了，Chrome40 以后会默认读取新版的方式；</li><li>新版 options 中不能使用 alert；</li><li>数据存储建议用 chrome.storage，因为会随用户自动同步；</li></ul><h3 id="14-omnibox"><a href="#14-omnibox" class="headerlink" title="14. omnibox"></a>14. omnibox</h3><p><code>omnibox</code>是向用户提供搜索建议的一种方式。先来看个<code>gif</code>图以便了解一下这东西到底是个什么鬼：</p><p>注册某个关键字以触发插件自己的搜索建议界面，然后可以任意发挥了。</p><p>首先，配置文件如下：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="comment">// 向地址栏注册一个关键字以提供搜索建议，只能设置一个关键字</span></span><br><span class="line">    <span class="string">&quot;omnibox&quot;</span>: &#123; <span class="string">&quot;keyword&quot;</span> : <span class="string">&quot;go&quot;</span> &#125;,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后<code>background.js</code>中注册监听事件：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// omnibox 演示</span></span><br><span class="line">chrome.<span class="property">omnibox</span>.<span class="property">onInputChanged</span>.<span class="title function_">addListener</span>(<span class="function">(<span class="params">text, suggest</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;inputChanged: &quot;</span> + text);</span><br><span class="line">  <span class="keyword">if</span> (!text) <span class="keyword">return</span>;</span><br><span class="line">  <span class="keyword">if</span> (text == <span class="string">&quot;美女&quot;</span>) &#123;</span><br><span class="line">    <span class="title function_">suggest</span>([</span><br><span class="line">      &#123; <span class="attr">content</span>: <span class="string">&quot;中国&quot;</span> + text, <span class="attr">description</span>: <span class="string">&quot;你要找“中国美女”吗？&quot;</span> &#125;,</span><br><span class="line">      &#123; <span class="attr">content</span>: <span class="string">&quot;日本&quot;</span> + text, <span class="attr">description</span>: <span class="string">&quot;你要找“日本美女”吗？&quot;</span> &#125;,</span><br><span class="line">      &#123; <span class="attr">content</span>: <span class="string">&quot;泰国&quot;</span> + text, <span class="attr">description</span>: <span class="string">&quot;你要找“泰国美女或人妖”吗？&quot;</span> &#125;,</span><br><span class="line">      &#123; <span class="attr">content</span>: <span class="string">&quot;韩国&quot;</span> + text, <span class="attr">description</span>: <span class="string">&quot;你要找“韩国美女”吗？&quot;</span> &#125;,</span><br><span class="line">    ]);</span><br><span class="line">  &#125; <span class="keyword">else</span> <span class="keyword">if</span> (text == <span class="string">&quot;微博&quot;</span>) &#123;</span><br><span class="line">    <span class="title function_">suggest</span>([</span><br><span class="line">      &#123; <span class="attr">content</span>: <span class="string">&quot;新浪&quot;</span> + text, <span class="attr">description</span>: <span class="string">&quot;新浪&quot;</span> + text &#125;,</span><br><span class="line">      &#123; <span class="attr">content</span>: <span class="string">&quot;腾讯&quot;</span> + text, <span class="attr">description</span>: <span class="string">&quot;腾讯&quot;</span> + text &#125;,</span><br><span class="line">      &#123; <span class="attr">content</span>: <span class="string">&quot;搜狐&quot;</span> + text, <span class="attr">description</span>: <span class="string">&quot;搜索&quot;</span> + text &#125;,</span><br><span class="line">    ]);</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="title function_">suggest</span>([</span><br><span class="line">      &#123; <span class="attr">content</span>: <span class="string">&quot;百度搜索 &quot;</span> + text, <span class="attr">description</span>: <span class="string">&quot;百度搜索 &quot;</span> + text &#125;,</span><br><span class="line">      &#123; <span class="attr">content</span>: <span class="string">&quot;谷歌搜索 &quot;</span> + text, <span class="attr">description</span>: <span class="string">&quot;谷歌搜索 &quot;</span> + text &#125;,</span><br><span class="line">    ]);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 当用户接收关键字建议时触发</span></span><br><span class="line">chrome.<span class="property">omnibox</span>.<span class="property">onInputEntered</span>.<span class="title function_">addListener</span>(<span class="function">(<span class="params">text</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;inputEntered: &quot;</span> + text);</span><br><span class="line">  <span class="keyword">if</span> (!text) <span class="keyword">return</span>;</span><br><span class="line">  <span class="keyword">var</span> href = <span class="string">&quot;&quot;</span>;</span><br><span class="line">  <span class="keyword">if</span> (text.<span class="title function_">endsWith</span>(<span class="string">&quot;美女&quot;</span>))</span><br><span class="line">    href =</span><br><span class="line">      <span class="string">&quot;http://image.baidu.com/search/index?tn=baiduimage&amp;ie=utf-8&amp;word=&quot;</span> + text;</span><br><span class="line">  <span class="keyword">else</span> <span class="keyword">if</span> (text.<span class="title function_">startsWith</span>(<span class="string">&quot;百度搜索&quot;</span>))</span><br><span class="line">    href =</span><br><span class="line">      <span class="string">&quot;https://www.baidu.com/s?ie=UTF-8&amp;wd=&quot;</span> + text.<span class="title function_">replace</span>(<span class="string">&quot;百度搜索 &quot;</span>, <span class="string">&quot;&quot;</span>);</span><br><span class="line">  <span class="keyword">else</span> <span class="keyword">if</span> (text.<span class="title function_">startsWith</span>(<span class="string">&quot;谷歌搜索&quot;</span>))</span><br><span class="line">    href =</span><br><span class="line">      <span class="string">&quot;https://www.google.com.tw/search?q=&quot;</span> + text.<span class="title function_">replace</span>(<span class="string">&quot;谷歌搜索 &quot;</span>, <span class="string">&quot;&quot;</span>);</span><br><span class="line">  <span class="keyword">else</span> href = <span class="string">&quot;https://www.baidu.com/s?ie=UTF-8&amp;wd=&quot;</span> + text;</span><br><span class="line">  <span class="title function_">openUrlCurrentTab</span>(href);</span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">// 获取当前选项卡ID</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">getCurrentTabId</span>(<span class="params">callback</span>) &#123;</span><br><span class="line">  chrome.<span class="property">tabs</span>.<span class="title function_">query</span>(&#123; <span class="attr">active</span>: <span class="literal">true</span>, <span class="attr">currentWindow</span>: <span class="literal">true</span> &#125;, <span class="keyword">function</span> (<span class="params">tabs</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (callback) <span class="title function_">callback</span>(tabs.<span class="property">length</span> ? tabs[<span class="number">0</span>].<span class="property">id</span> : <span class="literal">null</span>);</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 当前标签打开某个链接</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">openUrlCurrentTab</span>(<span class="params">url</span>) &#123;</span><br><span class="line">  <span class="title function_">getCurrentTabId</span>(<span class="function">(<span class="params">tabId</span>) =&gt;</span> &#123;</span><br><span class="line">    chrome.<span class="property">tabs</span>.<span class="title function_">update</span>(tabId, &#123; <span class="attr">url</span>: url &#125;);</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="15-桌面通知"><a href="#15-桌面通知" class="headerlink" title="15. 桌面通知"></a>15. 桌面通知</h3><p>Chrome 提供了一个<code>chrome.notifications</code>API 以便插件推送桌面通知，暂未找到<code>chrome.notifications</code>和 HTML5 自带的<code>Notification</code>的显著区别及优势。</p><p>在后台 JS 中，无论是使用<code>chrome.notifications</code>还是<code>Notification</code>都不需要申请权限（HTML5 方式需要申请权限），直接使用即可。</p><p>最简单的通知：</p><p>代码：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">chrome.<span class="property">notifications</span>.<span class="title function_">create</span>(<span class="literal">null</span>, &#123;</span><br><span class="line">  <span class="attr">type</span>: <span class="string">&quot;basic&quot;</span>,</span><br><span class="line">  <span class="attr">iconUrl</span>: <span class="string">&quot;img/icon.png&quot;</span>,</span><br><span class="line">  <span class="attr">title</span>: <span class="string">&quot;这是标题&quot;</span>,</span><br><span class="line">  <span class="attr">message</span>: <span class="string">&quot;您刚才点击了自定义右键菜单！&quot;</span>,</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>通知的样式可以很丰富：</p><p>这个没有深入研究，有需要的可以去看官方文档。</p><h3 id="16-5-种类型的-JS-对比"><a href="#16-5-种类型的-JS-对比" class="headerlink" title="16.5 种类型的 JS 对比"></a>16.5 种类型的 JS 对比</h3><p>Chrome 插件的 JS 主要可以分为这 5 类：<code>injected script</code>、<code>content-script</code>、<code>popup js</code>、<code>background js</code>和<code>devtools js</code>，</p><h4 id="16-1-权限对比"><a href="#16-1-权限对比" class="headerlink" title="16.1 权限对比"></a>16.1 权限对比</h4><table><thead><tr><th>JS 种类</th><th>可访问的 API</th><th>DOM 访问情况</th><th>JS 访问情况</th><th>直接跨域</th></tr></thead><tbody><tr><td>injected script</td><td>和普通 JS 无任何差别，不能访问任何扩展 API</td><td>可以访问</td><td>可以访问</td><td>不可以</td></tr><tr><td>content script</td><td>只能访问 extension、runtime 等部分 API</td><td>可以访问</td><td>不可以</td><td>不可以</td></tr><tr><td>popup js</td><td>可访问绝大部分 API，除了 devtools 系列</td><td>不可直接访问</td><td>不可以</td><td>可以</td></tr><tr><td>background js</td><td>可访问绝大部分 API，除了 devtools 系列</td><td>不可直接访问</td><td>不可以</td><td>可以</td></tr><tr><td>devtools js</td><td>只能访问 devtools、extension、runtime 等部分 API</td><td>可以</td><td>可以</td><td>不可以</td></tr></tbody></table><h4 id="16-2-调试方式对比"><a href="#16-2-调试方式对比" class="headerlink" title="16.2 调试方式对比"></a>16.2 调试方式对比</h4><table><thead><tr><th>JS 类型</th><th>调试方式</th><th>图片说明</th></tr></thead><tbody><tr><td>injected script</td><td>直接普通的 F12 即可</td><td>懒得截图</td></tr><tr><td>content-script</td><td>打开 Console,如图切换</td><td></td></tr><tr><td>popup-js</td><td>popup 页面右键审查元素</td><td></td></tr><tr><td>background</td><td>插件管理页点击背景页即可</td><td></td></tr><tr><td>devtools-js</td><td>暂未找到有效方法</td><td>-</td></tr></tbody></table><h3 id="17-消息通信"><a href="#17-消息通信" class="headerlink" title="17.消息通信"></a>17.消息通信</h3><p>通信主页：<a href="https://developer.chrome.com/docs/extensions/mv3/messaging/">https://developer.chrome.com/extensions/messaging</a></p><p>前面我们介绍了 Chrome 插件中存在的 5 种 JS，那么它们之间如何互相通信呢？下面先来系统概况一下，然后再分类细说。需要知道的是，popup 和 background 其实几乎可以视为一种东西，因为它们可访问的 API 都一样、通信机制一样、都可以跨域。</p><h4 id="17-1-互相通信概览"><a href="#17-1-互相通信概览" class="headerlink" title="17.1 互相通信概览"></a>17.1 互相通信概览</h4><p>注：<code>-</code>表示不存在或者无意义，或者待验证。</p><table><thead><tr><th></th><th>injected-script</th><th>content-script</th><th>popup-js</th><th>background-js</th></tr></thead><tbody><tr><td>injected-script</td><td>-</td><td>window.postMessage</td><td>-</td><td>-</td></tr><tr><td>content-script</td><td>window.postMessage</td><td>-</td><td>chrome.runtime.sendMessage chrome.runtime.connect</td><td>chrome.runtime.sendMessage chrome.runtime.connect</td></tr><tr><td>popup-js</td><td>-</td><td>chrome.tabs.sendMessage chrome.tabs.connect</td><td>-</td><td>chrome.extension. getBackgroundPage()</td></tr><tr><td>background-js</td><td>-</td><td>chrome.tabs.sendMessage chrome.tabs.connect</td><td>chrome.extension.getViews</td><td>-</td></tr><tr><td>devtools-js</td><td>chrome.devtools. inspectedWindow.eval</td><td>-</td><td>chrome.runtime.sendMessage</td><td>chrome.runtime.sendMessage</td></tr></tbody></table><h4 id="17-2-通信详细介绍"><a href="#17-2-通信详细介绍" class="headerlink" title="17.2. 通信详细介绍"></a>17.2. 通信详细介绍</h4><h5 id="17-2-1-popup-和-background"><a href="#17-2-1-popup-和-background" class="headerlink" title="17.2.1. popup 和 background"></a>17.2.1. popup 和 background</h5><p>popup 可以直接调用 background 中的 JS 方法，也可以直接访问 background 的 DOM：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// background.js</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">test</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="title function_">alert</span>(<span class="string">&quot;我是background！&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// popup.js</span></span><br><span class="line"><span class="keyword">var</span> bg = chrome.<span class="property">extension</span>.<span class="title function_">getBackgroundPage</span>();</span><br><span class="line">bg.<span class="title function_">test</span>(); <span class="comment">// 访问bg的函数</span></span><br><span class="line"><span class="title function_">alert</span>(bg.<span class="property">document</span>.<span class="property">body</span>.<span class="property">innerHTML</span>); <span class="comment">// 访问bg的DOM</span></span><br></pre></td></tr></table></figure><blockquote><p>小插曲，今天碰到一个情况，发现 popup 无法获取 background 的任何方法，找了半天才发现是因为 background 的 js 报错了，而你如果不主动查看 background 的 js 的话，是看不到错误信息的，特此提醒。</p></blockquote><p>至于<code>background</code>访问<code>popup</code>如下（前提是<code>popup</code>已经打开）：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> views = chrome.<span class="property">extension</span>.<span class="title function_">getViews</span>(&#123; <span class="attr">type</span>: <span class="string">&quot;popup&quot;</span> &#125;);</span><br><span class="line"><span class="keyword">if</span> (views.<span class="property">length</span> &gt; <span class="number">0</span>) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(views[<span class="number">0</span>].<span class="property">location</span>.<span class="property">href</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="17-2-2-popup-或者-bg-向-content-主动发送消息"><a href="#17-2-2-popup-或者-bg-向-content-主动发送消息" class="headerlink" title="17.2.2. popup 或者 bg 向 content 主动发送消息"></a>17.2.2. popup 或者 bg 向 content 主动发送消息</h5><p>background.js 或者 popup.js：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">sendMessageToContentScript</span>(<span class="params">message, callback</span>) &#123;</span><br><span class="line">  chrome.<span class="property">tabs</span>.<span class="title function_">query</span>(&#123; <span class="attr">active</span>: <span class="literal">true</span>, <span class="attr">currentWindow</span>: <span class="literal">true</span> &#125;, <span class="keyword">function</span> (<span class="params">tabs</span>) &#123;</span><br><span class="line">    chrome.<span class="property">tabs</span>.<span class="title function_">sendMessage</span>(tabs[<span class="number">0</span>].<span class="property">id</span>, message, <span class="keyword">function</span> (<span class="params">response</span>) &#123;</span><br><span class="line">      <span class="keyword">if</span> (callback) <span class="title function_">callback</span>(response);</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">sendMessageToContentScript</span>(</span><br><span class="line">  &#123; <span class="attr">cmd</span>: <span class="string">&quot;test&quot;</span>, <span class="attr">value</span>: <span class="string">&quot;你好，我是popup！&quot;</span> &#125;,</span><br><span class="line">  <span class="keyword">function</span> (<span class="params">response</span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;来自content的回复：&quot;</span> + response);</span><br><span class="line">  &#125;</span><br><span class="line">);</span><br></pre></td></tr></table></figure><p><code>content-script.js</code>接收：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">chrome.<span class="property">runtime</span>.<span class="property">onMessage</span>.<span class="title function_">addListener</span>(<span class="keyword">function</span> (<span class="params">request, sender, sendResponse</span>) &#123;</span><br><span class="line">  <span class="comment">// console.log(sender.tab ?&quot;from a content script:&quot; + sender.tab.url :&quot;from the extension&quot;);</span></span><br><span class="line">  <span class="keyword">if</span> (request.<span class="property">cmd</span> == <span class="string">&quot;test&quot;</span>) <span class="title function_">alert</span>(request.<span class="property">value</span>);</span><br><span class="line">  <span class="title function_">sendResponse</span>(<span class="string">&quot;我收到了你的消息！&quot;</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>双方通信直接发送的都是 JSON 对象，不是 JSON 字符串，所以无需解析，很方便（当然也可以直接发送字符串）。</p><blockquote><p>网上有些老代码中用的是<code>chrome.extension.onMessage</code>，没有完全查清二者的区别(貌似是别名)，但是建议统一使用<code>chrome.runtime.onMessage</code>。</p></blockquote><h5 id="17-2-3-content-script-主动发消息给后台"><a href="#17-2-3-content-script-主动发消息给后台" class="headerlink" title="17.2.3. content-script 主动发消息给后台"></a>17.2.3. content-script 主动发消息给后台</h5><p>content-script.js：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">chrome.<span class="property">runtime</span>.<span class="title function_">sendMessage</span>(</span><br><span class="line">  &#123; <span class="attr">greeting</span>: <span class="string">&quot;你好，我是content-script呀，我主动发消息给后台！&quot;</span> &#125;,</span><br><span class="line">  <span class="keyword">function</span> (<span class="params">response</span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;收到来自后台的回复：&quot;</span> + response);</span><br><span class="line">  &#125;</span><br><span class="line">);</span><br></pre></td></tr></table></figure><p>background.js 或者 popup.js：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 监听来自content-script的消息</span></span><br><span class="line">chrome.<span class="property">runtime</span>.<span class="property">onMessage</span>.<span class="title function_">addListener</span>(<span class="keyword">function</span> (<span class="params">request, sender, sendResponse</span>) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;收到来自content-script的消息：&quot;</span>);</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(request, sender, sendResponse);</span><br><span class="line">  <span class="title function_">sendResponse</span>(<span class="string">&quot;我是后台，我已收到你的消息：&quot;</span> + <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(request));</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>注意事项：</p><ul><li>content_scripts 向<code>popup</code>主动发消息的前提是 popup 必须打开！否则需要利用 background 作中转；</li><li>如果 background 和 popup 同时监听，那么它们都可以同时收到消息，但是只有一个可以 sendResponse，一个先发送了，那么另外一个再发送就无效；</li></ul><h5 id="17-2-4-injected-script-和-content-script"><a href="#17-2-4-injected-script-和-content-script" class="headerlink" title="17.2.4. injected script 和 content-script"></a>17.2.4. injected script 和 content-script</h5><p><code>content-script</code>和页面内的脚本（<code>injected-script</code>自然也属于页面内的脚本）之间唯一共享的东西就是页面的 DOM 元素，有 2 种方法可以实现二者通讯：</p><ol><li>可以通过<code>window.postMessage</code>和<code>window.addEventListener</code>来实现二者消息通讯；</li><li>通过自定义 DOM 事件来实现；</li></ol><p>第一种方法（推荐）：</p><p><code>injected-script</code>中：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">window</span>.<span class="title function_">postMessage</span>(&#123; <span class="attr">test</span>: <span class="string">&quot;你好！&quot;</span> &#125;, <span class="string">&quot;*&quot;</span>);</span><br></pre></td></tr></table></figure><p>content script 中：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">window</span>.<span class="title function_">addEventListener</span>(</span><br><span class="line">  <span class="string">&quot;message&quot;</span>,</span><br><span class="line">  <span class="keyword">function</span> (<span class="params">e</span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(e.<span class="property">data</span>);</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="literal">false</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure><p>第二种方法：</p><p><code>injected-script</code>中：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> customEvent = <span class="variable language_">document</span>.<span class="title function_">createEvent</span>(<span class="string">&quot;Event&quot;</span>);</span><br><span class="line">customEvent.<span class="title function_">initEvent</span>(<span class="string">&quot;myCustomEvent&quot;</span>, <span class="literal">true</span>, <span class="literal">true</span>);</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">fireCustomEvent</span>(<span class="params">data</span>) &#123;</span><br><span class="line">  hiddenDiv = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;myCustomEventDiv&quot;</span>);</span><br><span class="line">  hiddenDiv.<span class="property">innerText</span> = data;</span><br><span class="line">  hiddenDiv.<span class="title function_">dispatchEvent</span>(customEvent);</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">fireCustomEvent</span>(<span class="string">&quot;你好，我是普通JS！&quot;</span>);</span><br></pre></td></tr></table></figure><p><code>content-script.js</code>中：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> hiddenDiv = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;myCustomEventDiv&quot;</span>);</span><br><span class="line"><span class="keyword">if</span> (!hiddenDiv) &#123;</span><br><span class="line">  hiddenDiv = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&quot;div&quot;</span>);</span><br><span class="line">  hiddenDiv.<span class="property">style</span>.<span class="property">display</span> = <span class="string">&quot;none&quot;</span>;</span><br><span class="line">  <span class="variable language_">document</span>.<span class="property">body</span>.<span class="title function_">appendChild</span>(hiddenDiv);</span><br><span class="line">&#125;</span><br><span class="line">hiddenDiv.<span class="title function_">addEventListener</span>(<span class="string">&quot;myCustomEvent&quot;</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">var</span> eventData = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;myCustomEventDiv&quot;</span>).<span class="property">innerText</span>;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;收到自定义事件消息：&quot;</span> + eventData);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h4 id="17-3-长连接和短连接"><a href="#17-3-长连接和短连接" class="headerlink" title="17.3. 长连接和短连接"></a>17.3. 长连接和短连接</h4><p>其实上面已经涉及到了，这里再单独说明一下。Chrome 插件中有 2 种通信方式，一个是短连接（<code>chrome.tabs.sendMessage</code>和<code>chrome.runtime.sendMessage</code>），一个是长连接（<code>chrome.tabs.connect</code>和<code>chrome.runtime.connect</code>）。</p><p>短连接的话就是挤牙膏一样，我发送一下，你收到了再回复一下，如果对方不回复，你只能重新发，而长连接类似<code>WebSocket</code>会一直建立连接，双方可以随时互发消息。</p><p>短连接上面已经有代码示例了，这里只讲一下长连接。</p><p>popup.js：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">getCurrentTabId</span>(<span class="function">(<span class="params">tabId</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">var</span> port = chrome.<span class="property">tabs</span>.<span class="title function_">connect</span>(tabId, &#123; <span class="attr">name</span>: <span class="string">&quot;test-connect&quot;</span> &#125;);</span><br><span class="line">  port.<span class="title function_">postMessage</span>(&#123; <span class="attr">question</span>: <span class="string">&quot;你是谁啊？&quot;</span> &#125;);</span><br><span class="line">  port.<span class="property">onMessage</span>.<span class="title function_">addListener</span>(<span class="keyword">function</span> (<span class="params">msg</span>) &#123;</span><br><span class="line">    <span class="title function_">alert</span>(<span class="string">&quot;收到消息：&quot;</span> + msg.<span class="property">answer</span>);</span><br><span class="line">    <span class="keyword">if</span> (msg.<span class="property">answer</span> &amp;&amp; msg.<span class="property">answer</span>.<span class="title function_">startsWith</span>(<span class="string">&quot;我是&quot;</span>)) &#123;</span><br><span class="line">      port.<span class="title function_">postMessage</span>(&#123; <span class="attr">question</span>: <span class="string">&quot;哦，原来是你啊！&quot;</span> &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>content-script.js：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 监听长连接</span></span><br><span class="line">chrome.<span class="property">runtime</span>.<span class="property">onConnect</span>.<span class="title function_">addListener</span>(<span class="keyword">function</span> (<span class="params">port</span>) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(port);</span><br><span class="line">  <span class="keyword">if</span> (port.<span class="property">name</span> == <span class="string">&quot;test-connect&quot;</span>) &#123;</span><br><span class="line">    port.<span class="property">onMessage</span>.<span class="title function_">addListener</span>(<span class="keyword">function</span> (<span class="params">msg</span>) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;收到长连接消息：&quot;</span>, msg);</span><br><span class="line">      <span class="keyword">if</span> (msg.<span class="property">question</span> == <span class="string">&quot;你是谁啊？&quot;</span>)</span><br><span class="line">        port.<span class="title function_">postMessage</span>(&#123; <span class="attr">answer</span>: <span class="string">&quot;我是你爸！&quot;</span> &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h3 id="18-其他重要知识点"><a href="#18-其他重要知识点" class="headerlink" title="18.其他重要知识点"></a>18.其他重要知识点</h3><h4 id="18-1-动态注入或执行-JS"><a href="#18-1-动态注入或执行-JS" class="headerlink" title="18.1. 动态注入或执行 JS"></a>18.1. 动态注入或执行 JS</h4><p>虽然在<code>background</code>和<code>popup</code>中无法直接访问页面 DOM，但是可以通过<code>chrome.tabs.executeScript</code>来执行脚本，从而实现访问 web 页面的 DOM（注意，这种方式也不能直接访问页面 JS）。</p><p>示例<code>manifest.json</code>配置：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="string">&quot;name&quot;</span>: <span class="string">&quot;动态JS注入演示&quot;</span>,</span><br><span class="line">    ...</span><br><span class="line">    <span class="string">&quot;permissions&quot;</span>: [</span><br><span class="line">        <span class="string">&quot;tabs&quot;</span>, <span class="string">&quot;http://*/*&quot;</span>, <span class="string">&quot;https://*/*&quot;</span></span><br><span class="line">    ],</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>JS：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 动态执行JS代码</span></span><br><span class="line">chrome.<span class="property">tabs</span>.<span class="title function_">executeScript</span>(tabId, &#123;</span><br><span class="line">  <span class="attr">code</span>: <span class="string">&#x27;document.body.style.backgroundColor=&quot;red&quot;&#x27;</span>,</span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">// 动态执行JS文件</span></span><br><span class="line">chrome.<span class="property">tabs</span>.<span class="title function_">executeScript</span>(tabId, &#123; <span class="attr">file</span>: <span class="string">&quot;some-script.js&quot;</span> &#125;);</span><br></pre></td></tr></table></figure><h4 id="18-2-动态注入-CSS"><a href="#18-2-动态注入-CSS" class="headerlink" title="18.2. 动态注入 CSS"></a>18.2. 动态注入 CSS</h4><p>示例<code>manifest.json</code>配置：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="string">&quot;name&quot;</span>: <span class="string">&quot;动态CSS注入演示&quot;</span>,</span><br><span class="line">    ...</span><br><span class="line">    <span class="string">&quot;permissions&quot;</span>: [</span><br><span class="line">        <span class="string">&quot;tabs&quot;</span>, <span class="string">&quot;http://*/*&quot;</span>, <span class="string">&quot;https://*/*&quot;</span></span><br><span class="line">    ],</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>JS 代码：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 动态执行CSS代码，TODO，这里有待验证</span></span><br><span class="line">chrome.<span class="property">tabs</span>.<span class="title function_">insertCSS</span>(tabId, &#123; <span class="attr">code</span>: <span class="string">&quot;xxx&quot;</span> &#125;);</span><br><span class="line"><span class="comment">// 动态执行CSS文件</span></span><br><span class="line">chrome.<span class="property">tabs</span>.<span class="title function_">insertCSS</span>(tabId, &#123; <span class="attr">file</span>: <span class="string">&quot;some-style.css&quot;</span> &#125;);</span><br></pre></td></tr></table></figure><h4 id="18-3-获取当前窗口-ID"><a href="#18-3-获取当前窗口-ID" class="headerlink" title="18.3. 获取当前窗口 ID"></a>18.3. 获取当前窗口 ID</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">chrome.<span class="property">windows</span>.<span class="title function_">getCurrent</span>(<span class="keyword">function</span> (<span class="params">currentWindow</span>) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;当前窗口ID：&quot;</span> + currentWindow.<span class="property">id</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h4 id="18-4-获取当前标签页-ID"><a href="#18-4-获取当前标签页-ID" class="headerlink" title="18.4 获取当前标签页 ID"></a>18.4 获取当前标签页 ID</h4><p>一般有 2 种方法：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 获取当前选项卡ID</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">getCurrentTabId</span>(<span class="params">callback</span>) &#123;</span><br><span class="line">  chrome.<span class="property">tabs</span>.<span class="title function_">query</span>(&#123; <span class="attr">active</span>: <span class="literal">true</span>, <span class="attr">currentWindow</span>: <span class="literal">true</span> &#125;, <span class="keyword">function</span> (<span class="params">tabs</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (callback) <span class="title function_">callback</span>(tabs.<span class="property">length</span> ? tabs[<span class="number">0</span>].<span class="property">id</span> : <span class="literal">null</span>);</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>获取当前选项卡 id 的另一种方法，大部分时候都类似，只有少部分时候会不一样（例如当窗口最小化时）</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 获取当前选项卡ID</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">getCurrentTabId2</span>(<span class="params"></span>) &#123;</span><br><span class="line">  chrome.<span class="property">windows</span>.<span class="title function_">getCurrent</span>(<span class="keyword">function</span> (<span class="params">currentWindow</span>) &#123;</span><br><span class="line">    chrome.<span class="property">tabs</span>.<span class="title function_">query</span>(</span><br><span class="line">      &#123; <span class="attr">active</span>: <span class="literal">true</span>, <span class="attr">windowId</span>: currentWindow.<span class="property">id</span> &#125;,</span><br><span class="line">      <span class="keyword">function</span> (<span class="params">tabs</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (callback) <span class="title function_">callback</span>(tabs.<span class="property">length</span> ? tabs[<span class="number">0</span>].<span class="property">id</span> : <span class="literal">null</span>);</span><br><span class="line">      &#125;</span><br><span class="line">    );</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="18-5-本地存储"><a href="#18-5-本地存储" class="headerlink" title="18.5. 本地存储"></a>18.5. 本地存储</h4><p>本地存储建议用<code>chrome.storage</code>而不是普通的<code>localStorage</code>，区别有好几点，个人认为最重要的 2 点区别是：</p><ul><li><code>chrome.storage</code>是针对插件全局的，即使你在<code>background</code>中保存的数据，在<code>content-script</code>也能获取到；</li><li><code>chrome.storage.sync</code>可以跟随当前登录用户自动同步，这台电脑修改的设置会自动同步到其它电脑，很方便，如果没有登录或者未联网则先保存到本地，等登录了再同步至网络；</li></ul><p>需要声明<code>storage</code>权限，有<code>chrome.storage.sync</code>和<code>chrome.storage.local</code>2 种方式可供选择，使用示例如下：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 读取数据，第一个参数是指定要读取的key以及设置默认值</span></span><br><span class="line">chrome.<span class="property">storage</span>.<span class="property">sync</span>.<span class="title function_">get</span>(&#123; <span class="attr">color</span>: <span class="string">&quot;red&quot;</span>, <span class="attr">age</span>: <span class="number">18</span> &#125;, <span class="keyword">function</span> (<span class="params">items</span>) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(items.<span class="property">color</span>, items.<span class="property">age</span>);</span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">// 保存数据</span></span><br><span class="line">chrome.<span class="property">storage</span>.<span class="property">sync</span>.<span class="title function_">set</span>(&#123; <span class="attr">color</span>: <span class="string">&quot;blue&quot;</span> &#125;, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;保存成功！&quot;</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h4 id="18-6-webRequest"><a href="#18-6-webRequest" class="headerlink" title="18.6. webRequest"></a>18.6. webRequest</h4><p>通过 webRequest 系列 API 可以对 HTTP 请求进行任性地修改、定制，这里通过<code>beforeRequest</code>来简单演示一下它的冰山一角：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//manifest.json</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// 权限申请</span></span><br><span class="line">    <span class="string">&quot;permissions&quot;</span>:</span><br><span class="line">    [</span><br><span class="line">        <span class="string">&quot;webRequest&quot;</span>, <span class="comment">// web请求</span></span><br><span class="line">        <span class="string">&quot;webRequestBlocking&quot;</span>, <span class="comment">// 阻塞式web请求</span></span><br><span class="line">        <span class="string">&quot;storage&quot;</span>, <span class="comment">// 插件本地存储</span></span><br><span class="line">        <span class="string">&quot;http://*/*&quot;</span>, <span class="comment">// 可以通过executeScript或者insertCSS访问的网站</span></span><br><span class="line">        <span class="string">&quot;https://*/*&quot;</span> <span class="comment">// 可以通过executeScript或者insertCSS访问的网站</span></span><br><span class="line">    ],</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// background.js</span></span><br><span class="line"><span class="comment">// 是否显示图片</span></span><br><span class="line"><span class="keyword">var</span> showImage;</span><br><span class="line">chrome.<span class="property">storage</span>.<span class="property">sync</span>.<span class="title function_">get</span>(&#123;<span class="attr">showImage</span>: <span class="literal">true</span>&#125;, <span class="keyword">function</span>(<span class="params">items</span>) &#123;</span><br><span class="line">    showImage = items.<span class="property">showImage</span>;</span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">// web请求监听，最后一个参数表示阻塞式，需单独声明权限：webRequestBlocking</span></span><br><span class="line">chrome.<span class="property">webRequest</span>.<span class="property">onBeforeRequest</span>.<span class="title function_">addListener</span>(<span class="function"><span class="params">details</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">// cancel 表示取消本次请求</span></span><br><span class="line">    <span class="keyword">if</span>(!showImage &amp;&amp; details.<span class="property">type</span> == <span class="string">&#x27;image&#x27;</span>) <span class="keyword">return</span> &#123;<span class="attr">cancel</span>: <span class="literal">true</span>&#125;;</span><br><span class="line">    <span class="comment">// 简单的音视频检测</span></span><br><span class="line">    <span class="comment">// 大部分网站视频的type并不是media，且视频做了防下载处理，所以这里仅仅是为了演示效果，无实际意义</span></span><br><span class="line">    <span class="keyword">if</span>(details.<span class="property">type</span> == <span class="string">&#x27;media&#x27;</span>) &#123;</span><br><span class="line">        chrome.<span class="property">notifications</span>.<span class="title function_">create</span>(<span class="literal">null</span>, &#123;</span><br><span class="line">            <span class="attr">type</span>: <span class="string">&#x27;basic&#x27;</span>,</span><br><span class="line">            <span class="attr">iconUrl</span>: <span class="string">&#x27;img/icon.png&#x27;</span>,</span><br><span class="line">            <span class="attr">title</span>: <span class="string">&#x27;检测到音视频&#x27;</span>,</span><br><span class="line">            <span class="attr">message</span>: <span class="string">&#x27;音视频地址：&#x27;</span> + details.<span class="property">url</span>,</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;, &#123;<span class="attr">urls</span>: [<span class="string">&quot;&lt;all_urls&gt;&quot;</span>]&#125;, [<span class="string">&quot;blocking&quot;</span>]);</span><br></pre></td></tr></table></figure><h4 id="18-7-国际化"><a href="#18-7-国际化" class="headerlink" title="18.7. 国际化"></a>18.7. 国际化</h4><p>插件根目录新建一个名为<code>_locales</code>的文件夹，再在下面新建一些语言的文件夹，如<code>en</code>、<code>zh_CN</code>、<code>zh_TW</code>，然后再在每个文件夹放入一个<code>messages.json</code>，同时必须在清单文件中设置<code>default_locale</code>。</p><p><code>_locales\en\messages.json</code>内容：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="string">&quot;pluginDesc&quot;</span>: &#123;<span class="string">&quot;message&quot;</span>: <span class="string">&quot;A simple chrome extension demo&quot;</span>&#125;,</span><br><span class="line">    <span class="string">&quot;helloWorld&quot;</span>: &#123;<span class="string">&quot;message&quot;</span>: <span class="string">&quot;Hello World!&quot;</span>&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>_locales\zh_CN\messages.json</code>内容：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="string">&quot;pluginDesc&quot;</span>: &#123;<span class="string">&quot;message&quot;</span>: <span class="string">&quot;一个简单的Chrome插件demo&quot;</span>&#125;,</span><br><span class="line">    <span class="string">&quot;helloWorld&quot;</span>: &#123;<span class="string">&quot;message&quot;</span>: <span class="string">&quot;你好啊，世界！&quot;</span>&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在<code>manifest.json</code>和<code>CSS</code>文件中通过<code>__MSG_messagename__</code>引入，如：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="string">&quot;description&quot;</span>: <span class="string">&quot;__MSG_pluginDesc__&quot;</span>,</span><br><span class="line">    <span class="comment">// 默认语言</span></span><br><span class="line">    <span class="string">&quot;default_locale&quot;</span>: <span class="string">&quot;zh_CN&quot;</span>,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>JS 中则直接<code>chrome.i18n.getMessage(&quot;helloWorld&quot;)</code>。</p><p>测试时，通过给 chrome 建立一个不同的快捷方式<code>chrome.exe --lang=en</code>来切换语言，如：</p><p><img src="https://upload-images.jianshu.io/upload_images/23753054-f7913a40eac13f49.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/422/format/webp" alt="img"></p><p>英文效果：<img src="https://upload-images.jianshu.io/upload_images/23753054-1fb17212e09cd1ca.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/492/format/webp" alt="img"></p><p>中文效果：<img src="https://upload-images.jianshu.io/upload_images/23753054-a50d43b22cfcdbb9.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/507/format/webp" alt="img"></p><h4 id="18-8-API-总结"><a href="#18-8-API-总结" class="headerlink" title="18.8. API 总结"></a>18.8. API 总结</h4><p>比较常用用的一些 API 系列：</p><ul><li>chrome.tabs</li><li>chrome.runtime</li><li>chrome.webRequest</li><li>chrome.window</li><li>chrome.storage</li><li>chrome.contextMenus</li><li>chrome.devtools</li><li>chrome.extension</li></ul><hr><p>作者：William92<br>链接：<a href="https://www.jianshu.com/p/72727465ab86">https://www.jianshu.com/p/72727465ab86</a><br>来源：简书<br>著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;1-什么是-Chrome-插件&quot;&gt;&lt;a href=&quot;#1-什么是-Chrome-插件&quot; class=&quot;headerlink&quot; title=&quot;1. 什么是 Chrome 插件&quot;&gt;&lt;/a&gt;1. 什么是 Chrome 插件&lt;/h3&gt;&lt;p&gt;Chrome 插件是一个用 We</summary>
      
    
    
    
    <category term="学习笔记" scheme="https://wade9264.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="Chrome" scheme="https://wade9264.github.io/tags/Chrome/"/>
    
  </entry>
  
</feed>
